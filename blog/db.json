{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/livemylife/source/dist/APlayer.min.css","path":"dist/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/dist/APlayer.min.css.map","path":"dist/APlayer.min.css.map","modified":1,"renderable":1},{"_id":"themes/livemylife/source/dist/APlayer.min.js","path":"dist/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/dist/APlayer.min.js.map","path":"dist/APlayer.min.js.map","modified":1,"renderable":1},{"_id":"themes/livemylife/source/dist/music.js","path":"dist/music.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/archive.styl","path":"css/archive.styl","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/beantech.css","path":"css/beantech.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/beantech.min.css","path":"css/beantech.min.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/bootstrap.css","path":"css/bootstrap.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/catalog.styl","path":"css/catalog.styl","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/livemylife.css","path":"css/livemylife.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/rocket.styl","path":"css/rocket.styl","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/scroll.css","path":"css/scroll.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/search.css","path":"css/search.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/signature.styl","path":"css/signature.styl","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/themecolor.css","path":"css/themecolor.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/top.css","path":"css/top.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/viewer.min.css","path":"css/viewer.min.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/wave.css","path":"css/wave.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/widget.styl","path":"css/widget.styl","modified":1,"renderable":1},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/APlayer.min.css","path":"js/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/APlayer.min.css.map","path":"js/APlayer.min.css.map","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/APlayer.min.js.map","path":"js/APlayer.min.js.map","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/APlayer.min.js","path":"js/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/catalog.js","path":"js/catalog.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/hux-blog.js","path":"js/hux-blog.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/langselect.js","path":"js/langselect.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/line.js","path":"js/line.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/ribbonDynamic.js","path":"js/ribbonDynamic.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/mouseclick.js","path":"js/mouseclick.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/scroll.js","path":"js/scroll.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/ziploader.js","path":"js/ziploader.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/images/beside_up.png","path":"css/images/beside_up.png","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/images/beside_up2.png","path":"css/images/beside_up2.png","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/images/beside_up_white.png","path":"css/images/beside_up_white.png","modified":1,"renderable":1},{"_id":"themes/livemylife/source/css/images/beside_up_white2.png","path":"css/images/beside_up_white2.png","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/comment/gitalk.js","path":"js/comment/gitalk.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/comment/gitalk_.js","path":"js/comment/gitalk_.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/viewer/viewer.min.js","path":"js/viewer/viewer.min.js","modified":1,"renderable":1},{"_id":"themes/livemylife/source/js/viewer/pic-viewer.js","path":"js/viewer/pic-viewer.js","modified":1,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/LICENSE","path":"LICENSE","modified":1,"renderable":0},{"_id":"source/music/music.mp3","path":"music/music.mp3","modified":1,"renderable":0},{"_id":"source/img/220923_classmodify/class_bg.webp","path":"img/220923_classmodify/class_bg.webp","modified":1,"renderable":0},{"_id":"source/img/220923_classmodify/ymclass_bg.png","path":"img/220923_classmodify/ymclass_bg.png","modified":1,"renderable":0},{"_id":"source/img/220926_smailsdk/smail_bg.webp","path":"img/220926_smailsdk/smail_bg.webp","modified":1,"renderable":0},{"_id":"source/img/index/index_bg.webp","path":"img/index/index_bg.webp","modified":1,"renderable":0},{"_id":"source/img/other/bottom2top.png","path":"img/other/bottom2top.png","modified":1,"renderable":0},{"_id":"source/img/other/readme_bg.png","path":"img/other/readme_bg.png","modified":1,"renderable":0},{"_id":"source/img/scenery/about_bg4.png","path":"img/scenery/about_bg4.png","modified":1,"renderable":0},{"_id":"source/img/scenery/about_me_bg.png","path":"img/scenery/about_me_bg.png","modified":1,"renderable":0},{"_id":"source/img/scenery/treat_me_to_coffee.png","path":"img/scenery/treat_me_to_coffee.png","modified":1,"renderable":0},{"_id":"source/img/header_img/404_bg.png","path":"img/header_img/404_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/archive_bg.png","path":"img/header_img/archive_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/archive_bg2.png","path":"img/header_img/archive_bg2.png","modified":1,"renderable":0},{"_id":"source/img/header_img/archive_bg3.png","path":"img/header_img/archive_bg3.png","modified":1,"renderable":0},{"_id":"source/img/header_img/categories_bg.png","path":"img/header_img/categories_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/lml_bg.png","path":"img/header_img/lml_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/main_sea_bg.png","path":"img/header_img/main_sea_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/lml_bg8.png","path":"img/header_img/lml_bg8.png","modified":1,"renderable":0},{"_id":"source/img/header_img/newhome_bg.png","path":"img/header_img/newhome_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/tag_bg.png","path":"img/header_img/tag_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/tag_new_bg.png","path":"img/header_img/tag_new_bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/total_bg.png","path":"img/header_img/total_bg.png","modified":1,"renderable":0},{"_id":"source/img/signature/nick-name.png","path":"img/signature/nick-name.png","modified":1,"renderable":0},{"_id":"source/img/header_img/index_new_bg.png","path":"img/header_img/index_new_bg.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"84f35e390633eadc3c78584a28f5f5f8ce7f43a5","modified":1663765629791},{"_id":"source/CNAME","hash":"3a509ddb0fb53de725c6a840d7fad5b072251535","modified":1664109515964},{"_id":"source/404.md","hash":"3bdf0ec6214c65c8e924c8f716fe73f13471ae3c","modified":1664109515964},{"_id":"source/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1664109515964},{"_id":"source/_posts/page-Native信号表.md","hash":"329f40f379dca2396086913a5d73bf4cfdde64c3","modified":1664109515965},{"_id":"source/about/index.md","hash":"5be5da02d2c3e940d50484459f16bfc029be7986","modified":1664109515966},{"_id":"source/_posts/page- 咋们一起修改 class 文件.md","hash":"e2b6beb4712a28c3fef81ee940439c72cf205984","modified":1664121671035},{"_id":"source/archive/index.md","hash":"208b675a24ebce3c19596c4630a3eb24c1dd4d4b","modified":1664109515966},{"_id":"source/categories/index.md","hash":"e6c825c693163506df4841ff58e4cf2bfed5a083","modified":1664109515966},{"_id":"source/_posts/undefined/从smail接入第三方.md","hash":"48e946f86651e83e8574762bbaca09cff99eacb4","modified":1664203594375},{"_id":"source/img/.DS_Store","hash":"e32b5a17280c6097e054e323630ffb4e885a6ec6","modified":1664198110917},{"_id":"source/tags/index.md","hash":"1b41e2f93d8f43d6d0ac3be64d7fd1da1473acc8","modified":1664109515998},{"_id":"source/_posts/undefined/你我字节码.md","hash":"6f662dc19a80a5bcb5390b3ef773715528edd67f","modified":1664124204232},{"_id":"source/img/220923_classmodify/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1664110705365},{"_id":"source/img/220926_smailsdk/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1664198119837},{"_id":"source/img/other/bottom2top.png","hash":"35dbb5fa18be3c15a8027c81a41aa267226e8230","modified":1664109515981},{"_id":"source/img/scenery/treat_me_to_coffee.png","hash":"83619ac3af6e3463a3cb462cb6e31a38543b06e6","modified":1664109515984},{"_id":"source/img/220923_classmodify/class_bg.webp","hash":"a37f0bb77fbcbf74d400e44a9250f606799b6c2f","modified":1664110674619},{"_id":"source/img/scenery/about_bg4.png","hash":"559928668f158e2117a47049ea23caec99387b15","modified":1664109515984},{"_id":"source/img/signature/nick-name.png","hash":"621bb5f186dbaa4b4e7cd6753b3cd4fe0ef812a3","modified":1664109515985},{"_id":"themes/livemylife/_config.yml","hash":"7638a858e59f075c4066eb9ca880f3bce75ccd04","modified":1664109516013},{"_id":"themes/livemylife/languages/cn.yml","hash":"000466cb7c925e03986b8149235c05822f77e868","modified":1664109516014},{"_id":"themes/livemylife/languages/default.yml","hash":"9f7c6711fdee2cf67277baf810c551723be21c22","modified":1664109516014},{"_id":"themes/livemylife/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1664109516013},{"_id":"themes/livemylife/languages/en.yml","hash":"9f7c6711fdee2cf67277baf810c551723be21c22","modified":1664109516014},{"_id":"themes/livemylife/layout/_layout.swig","hash":"1831f3852bb3545e630530318e2be42e5c23aff7","modified":1664109516014},{"_id":"themes/livemylife/layout/404.ejs","hash":"007f4b206b68a000b891115100a0a2992b0732f4","modified":1664109516014},{"_id":"themes/livemylife/layout/about.ejs","hash":"145d53bf1ed755cdcff669eed2c1a1862eb9fb98","modified":1664109516019},{"_id":"themes/livemylife/layout/archive.ejs","hash":"c09dd7bb49a28ec5ac65ef2b4d9f4e0e2c4e31a4","modified":1664109516019},{"_id":"themes/livemylife/layout/keynote.ejs","hash":"a919348ff0eea1e3df368dcb082d2fb5a2d0aca0","modified":1664109516020},{"_id":"themes/livemylife/layout/index.ejs","hash":"aca8ba8a3c52e3497fcf71ab8ad3ec7d2fa13058","modified":1664109516020},{"_id":"themes/livemylife/layout/page.ejs","hash":"205c90e8111e6f7388015fccc7f91d015158a2db","modified":1664109516020},{"_id":"themes/livemylife/layout/layout.ejs","hash":"8be005bb924af5b7fe604ef2c5ff7c903b8e4f69","modified":1664109516020},{"_id":"themes/livemylife/layout/post.ejs","hash":"430bb37ca1ac301469c1be24fd9eddf1f50a32d0","modified":1664109516021},{"_id":"themes/livemylife/layout/categories.ejs","hash":"3b074215b4880c6c5fcc428f586587f8c92d78a2","modified":1664109516020},{"_id":"themes/livemylife/layout/_partial/anchorjs.ejs","hash":"9a9ff58f3767c7d23c029fcb2030ea353824f79a","modified":1664109516014},{"_id":"themes/livemylife/layout/_partial/catalog.ejs","hash":"11db668dce21b88b0648478ad82e053f50f06919","modified":1664109516014},{"_id":"themes/livemylife/layout/tags.ejs","hash":"3bb8d1c43fd018cafd049e9cd2af6586e9596e38","modified":1664118208012},{"_id":"themes/livemylife/layout/_partial/comment.ejs","hash":"7832d23a5d65488e0048ca28c19d75d635a93dab","modified":1664109516015},{"_id":"themes/livemylife/layout/_partial/footer.ejs","hash":"ad43ec694f8f59bee8edf53fc812f36864bbb6a8","modified":1664109516015},{"_id":"themes/livemylife/layout/_partial/header.ejs","hash":"b053ba8e43345e34e33dab9f948fc6075f46dbef","modified":1664109516016},{"_id":"themes/livemylife/layout/_partial/head.ejs","hash":"76889b25d50a38617ccd7474b987f5e38218911d","modified":1664109516015},{"_id":"themes/livemylife/layout/_partial/langselect.ejs","hash":"6ead51e4f41fd08eb086edcf7964431dcb8ded8e","modified":1664109516016},{"_id":"themes/livemylife/layout/_partial/music.ejs","hash":"5acec22a2e417185da0d62290f7581e1f21b7ca4","modified":1664109516016},{"_id":"themes/livemylife/layout/_partial/nav.ejs","hash":"a6e6860aa1aae1c9a3a0fd9760f04955b834c333","modified":1664109516016},{"_id":"themes/livemylife/layout/_partial/pagination.ejs","hash":"1c3f390b60dba1da3d57fb7fa95c0dd96efa99b8","modified":1664109516016},{"_id":"themes/livemylife/layout/_partial/search.ejs","hash":"6f297d6bff4bc50bb88802c11fe1fd1368200bad","modified":1664109516017},{"_id":"themes/livemylife/layout/_partial/socialshare.ejs","hash":"55f93924d5b876ff35d59f27f12d0934d8209806","modified":1664109516017},{"_id":"themes/livemylife/layout/_partial/sidebar.ejs","hash":"693e7199e6cbdd3d1fea8d6726786a43c548bd78","modified":1664109516017},{"_id":"themes/livemylife/layout/_partial/gitter.ejs","hash":"348193932983df5196a3bc49e8b59276d978b09f","modified":1664109516015},{"_id":"themes/livemylife/layout/_widget/featured-tags.ejs","hash":"fa33001a4d3a451d8c68ba1a80f92d049f8dd5a2","modified":1664109516018},{"_id":"themes/livemylife/layout/_partial/tip.ejs","hash":"d535578b4629e830a2518695e9002f4aca115fc3","modified":1664109516018},{"_id":"themes/livemylife/layout/_partial/themecolor.ejs","hash":"c0da1e6af0e15dd1eb4a07fa8be93fa637fca8e8","modified":1664109516017},{"_id":"themes/livemylife/layout/_widget/archive.ejs","hash":"f943d9b3ab48506a290b02aaff9560675588d495","modified":1664109516018},{"_id":"themes/livemylife/source/dist/APlayer.min.css","hash":"fd1d253594e71700e185a9841664e3cbc85501d2","modified":1664109516023},{"_id":"themes/livemylife/layout/_widget/friends-blog.ejs","hash":"d4050312c5dbec1d5d92881a54367176fea4f955","modified":1664109516019},{"_id":"themes/livemylife/layout/_widget/category.ejs","hash":"b80bc8197ad14393ef4d0c47dcf744d666327e65","modified":1664109516018},{"_id":"themes/livemylife/layout/_widget/recent-posts.ejs","hash":"4420ebcb7cfd6e4abc09fb29c63e76a6c5598f14","modified":1664109516019},{"_id":"themes/livemylife/layout/_widget/visitor.ejs","hash":"eae7005b1b62019a08286d7ccf555e9c8d1626ee","modified":1664109516019},{"_id":"themes/livemylife/source/dist/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1664109516024},{"_id":"themes/livemylife/source/dist/music.js","hash":"3eddc21b70a147c96059e2120eb21ec5511b86ca","modified":1664109516024},{"_id":"themes/livemylife/layout/_widget/short-about.ejs","hash":"42f62772bf4611dac7ee0982a77b938627cc4e31","modified":1664109516019},{"_id":"themes/livemylife/source/css/beantech.min.css","hash":"f263cb23c9abf1821dd97e8497e675e0fe3aaa4b","modified":1664109516021},{"_id":"themes/livemylife/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1664109516021},{"_id":"themes/livemylife/source/css/beantech.css","hash":"41966b2359eab150b40aa61b0a8c8676b498b2c1","modified":1664109516021},{"_id":"themes/livemylife/source/css/gitalk.css","hash":"51783fd60dff05e8e339ff83b41504538662f6ca","modified":1664109516022},{"_id":"themes/livemylife/source/css/catalog.styl","hash":"b4b4b71b20d8b6bce185b962c2feb79314b7813c","modified":1664109516022},{"_id":"themes/livemylife/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1664109516022},{"_id":"themes/livemylife/source/dist/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1664109516024},{"_id":"themes/livemylife/source/css/livemylife.css","hash":"1901c580d1f80f02e266ff371dc15d4e5e824a2d","modified":1664109516022},{"_id":"themes/livemylife/source/css/rocket.styl","hash":"d81a811f3b7149b519f8cebf9a9b5719dd4870c0","modified":1664109516023},{"_id":"themes/livemylife/source/css/search.css","hash":"3ff388d8da7e2c5aac7071f2dccda767ec9c5647","modified":1664109516023},{"_id":"themes/livemylife/source/css/signature.styl","hash":"afc37961c8fc8ddb1a31aae16dcaa3ced58b4633","modified":1664109516023},{"_id":"themes/livemylife/source/css/themecolor.css","hash":"2b1c2095577d95dfe92f3e7b924ea3db50e61fab","modified":1664109516023},{"_id":"themes/livemylife/source/css/viewer.min.css","hash":"0e045aa3df1be7d138caa701ec3aa623ccc7a52d","modified":1664109516023},{"_id":"themes/livemylife/source/css/top.css","hash":"0303375fbe2ca942cd3d86f31d12fef9bf5785af","modified":1664109516023},{"_id":"themes/livemylife/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1664109516023},{"_id":"themes/livemylife/source/css/wave.css","hash":"041f3b4a78e2840ba17679cea05fb14bb646722f","modified":1664109516023},{"_id":"themes/livemylife/source/css/scroll.css","hash":"ba16b97532dd6aaec66a82f3c33cc989d361fa7a","modified":1664109516023},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1664109516025},{"_id":"themes/livemylife/source/css/hux-blog.min.css","hash":"93f4295feabb6996ec6e45d8ab7654d9ca6f8745","modified":1664109516022},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1664109516025},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1664109516025},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1664109516025},{"_id":"themes/livemylife/source/js/APlayer.min.css","hash":"fd1d253594e71700e185a9841664e3cbc85501d2","modified":1664109516026},{"_id":"themes/livemylife/source/js/catalog.js","hash":"059f3f31492e5b1a9dddf422a48c32969d247415","modified":1664109516027},{"_id":"themes/livemylife/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1664109516027},{"_id":"themes/livemylife/source/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1664109516026},{"_id":"themes/livemylife/source/js/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1664109516026},{"_id":"themes/livemylife/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1664109516031},{"_id":"themes/livemylife/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1664109516031},{"_id":"themes/livemylife/source/js/langselect.js","hash":"52ca6e30814272bc329868944f528f89630404e4","modified":1664109516032},{"_id":"themes/livemylife/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1664109516032},{"_id":"themes/livemylife/source/js/mouseclick.js","hash":"b27fb5ae779a855a93b85c923f1ac927ba52dc86","modified":1664109516033},{"_id":"themes/livemylife/source/js/ribbonDynamic.js","hash":"576f0ce237c87738277868489af30b6538681201","modified":1664109516033},{"_id":"themes/livemylife/source/js/scroll.js","hash":"265a4c4fc33b5b44b620db64ff31d2bc05d233e9","modified":1664109516033},{"_id":"themes/livemylife/source/js/line.js","hash":"d69576bfe75048345a137c148ffca1d9985811dc","modified":1664109516033},{"_id":"themes/livemylife/source/css/images/beside_up.png","hash":"183d87f1a99e93fc663ec798fa8c94cb87c83bcb","modified":1664109516022},{"_id":"themes/livemylife/source/js/ziploader.js","hash":"9c25324caf53b56cb68839dcfb34e61e5a6a63f3","modified":1664109516033},{"_id":"themes/livemylife/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1664109516033},{"_id":"themes/livemylife/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1664109516032},{"_id":"themes/livemylife/source/css/images/beside_up2.png","hash":"ef066ba2e93a4738df45ae05020726e066c4dd1f","modified":1664109516022},{"_id":"themes/livemylife/source/css/images/beside_up_white.png","hash":"49c5922a8de63dcf9468fbcffc70d2ec36b1b527","modified":1664109516022},{"_id":"themes/livemylife/source/js/viewer/pic-viewer.js","hash":"9bf7c37cce781628346803ed7ce8f02623c2d013","modified":1664109516033},{"_id":"themes/livemylife/source/js/viewer/viewer.min.js","hash":"ae5380974b6fb8b0e15356c8418186c6c0821222","modified":1664109516033},{"_id":"source/img/scenery/about_me_bg.png","hash":"ae8aaed9a824b5bb66388495d2b40979e57ebe7a","modified":1664109515984},{"_id":"source/img/header_img/main_sea_bg.png","hash":"d87fb98fd15e51e63d8f153bfe9f61ab7898002b","modified":1664109515979},{"_id":"themes/livemylife/source/css/images/beside_up_white2.png","hash":"52e9d5715def1d3d09ab076d5eb3d22916d8f7d7","modified":1664109516022},{"_id":"source/img/header_img/total_bg.png","hash":"3b151b580b32b2eea0bffd62fae10097539f894c","modified":1664109515981},{"_id":"themes/livemylife/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1664109516022},{"_id":"themes/livemylife/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1664109516025},{"_id":"themes/livemylife/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1664109516032},{"_id":"themes/livemylife/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1664109516027},{"_id":"source/img/header_img/categories_bg.png","hash":"310b37816ecac824175fd171a92308a9453c2723","modified":1664109515975},{"_id":"themes/livemylife/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1664109516021},{"_id":"themes/livemylife/source/dist/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1664109516024},{"_id":"themes/livemylife/source/js/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1664109516027},{"_id":"themes/livemylife/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1664109516032},{"_id":"source/img/220926_smailsdk/smail_bg.webp","hash":"3c42495df222245998b7213c8159c4db72319b3c","modified":1664198080356},{"_id":"source/img/header_img/tag_bg.png","hash":"2affcb6364172fdd77cb4d752d4bd6f136ce054a","modified":1664109515980},{"_id":"source/img/index/index_bg.webp","hash":"0372176f6f7861ba80b37a00a04ad1a2e4e1938e","modified":1664117629213},{"_id":"source/img/header_img/newhome_bg.png","hash":"80aeca1591db5648a11885d0fac0bf2d642867ee","modified":1664109515979},{"_id":"source/img/header_img/tag_new_bg.png","hash":"79c939b5c212d539e6bf9b09b65a9e34dbaf1833","modified":1664109515980},{"_id":"source/img/header_img/index_new_bg.png","hash":"3c86eb37698141a99011441c07af47df90fc65d8","modified":1664109515975},{"_id":"source/img/other/readme_bg.png","hash":"0a1c3cb03800db1cc0cdd1d13cec5c3be6fc440e","modified":1664109515983},{"_id":"source/img/header_img/archive_bg2.png","hash":"bcda2e95c6cf4058d8dca41e330f76c2246b6c4b","modified":1664109515971},{"_id":"themes/livemylife/source/js/comment/gitalk_.js","hash":"559bde41e7fca7fc58f0b9a740875f5f4650a763","modified":1664109516031},{"_id":"themes/livemylife/source/js/comment/gitalk.js","hash":"e5c1b7f8a2803765cff831793af377a9f81fb385","modified":1664109516029},{"_id":"source/img/header_img/archive_bg3.png","hash":"4a63ec286a98f1e274912463c4340524e29c08e9","modified":1664109515972},{"_id":"source/img/header_img/archive_bg.png","hash":"0369a23b5a681cf4ed7c3daa8d306ddd0f1a76c1","modified":1664109515970},{"_id":"source/img/header_img/lml_bg8.png","hash":"0369a23b5a681cf4ed7c3daa8d306ddd0f1a76c1","modified":1664109515978},{"_id":"source/img/220923_classmodify/ymclass_bg.png","hash":"237b680e4247256a1f9dbb63ccfc0d6c05f115a4","modified":1664118840595},{"_id":"source/img/header_img/lml_bg.png","hash":"237b680e4247256a1f9dbb63ccfc0d6c05f115a4","modified":1664109515977},{"_id":"source/img/header_img/404_bg.png","hash":"120f7a1cbd02d7bf19428ac5019fad91089c3c2f","modified":1664109515968},{"_id":"source/music/music.mp3","hash":"9769b60bed684884921f6f4128be60ea56a6f49b","modified":1664109515996},{"_id":"public/sitemap.xml","hash":"f3b80d01bf5beab50390bdd694793c48a6e4cb28","modified":1664203651263},{"_id":"public/baidusitemap.xml","hash":"9ee9b988d4a622c2802e83352019e4ae995584e5","modified":1664203651263},{"_id":"public/searchVersion.json","hash":"6004a77a6b66fa587464a569d9337a8de576f371","modified":1664203651263},{"_id":"public/404.html","hash":"d81eeda7d96fc647ba5b9a3743e4bd478397c11d","modified":1664203651263},{"_id":"public/categories/index.html","hash":"083502e7f963f92548cc78daa669dad551bba8f9","modified":1664203651263},{"_id":"public/tags/index.html","hash":"f1c9d8b68ebffe419160d5e42fd0562145d98c81","modified":1664203651263},{"_id":"public/undefined/从smail接入第三方/index.html","hash":"e8e9925ee85c26ec4c0ce9d0975b4dda9f8880ec","modified":1664203651263},{"_id":"public/undefined/你我字节码/index.html","hash":"5e78cf121409fad5910a9145b56384c364ba6d02","modified":1664203651263},{"_id":"public/undefined/page-咋们一起修改-class-文件/index.html","hash":"f9d841125b36bd7c0ec48a1867121d78c2bb8c28","modified":1664203651263},{"_id":"public/undefined/page-Native信号表/index.html","hash":"fd7690c513a5b2d67c0f33e83653c08c41de8095","modified":1664203651263},{"_id":"public/about/index.html","hash":"6652440348910aaade5af4c7f7a808cf6cefec85","modified":1664203651263},{"_id":"public/archive/index.html","hash":"07650c3cb5f3817b788e2a283c69c6b783df5c65","modified":1664203651263},{"_id":"public/archives/index.html","hash":"5eb2e39be06eda1e58a9c2e25cb9c07ddda82b29","modified":1664203651263},{"_id":"public/archives/2022/index.html","hash":"6810eea602443ca8afdc62d5d322c1a167908d47","modified":1664203651263},{"_id":"public/archives/2022/09/index.html","hash":"6ae70798a696c6e48d8e0975780f8b23f4ec4196","modified":1664203651263},{"_id":"public/index.html","hash":"0c8977cdcd2eb1c84649ae8f8ab5e0201df0ed01","modified":1664203651263},{"_id":"public/tags/笔记/index.html","hash":"f1407459a45120ccdbe022cce7c15dba507b2378","modified":1664203651263},{"_id":"public/tags/SDK/index.html","hash":"d6a9d357136051e227004fc910948b82274f89e6","modified":1664203651263},{"_id":"public/tags/字节码/index.html","hash":"0acf74fe1516c63e35c316344338ff011bf0b94c","modified":1664203651263},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1664203651263},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1664203651263},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1664203651263},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1664203651263},{"_id":"public/js/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1664203651263},{"_id":"public/dist/APlayer.min.css.map","hash":"c59d2bc9472922cf6ef9a99e052dbee6cc7e6b36","modified":1664203651263},{"_id":"public/css/images/beside_up.png","hash":"183d87f1a99e93fc663ec798fa8c94cb87c83bcb","modified":1664203651263},{"_id":"public/css/images/beside_up_white.png","hash":"49c5922a8de63dcf9468fbcffc70d2ec36b1b527","modified":1664203651263},{"_id":"public/css/images/beside_up2.png","hash":"ef066ba2e93a4738df45ae05020726e066c4dd1f","modified":1664203651263},{"_id":"public/css/images/beside_up_white2.png","hash":"52e9d5715def1d3d09ab076d5eb3d22916d8f7d7","modified":1664203651263},{"_id":"public/CNAME","hash":"3a509ddb0fb53de725c6a840d7fad5b072251535","modified":1664203651263},{"_id":"public/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1664203651263},{"_id":"public/img/other/bottom2top.png","hash":"35dbb5fa18be3c15a8027c81a41aa267226e8230","modified":1664203651263},{"_id":"public/img/scenery/treat_me_to_coffee.png","hash":"83619ac3af6e3463a3cb462cb6e31a38543b06e6","modified":1664203651263},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1664203651263},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1664203651263},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1664203651263},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1664203651263},{"_id":"public/img/220923_classmodify/class_bg.webp","hash":"a37f0bb77fbcbf74d400e44a9250f606799b6c2f","modified":1664203651263},{"_id":"public/img/scenery/about_bg4.png","hash":"559928668f158e2117a47049ea23caec99387b15","modified":1664203651263},{"_id":"public/img/signature/nick-name.png","hash":"621bb5f186dbaa4b4e7cd6753b3cd4fe0ef812a3","modified":1664203651263},{"_id":"public/dist/APlayer.min.css","hash":"fd1d253594e71700e185a9841664e3cbc85501d2","modified":1664203651263},{"_id":"public/dist/music.js","hash":"3eddc21b70a147c96059e2120eb21ec5511b86ca","modified":1664203651263},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1664203651263},{"_id":"public/css/highlight.css","hash":"03d1f0a648e9bdf7b1f57d217313cbac5d0c7eb1","modified":1664203651263},{"_id":"public/css/rocket.css","hash":"1aa31deaf2c434e883a7b4d096d187244eb964d0","modified":1664203651263},{"_id":"public/css/catalog.css","hash":"6e63e8902ec9ba5ef6256a0c2ef93934c56d612c","modified":1664203651263},{"_id":"public/css/livemylife.css","hash":"1901c580d1f80f02e266ff371dc15d4e5e824a2d","modified":1664203651263},{"_id":"public/css/search.css","hash":"3ff388d8da7e2c5aac7071f2dccda767ec9c5647","modified":1664203651263},{"_id":"public/css/signature.css","hash":"47d91f966a30d393aee44cec9bdba0a26e53dd35","modified":1664203651263},{"_id":"public/css/top.css","hash":"0303375fbe2ca942cd3d86f31d12fef9bf5785af","modified":1664203651263},{"_id":"public/css/scroll.css","hash":"ba16b97532dd6aaec66a82f3c33cc989d361fa7a","modified":1664203651263},{"_id":"public/css/wave.css","hash":"041f3b4a78e2840ba17679cea05fb14bb646722f","modified":1664203651263},{"_id":"public/css/viewer.min.css","hash":"0e045aa3df1be7d138caa701ec3aa623ccc7a52d","modified":1664203651263},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1664203651263},{"_id":"public/js/APlayer.min.css","hash":"fd1d253594e71700e185a9841664e3cbc85501d2","modified":1664203651263},{"_id":"public/js/catalog.js","hash":"059f3f31492e5b1a9dddf422a48c32969d247415","modified":1664203651263},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1664203651263},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1664203651263},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1664203651263},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1664203651263},{"_id":"public/js/langselect.js","hash":"52ca6e30814272bc329868944f528f89630404e4","modified":1664203651263},{"_id":"public/js/mouseclick.js","hash":"b27fb5ae779a855a93b85c923f1ac927ba52dc86","modified":1664203651263},{"_id":"public/js/ribbonDynamic.js","hash":"576f0ce237c87738277868489af30b6538681201","modified":1664203651263},{"_id":"public/js/scroll.js","hash":"265a4c4fc33b5b44b620db64ff31d2bc05d233e9","modified":1664203651263},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1664203651263},{"_id":"public/js/line.js","hash":"d69576bfe75048345a137c148ffca1d9985811dc","modified":1664203651263},{"_id":"public/js/viewer/pic-viewer.js","hash":"9bf7c37cce781628346803ed7ce8f02623c2d013","modified":1664203651263},{"_id":"public/css/beantech.min.css","hash":"f263cb23c9abf1821dd97e8497e675e0fe3aaa4b","modified":1664203651263},{"_id":"public/css/beantech.css","hash":"41966b2359eab150b40aa61b0a8c8676b498b2c1","modified":1664203651263},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1664203651263},{"_id":"public/dist/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1664203651263},{"_id":"public/css/gitalk.css","hash":"51783fd60dff05e8e339ff83b41504538662f6ca","modified":1664203651263},{"_id":"public/css/hux-blog.min.css","hash":"93f4295feabb6996ec6e45d8ab7654d9ca6f8745","modified":1664203651263},{"_id":"public/css/themecolor.css","hash":"2b1c2095577d95dfe92f3e7b924ea3db50e61fab","modified":1664203651263},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1664203651263},{"_id":"public/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1664203651263},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1664203651263},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1664203651263},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1664203651263},{"_id":"public/js/ziploader.js","hash":"9c25324caf53b56cb68839dcfb34e61e5a6a63f3","modified":1664203651263},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1664203651263},{"_id":"public/js/viewer/viewer.min.js","hash":"ae5380974b6fb8b0e15356c8418186c6c0821222","modified":1664203651263},{"_id":"public/dist/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1664203651263},{"_id":"public/js/APlayer.min.js.map","hash":"31a19da0f0cb6b00ec212eafa847f31af86788df","modified":1664203651263},{"_id":"public/img/scenery/about_me_bg.png","hash":"ae8aaed9a824b5bb66388495d2b40979e57ebe7a","modified":1664203651263},{"_id":"public/img/header_img/main_sea_bg.png","hash":"d87fb98fd15e51e63d8f153bfe9f61ab7898002b","modified":1664203651263},{"_id":"public/img/header_img/total_bg.png","hash":"3b151b580b32b2eea0bffd62fae10097539f894c","modified":1664203651263},{"_id":"public/js/comment/gitalk_.js","hash":"559bde41e7fca7fc58f0b9a740875f5f4650a763","modified":1664203651263},{"_id":"public/js/comment/gitalk.js","hash":"e5c1b7f8a2803765cff831793af377a9f81fb385","modified":1664203651263},{"_id":"public/img/header_img/categories_bg.png","hash":"310b37816ecac824175fd171a92308a9453c2723","modified":1664203651263},{"_id":"public/img/220926_smailsdk/smail_bg.webp","hash":"3c42495df222245998b7213c8159c4db72319b3c","modified":1664203651263},{"_id":"public/img/header_img/tag_bg.png","hash":"2affcb6364172fdd77cb4d752d4bd6f136ce054a","modified":1664203651263},{"_id":"public/img/index/index_bg.webp","hash":"0372176f6f7861ba80b37a00a04ad1a2e4e1938e","modified":1664203651263},{"_id":"public/img/header_img/newhome_bg.png","hash":"80aeca1591db5648a11885d0fac0bf2d642867ee","modified":1664203651263},{"_id":"public/img/header_img/tag_new_bg.png","hash":"79c939b5c212d539e6bf9b09b65a9e34dbaf1833","modified":1664203651263},{"_id":"public/img/header_img/index_new_bg.png","hash":"3c86eb37698141a99011441c07af47df90fc65d8","modified":1664203651263},{"_id":"public/img/other/readme_bg.png","hash":"0a1c3cb03800db1cc0cdd1d13cec5c3be6fc440e","modified":1664203651263},{"_id":"public/img/header_img/archive_bg2.png","hash":"bcda2e95c6cf4058d8dca41e330f76c2246b6c4b","modified":1664203651263},{"_id":"public/img/header_img/archive_bg3.png","hash":"4a63ec286a98f1e274912463c4340524e29c08e9","modified":1664203651263},{"_id":"public/img/header_img/archive_bg.png","hash":"0369a23b5a681cf4ed7c3daa8d306ddd0f1a76c1","modified":1664203651263},{"_id":"public/img/header_img/lml_bg8.png","hash":"0369a23b5a681cf4ed7c3daa8d306ddd0f1a76c1","modified":1664203651263},{"_id":"public/img/220923_classmodify/ymclass_bg.png","hash":"237b680e4247256a1f9dbb63ccfc0d6c05f115a4","modified":1664203651263},{"_id":"public/img/header_img/lml_bg.png","hash":"237b680e4247256a1f9dbb63ccfc0d6c05f115a4","modified":1664203651263},{"_id":"public/img/header_img/404_bg.png","hash":"120f7a1cbd02d7bf19428ac5019fad91089c3c2f","modified":1664203651263},{"_id":"public/music/music.mp3","hash":"9769b60bed684884921f6f4128be60ea56a6f49b","modified":1664203651263}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"I'm sorry there is nothing that you want , but you can enjoy the scenery here ...","header-img":"img/header_img/404_bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"I'm sorry there is nothing that you want , but you can enjoy the scenery here ...\"\nheader-img: \"img/header_img/404_bg.jpg\"\n---\n","date":"2022-09-25T12:38:35.964Z","updated":"2022-09-25T12:38:35.964Z","path":"404.html","title":"","comments":1,"_id":"cl8ivvvsc0000feqphlm9gwz8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About me!","date":"2016-04-20T20:48:33.000Z","description":"那些年吹的牛逼，还有很多没有实现吧。","header-img":"img/scenery/about_me_bg.png","_content":"\n\n## 曾经的我\n\n> too too too young\n\n- 十八岁那年，一个人\n\n\n## 现在的我\n\n> too too young\n\n- 二十一岁那年，一个人\n\n\n## 未来的我\n\n> too young\n\n- 三十岁那年，未知\n\n## 我的联系\n\n> 邮件：2464113103@qq.com\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About me!\"\ndate: 2016-04-21 04:48:33\ndescription: \"那些年吹的牛逼，还有很多没有实现吧。\"\nheader-img: \"img/scenery/about_me_bg.png\"\n---\n\n\n## 曾经的我\n\n> too too too young\n\n- 十八岁那年，一个人\n\n\n## 现在的我\n\n> too too young\n\n- 二十一岁那年，一个人\n\n\n## 未来的我\n\n> too young\n\n- 三十岁那年，未知\n\n## 我的联系\n\n> 邮件：2464113103@qq.com\n","updated":"2016-04-20T20:48:33.000Z","path":"about/index.html","comments":1,"_id":"cl8ivvvsd0001feqp6xzfcqb7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"曾经的我\">曾经的我</h2>\n<blockquote>\n<p>too too too young</p>\n</blockquote>\n<ul>\n<li>十八岁那年，一个人</li>\n</ul>\n<h2 id=\"现在的我\">现在的我</h2>\n<blockquote>\n<p>too too young</p>\n</blockquote>\n<ul>\n<li>二十一岁那年，一个人</li>\n</ul>\n<h2 id=\"未来的我\">未来的我</h2>\n<blockquote>\n<p>too young</p>\n</blockquote>\n<ul>\n<li>三十岁那年，未知</li>\n</ul>\n<h2 id=\"我的联系\">我的联系</h2>\n<blockquote>\n<p>邮件：2464113103@qq.com</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"曾经的我\">曾经的我</h2>\n<blockquote>\n<p>too too too young</p>\n</blockquote>\n<ul>\n<li>十八岁那年，一个人</li>\n</ul>\n<h2 id=\"现在的我\">现在的我</h2>\n<blockquote>\n<p>too too young</p>\n</blockquote>\n<ul>\n<li>二十一岁那年，一个人</li>\n</ul>\n<h2 id=\"未来的我\">未来的我</h2>\n<blockquote>\n<p>too young</p>\n</blockquote>\n<ul>\n<li>三十岁那年，未知</li>\n</ul>\n<h2 id=\"我的联系\">我的联系</h2>\n<blockquote>\n<p>邮件：2464113103@qq.com</p>\n</blockquote>\n"},{"layout":"archive","title":"文章存档","header-img":"img/header_img/archive_bg.png","date":"2017-03-20T12:49:56.000Z","description":"城市的柏油路太硬，踩不出足迹！","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"文章存档\"\nheader-img: \"img/header_img/archive_bg.png\"\ndate: 2017-03-20 20:49:56\ndescription: 城市的柏油路太硬，踩不出足迹！\n---\n","updated":"2017-03-20T12:49:56.000Z","path":"archive/index.html","comments":1,"_id":"cl8ivvvsd0002feqpazih6lqq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"excerpt":"","more":""},{"layout":"categories","title":"归纳总结","description":"物以类聚，人以群分。","header-img":"img/header_img/total_bg.png","_content":"","source":"categories/index.md","raw":"---\nlayout: \"categories\"\ntitle: \"归纳总结\"\ndescription: \"物以类聚，人以群分。\"\nheader-img: \"img/header_img/total_bg.png\"\n---\n","date":"2022-09-25T12:38:35.966Z","updated":"2022-09-25T12:38:35.966Z","path":"categories/index.html","comments":1,"_id":"cl8ivvvse0003feqp62fr92ah","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"标签","description":"每篇文章总是围绕重点展开，工作也有重点，生活也是。","header-img":"img/header_img/tag_new_bg.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"标签\"\ndescription: \"每篇文章总是围绕重点展开，工作也有重点，生活也是。\"\nheader-img: \"img/header_img/tag_new_bg.png\"\n---\n","date":"2022-09-25T12:38:35.998Z","updated":"2022-09-25T12:38:35.998Z","path":"tags/index.html","comments":1,"_id":"cl8ivvvse0004feqp7iwl4q05","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"咋们一起修改 class 文件","catalog":true,"date":"2022-09-25T12:45:24.000Z","subtitle":"修改第三方 jar 包满足当前需求，这是一种方式！","header-img":"/img/220923_classmodify/class_bg.webp","sticky":2,"_content":"\n# 你有遇到适用的场景吗\n\n![深大村长.jpg](https://img-blog.csdnimg.cn/img_convert/b489e163aa127c5f7eb59575079df4d6.png)\n\n你有没有遇到需要修改 class 文件重新打包的场景呢？巧得很，最近刚好遇到需要修改一个已存在的 jar 包以满足当前的需求，不过本次修改的是字符常量，尚未涉及到比较复杂的逻辑，记录下此刻，如何修改？如何快速修改完成需求？希望可以抛砖引玉，剩下的较为复杂的逻辑修改就交给你们了 :)\n\n**举个例子：**\n\n问题描述：\n    1、某弹窗文本显示不正确（文字冗余，格式不符合要求）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/39cb62ad15a8135fced9b45bb6e0b58e.png)\n\n关于描述：\n    1、此弹窗代码是某第三方 jar 包\n    2、文字显示要求应该是： `客服：QQ号`\n    3、但实际情况第三方 jar 包在显示内容前加了前缀 `客服`，不符合要求\n\n预期效果：\n    1、显示效果：`客服QQ：2464113103`\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/be9836c62729cd6fd5904c8ff4dbcfd5.png)\n\n\n预期需求很清晰，代码修改也跟清晰（去除第三方 jar 包内容前缀 `客服：`，实现内容灵活配置）\n\n\n# 温故 jar 命令使用\n\n1、命令查看使用帮助 jar -h\n```java\n用法: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\\n选项:\n    -c  创建新档案\n    -t  列出档案目录\n    -x  从档案中提取指定的 (或所有) 文件\n    -u  更新现有档案\n    -v  在标准输出中生成详细输出\n    -f  指定档案文件名\n    -m  包含指定清单文件中的清单信息\n    -n  创建新档案后执行 Pack200 规范化\n    -e  为捆绑到可执行 jar 文件的独立应用程序\n        指定应用程序入口点\n    -0  仅存储; 不使用任何 ZIP 压缩\n    -P  保留文件名中的前导 '/' (绝对路径) 和 \"..\" (父目录) 组件\n    -M  不创建条目的清单文件\n    -i  为指定的 jar 文件生成索引信息\n    -C  更改为指定的目录并包含以下文件\n\n如果任何文件为目录, 则对其进行递归处理。清单文件名, 档案文件名和入口点名称的指定顺序\n与 'm', 'f' 和 'e' 标记的指定顺序相同。\n```\n\n2、打包生成 jar\n将 class 文件打包为 jar 文件\n```java\njar cvf classes.jar Foo.class Bar.class\n```\n\n将 folder/ 目录下的所有 class 文件打包成 jar 文件\n```java\njar cvf classes.jar -C folder/ .\n```\n\n3、查看 jar 文件列表\n```java\njar -tvf classes.jar\n```\n\n4、解压 jar 文件\n```java\njar -xvf classes.jar\n```\n\n# 开始修改 jar\n\n方式一不推荐，只是想让你知道这种方式也是可行的。\n\n## 方式一：javac\n\n**1、使用 JD-GUI 打开 jar 文件并导出 java 代码**\n\n**2、使用 javac 命令把 .java 文件转换为 .class 文件**\n```java\njavac -classpath [待生成的文件名.jar] [已修改的文件.java]\n```\n\n实际操作过程中直接执行 javac 命令往往不是自己期望的那么顺利，遇到问题针对性处理。\n\n`2.1` 当遇到编码问题时：需要添加额外参数***-encoding utf-8***\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/49f46c79b1626bc9fa8f8a326a9efa6c.png)\n\n`2.2` 当遇到程序包找不到时：需要在***已修改.java文件同级目录下***放置缺失的 jar 包（可以使用分号分隔输入多个 jar 包参数）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/213dbc4980626c7aa6047fec3884f4a6.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/45f67a8f91ccdddbd528b08be84bb98c.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/4c096fedfc8e73d0a8f5fa17702a651f.png)\n\n\n`注意：`\n这里有个坑，如果打包过程有依赖 android jar，要求必须是 android sdk 目录下的 jar（官方的），不能随便找一个（阉割版），否则编译失败。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/56247e2d3f5361ead4c49454c0a7a3bd.png)\n\n**3、最终命令（可能是这样，但不一定）**\n```java\njavac -encoding utf-8 -classpath [依赖的1.jar;依赖的2.jar;依赖的3.jar;...] [已修改的单个 .java 文件或者待转换的 .java 文件所在目录]\n```\n```java\njavac -encoding utf-8 -classpath android.jar;classes-dex2jar.jar GRAppStoreActivity.java\n```\n\n这就成功把 java 代码编译为 class 代码\n\n**4、替换旧的 class 文件并重新打包成 jar**\n```java\njar cvf [新文件名.jar] -C [待打包的class文件目录] [输出到指定目录]\n```\n```java\njar cvf jsonlili.jar -C primer/ .\n```\n\n到这里就打包成功了，如果遇到什么问题欢迎评论 :) 如果 jar 依赖的第三方包较多，这种方式是不适合操作的，而且步骤也很繁琐，繁琐的事情必须简化，重复的工作可以流程化，那么下面简明介绍利用工具实现修改。\n\n## 方式二：jclasslib\n**1、把 jar 包拖入工具中查看代码**\n\n或者打开某个 class 文件，对于某些简单、少量的修改也可以像方式一那样，修改、替换、重新打包生成目标 jar\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/a6fd42dda952836b3119dff2faa988bd.png)\n\n**2、代码定位并修改**\n\n我们以开头的客服弹窗提示为例，在原始 jar 文件中定位到`客服：`固定前缀，代码位于在 ***MyMainActivity*** 类的某个方法中\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ff17b6d926a31e648c532263e6268792.png)\n\n我们知道匿名类经过编译后的 class 文件是一个单独的文件，且文件名往往带有`$`符号，我们解压 jar 文件可以缩小查找范围，一番查阅后定位到 `MyMainActivity$2$1.class` 文件中，Methods -> onClick -> Code（这里需要对 class 文件结构有一定的了解）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/b9d17fbc33b11fa541911cf6e3d21416.png)\n\n> ldc：是 JVM 指令，指从常量池中取出字符串常量并压入操作数堆栈中。\n>\n> 这里有两个动作，取出数据、把数据压入操作数栈（如果不了解操作数栈，建议略读字节码相关资料）\n\n\n关于 class 文件结构和字节码指令推荐官方文档： [字节码指令](https://docs.oracle.com/javase/specs/jls/se19/html/index.html)\n\n**3、修改并保存**\n从刚才的 `ldc #61 <客服：>` 中点击 `#61` 跳转到常量编辑处修改并保存\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ec7700f218da9a6d8d57445909ea9f05.png)\n\n\n到这里，其实我们对 class 文件的修改已经完成了 :)\n\n# 最后\n\n我在想，如果想要修改更复杂的逻辑以满足更大的需求呢？怎么办？\n\n个人见解，那就是：**持续学习，实践输出**\n\n\n1、我对 JVM 指令不熟，对修改无从下手，那么我想你应该需要进一步了解 class 文件结构，JVM 指令说明；\n去哪学习？找官方资源、GitHub 学习资源、阅读大佬的文章。。。。。。\n\n2、工具使用的掌握，上面提到的 jclasslib 就是一个字节码查看、编辑工具，工具是往往有竞品存在，\n我今天使用的是 jclasslib，可随着自我视野的扩展，我明天可能在使用 Recaf（也是字节码编辑工具）\n\n\n**附加：**\n- [jclasslib bytecode editor](https://github.com/ingokegel/jclasslib) \n- [JD-GUI](https://github.com/java-decompiler/jd-gui/releases)\n- [在线破解工具包：](https://down.52pojie.cn/Tools/)\n\n\n","source":"_posts/page- 咋们一起修改 class 文件.md","raw":"---\ntitle: 咋们一起修改 class 文件\ncatalog: true\ndate: 2022-09-25 20:45:24\nsubtitle: 修改第三方 jar 包满足当前需求，这是一种方式！\nheader-img: /img/220923_classmodify/class_bg.webp\ntags: 字节码\ncategories:\nsticky: 2\n---\n\n# 你有遇到适用的场景吗\n\n![深大村长.jpg](https://img-blog.csdnimg.cn/img_convert/b489e163aa127c5f7eb59575079df4d6.png)\n\n你有没有遇到需要修改 class 文件重新打包的场景呢？巧得很，最近刚好遇到需要修改一个已存在的 jar 包以满足当前的需求，不过本次修改的是字符常量，尚未涉及到比较复杂的逻辑，记录下此刻，如何修改？如何快速修改完成需求？希望可以抛砖引玉，剩下的较为复杂的逻辑修改就交给你们了 :)\n\n**举个例子：**\n\n问题描述：\n    1、某弹窗文本显示不正确（文字冗余，格式不符合要求）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/39cb62ad15a8135fced9b45bb6e0b58e.png)\n\n关于描述：\n    1、此弹窗代码是某第三方 jar 包\n    2、文字显示要求应该是： `客服：QQ号`\n    3、但实际情况第三方 jar 包在显示内容前加了前缀 `客服`，不符合要求\n\n预期效果：\n    1、显示效果：`客服QQ：2464113103`\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/be9836c62729cd6fd5904c8ff4dbcfd5.png)\n\n\n预期需求很清晰，代码修改也跟清晰（去除第三方 jar 包内容前缀 `客服：`，实现内容灵活配置）\n\n\n# 温故 jar 命令使用\n\n1、命令查看使用帮助 jar -h\n```java\n用法: jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\\n选项:\n    -c  创建新档案\n    -t  列出档案目录\n    -x  从档案中提取指定的 (或所有) 文件\n    -u  更新现有档案\n    -v  在标准输出中生成详细输出\n    -f  指定档案文件名\n    -m  包含指定清单文件中的清单信息\n    -n  创建新档案后执行 Pack200 规范化\n    -e  为捆绑到可执行 jar 文件的独立应用程序\n        指定应用程序入口点\n    -0  仅存储; 不使用任何 ZIP 压缩\n    -P  保留文件名中的前导 '/' (绝对路径) 和 \"..\" (父目录) 组件\n    -M  不创建条目的清单文件\n    -i  为指定的 jar 文件生成索引信息\n    -C  更改为指定的目录并包含以下文件\n\n如果任何文件为目录, 则对其进行递归处理。清单文件名, 档案文件名和入口点名称的指定顺序\n与 'm', 'f' 和 'e' 标记的指定顺序相同。\n```\n\n2、打包生成 jar\n将 class 文件打包为 jar 文件\n```java\njar cvf classes.jar Foo.class Bar.class\n```\n\n将 folder/ 目录下的所有 class 文件打包成 jar 文件\n```java\njar cvf classes.jar -C folder/ .\n```\n\n3、查看 jar 文件列表\n```java\njar -tvf classes.jar\n```\n\n4、解压 jar 文件\n```java\njar -xvf classes.jar\n```\n\n# 开始修改 jar\n\n方式一不推荐，只是想让你知道这种方式也是可行的。\n\n## 方式一：javac\n\n**1、使用 JD-GUI 打开 jar 文件并导出 java 代码**\n\n**2、使用 javac 命令把 .java 文件转换为 .class 文件**\n```java\njavac -classpath [待生成的文件名.jar] [已修改的文件.java]\n```\n\n实际操作过程中直接执行 javac 命令往往不是自己期望的那么顺利，遇到问题针对性处理。\n\n`2.1` 当遇到编码问题时：需要添加额外参数***-encoding utf-8***\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/49f46c79b1626bc9fa8f8a326a9efa6c.png)\n\n`2.2` 当遇到程序包找不到时：需要在***已修改.java文件同级目录下***放置缺失的 jar 包（可以使用分号分隔输入多个 jar 包参数）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/213dbc4980626c7aa6047fec3884f4a6.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/45f67a8f91ccdddbd528b08be84bb98c.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/4c096fedfc8e73d0a8f5fa17702a651f.png)\n\n\n`注意：`\n这里有个坑，如果打包过程有依赖 android jar，要求必须是 android sdk 目录下的 jar（官方的），不能随便找一个（阉割版），否则编译失败。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/56247e2d3f5361ead4c49454c0a7a3bd.png)\n\n**3、最终命令（可能是这样，但不一定）**\n```java\njavac -encoding utf-8 -classpath [依赖的1.jar;依赖的2.jar;依赖的3.jar;...] [已修改的单个 .java 文件或者待转换的 .java 文件所在目录]\n```\n```java\njavac -encoding utf-8 -classpath android.jar;classes-dex2jar.jar GRAppStoreActivity.java\n```\n\n这就成功把 java 代码编译为 class 代码\n\n**4、替换旧的 class 文件并重新打包成 jar**\n```java\njar cvf [新文件名.jar] -C [待打包的class文件目录] [输出到指定目录]\n```\n```java\njar cvf jsonlili.jar -C primer/ .\n```\n\n到这里就打包成功了，如果遇到什么问题欢迎评论 :) 如果 jar 依赖的第三方包较多，这种方式是不适合操作的，而且步骤也很繁琐，繁琐的事情必须简化，重复的工作可以流程化，那么下面简明介绍利用工具实现修改。\n\n## 方式二：jclasslib\n**1、把 jar 包拖入工具中查看代码**\n\n或者打开某个 class 文件，对于某些简单、少量的修改也可以像方式一那样，修改、替换、重新打包生成目标 jar\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/a6fd42dda952836b3119dff2faa988bd.png)\n\n**2、代码定位并修改**\n\n我们以开头的客服弹窗提示为例，在原始 jar 文件中定位到`客服：`固定前缀，代码位于在 ***MyMainActivity*** 类的某个方法中\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ff17b6d926a31e648c532263e6268792.png)\n\n我们知道匿名类经过编译后的 class 文件是一个单独的文件，且文件名往往带有`$`符号，我们解压 jar 文件可以缩小查找范围，一番查阅后定位到 `MyMainActivity$2$1.class` 文件中，Methods -> onClick -> Code（这里需要对 class 文件结构有一定的了解）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/b9d17fbc33b11fa541911cf6e3d21416.png)\n\n> ldc：是 JVM 指令，指从常量池中取出字符串常量并压入操作数堆栈中。\n>\n> 这里有两个动作，取出数据、把数据压入操作数栈（如果不了解操作数栈，建议略读字节码相关资料）\n\n\n关于 class 文件结构和字节码指令推荐官方文档： [字节码指令](https://docs.oracle.com/javase/specs/jls/se19/html/index.html)\n\n**3、修改并保存**\n从刚才的 `ldc #61 <客服：>` 中点击 `#61` 跳转到常量编辑处修改并保存\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ec7700f218da9a6d8d57445909ea9f05.png)\n\n\n到这里，其实我们对 class 文件的修改已经完成了 :)\n\n# 最后\n\n我在想，如果想要修改更复杂的逻辑以满足更大的需求呢？怎么办？\n\n个人见解，那就是：**持续学习，实践输出**\n\n\n1、我对 JVM 指令不熟，对修改无从下手，那么我想你应该需要进一步了解 class 文件结构，JVM 指令说明；\n去哪学习？找官方资源、GitHub 学习资源、阅读大佬的文章。。。。。。\n\n2、工具使用的掌握，上面提到的 jclasslib 就是一个字节码查看、编辑工具，工具是往往有竞品存在，\n我今天使用的是 jclasslib，可随着自我视野的扩展，我明天可能在使用 Recaf（也是字节码编辑工具）\n\n\n**附加：**\n- [jclasslib bytecode editor](https://github.com/ingokegel/jclasslib) \n- [JD-GUI](https://github.com/java-decompiler/jd-gui/releases)\n- [在线破解工具包：](https://down.52pojie.cn/Tools/)\n\n\n","slug":"page-咋们一起修改-class-文件","published":1,"updated":"2022-09-25T12:45:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8ivvvsf0005feqpeiuz8491","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1>你有遇到适用的场景吗</h1>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b489e163aa127c5f7eb59575079df4d6.png\" alt=\"深大村长.jpg\"></p>\n<p>你有没有遇到需要修改 class 文件重新打包的场景呢？巧得很，最近刚好遇到需要修改一个已存在的 jar 包以满足当前的需求，不过本次修改的是字符常量，尚未涉及到比较复杂的逻辑，记录下此刻，如何修改？如何快速修改完成需求？希望可以抛砖引玉，剩下的较为复杂的逻辑修改就交给你们了 :)</p>\n<p><strong>举个例子：</strong></p>\n<p>问题描述：<br>\n1、某弹窗文本显示不正确（文字冗余，格式不符合要求）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/39cb62ad15a8135fced9b45bb6e0b58e.png\" alt=\"image.png\"></p>\n<p>关于描述：<br>\n1、此弹窗代码是某第三方 jar 包<br>\n2、文字显示要求应该是： <code>客服：QQ号</code><br>\n3、但实际情况第三方 jar 包在显示内容前加了前缀 <code>客服</code>，不符合要求</p>\n<p>预期效果：<br>\n1、显示效果：<code>客服QQ：2464113103</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/be9836c62729cd6fd5904c8ff4dbcfd5.png\" alt=\"image.png\"></p>\n<p>预期需求很清晰，代码修改也跟清晰（去除第三方 jar 包内容前缀 <code>客服：</code>，实现内容灵活配置）</p>\n<h1>温故 jar 命令使用</h1>\n<p>1、命令查看使用帮助 jar -h</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法: jar &#123;ctxui&#125;[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\</span><br><span class=\"line\">选项:</span><br><span class=\"line\">    -c  创建新档案</span><br><span class=\"line\">    -t  列出档案目录</span><br><span class=\"line\">    -x  从档案中提取指定的 (或所有) 文件</span><br><span class=\"line\">    -u  更新现有档案</span><br><span class=\"line\">    -v  在标准输出中生成详细输出</span><br><span class=\"line\">    -f  指定档案文件名</span><br><span class=\"line\">    -m  包含指定清单文件中的清单信息</span><br><span class=\"line\">    -n  创建新档案后执行 Pack200 规范化</span><br><span class=\"line\">    -e  为捆绑到可执行 jar 文件的独立应用程序</span><br><span class=\"line\">        指定应用程序入口点</span><br><span class=\"line\">    -<span class=\"number\">0</span>  仅存储; 不使用任何 ZIP 压缩</span><br><span class=\"line\">    -P  保留文件名中的前导 <span class=\"string\">&#x27;/&#x27;</span> (绝对路径) 和 <span class=\"string\">&quot;..&quot;</span> (父目录) 组件</span><br><span class=\"line\">    -M  不创建条目的清单文件</span><br><span class=\"line\">    -i  为指定的 jar 文件生成索引信息</span><br><span class=\"line\">    -C  更改为指定的目录并包含以下文件</span><br><span class=\"line\"></span><br><span class=\"line\">如果任何文件为目录, 则对其进行递归处理。清单文件名, 档案文件名和入口点名称的指定顺序</span><br><span class=\"line\">与 <span class=\"string\">&#x27;m&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span> 和 <span class=\"string\">&#x27;e&#x27;</span> 标记的指定顺序相同。</span><br></pre></td></tr></table></figure>\n<p>2、打包生成 jar<br>\n将 class 文件打包为 jar 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf classes.jar Foo.class Bar.class</span><br></pre></td></tr></table></figure>\n<p>将 folder/ 目录下的所有 class 文件打包成 jar 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf classes.jar -C folder/ .</span><br></pre></td></tr></table></figure>\n<p>3、查看 jar 文件列表</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar -tvf classes.jar</span><br></pre></td></tr></table></figure>\n<p>4、解压 jar 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar -xvf classes.jar</span><br></pre></td></tr></table></figure>\n<h1>开始修改 jar</h1>\n<p>方式一不推荐，只是想让你知道这种方式也是可行的。</p>\n<h2 id=\"方式一：javac\">方式一：javac</h2>\n<p><strong>1、使用 JD-GUI 打开 jar 文件并导出 java 代码</strong></p>\n<p><strong>2、使用 javac 命令把 .java 文件转换为 .class 文件</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac -classpath [待生成的文件名.jar] [已修改的文件.java]</span><br></pre></td></tr></table></figure>\n<p>实际操作过程中直接执行 javac 命令往往不是自己期望的那么顺利，遇到问题针对性处理。</p>\n<p><code>2.1</code> 当遇到编码问题时：需要添加额外参数***-encoding utf-8***</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/49f46c79b1626bc9fa8f8a326a9efa6c.png\" alt=\"image.png\"></p>\n<p><code>2.2</code> 当遇到程序包找不到时：需要在<em><strong>已修改.java文件同级目录下</strong></em>放置缺失的 jar 包（可以使用分号分隔输入多个 jar 包参数）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/213dbc4980626c7aa6047fec3884f4a6.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/45f67a8f91ccdddbd528b08be84bb98c.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/4c096fedfc8e73d0a8f5fa17702a651f.png\" alt=\"image.png\"></p>\n<p><code>注意：</code><br>\n这里有个坑，如果打包过程有依赖 android jar，要求必须是 android sdk 目录下的 jar（官方的），不能随便找一个（阉割版），否则编译失败。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/56247e2d3f5361ead4c49454c0a7a3bd.png\" alt=\"image.png\"></p>\n<p><strong>3、最终命令（可能是这样，但不一定）</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac -encoding utf-<span class=\"number\">8</span> -classpath [依赖的<span class=\"number\">1.</span>jar;依赖的<span class=\"number\">2.</span>jar;依赖的<span class=\"number\">3.</span>jar;...] [已修改的单个 .java 文件或者待转换的 .java 文件所在目录]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac -encoding utf-<span class=\"number\">8</span> -classpath android.jar;classes-dex2jar.jar GRAppStoreActivity.java</span><br></pre></td></tr></table></figure>\n<p>这就成功把 java 代码编译为 class 代码</p>\n<p><strong>4、替换旧的 class 文件并重新打包成 jar</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf [新文件名.jar] -C [待打包的class文件目录] [输出到指定目录]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf jsonlili.jar -C primer/ .</span><br></pre></td></tr></table></figure>\n<p>到这里就打包成功了，如果遇到什么问题欢迎评论 :) 如果 jar 依赖的第三方包较多，这种方式是不适合操作的，而且步骤也很繁琐，繁琐的事情必须简化，重复的工作可以流程化，那么下面简明介绍利用工具实现修改。</p>\n<h2 id=\"方式二：jclasslib\">方式二：jclasslib</h2>\n<p><strong>1、把 jar 包拖入工具中查看代码</strong></p>\n<p>或者打开某个 class 文件，对于某些简单、少量的修改也可以像方式一那样，修改、替换、重新打包生成目标 jar</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a6fd42dda952836b3119dff2faa988bd.png\" alt=\"image.png\"></p>\n<p><strong>2、代码定位并修改</strong></p>\n<p>我们以开头的客服弹窗提示为例，在原始 jar 文件中定位到<code>客服：</code>固定前缀，代码位于在 <em><strong>MyMainActivity</strong></em> 类的某个方法中</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ff17b6d926a31e648c532263e6268792.png\" alt=\"image.png\"></p>\n<p>我们知道匿名类经过编译后的 class 文件是一个单独的文件，且文件名往往带有<code>$</code>符号，我们解压 jar 文件可以缩小查找范围，一番查阅后定位到 <code>MyMainActivity$2$1.class</code> 文件中，Methods -&gt; onClick -&gt; Code（这里需要对 class 文件结构有一定的了解）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b9d17fbc33b11fa541911cf6e3d21416.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>ldc：是 JVM 指令，指从常量池中取出字符串常量并压入操作数堆栈中。</p>\n<p>这里有两个动作，取出数据、把数据压入操作数栈（如果不了解操作数栈，建议略读字节码相关资料）</p>\n</blockquote>\n<p>关于 class 文件结构和字节码指令推荐官方文档： <a href=\"https://docs.oracle.com/javase/specs/jls/se19/html/index.html\">字节码指令</a></p>\n<p><strong>3、修改并保存</strong><br>\n从刚才的 <code>ldc #61 &lt;客服：&gt;</code> 中点击 <code>#61</code> 跳转到常量编辑处修改并保存</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ec7700f218da9a6d8d57445909ea9f05.png\" alt=\"image.png\"></p>\n<p>到这里，其实我们对 class 文件的修改已经完成了 :)</p>\n<h1>最后</h1>\n<p>我在想，如果想要修改更复杂的逻辑以满足更大的需求呢？怎么办？</p>\n<p>个人见解，那就是：<strong>持续学习，实践输出</strong></p>\n<p>1、我对 JVM 指令不熟，对修改无从下手，那么我想你应该需要进一步了解 class 文件结构，JVM 指令说明；<br>\n去哪学习？找官方资源、GitHub 学习资源、阅读大佬的文章。。。。。。</p>\n<p>2、工具使用的掌握，上面提到的 jclasslib 就是一个字节码查看、编辑工具，工具是往往有竞品存在，<br>\n我今天使用的是 jclasslib，可随着自我视野的扩展，我明天可能在使用 Recaf（也是字节码编辑工具）</p>\n<p><strong>附加：</strong></p>\n<ul>\n<li><a href=\"https://github.com/ingokegel/jclasslib\">jclasslib bytecode editor</a></li>\n<li><a href=\"https://github.com/java-decompiler/jd-gui/releases\">JD-GUI</a></li>\n<li><a href=\"https://down.52pojie.cn/Tools/\">在线破解工具包：</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1>你有遇到适用的场景吗</h1>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b489e163aa127c5f7eb59575079df4d6.png\" alt=\"深大村长.jpg\"></p>\n<p>你有没有遇到需要修改 class 文件重新打包的场景呢？巧得很，最近刚好遇到需要修改一个已存在的 jar 包以满足当前的需求，不过本次修改的是字符常量，尚未涉及到比较复杂的逻辑，记录下此刻，如何修改？如何快速修改完成需求？希望可以抛砖引玉，剩下的较为复杂的逻辑修改就交给你们了 :)</p>\n<p><strong>举个例子：</strong></p>\n<p>问题描述：<br>\n1、某弹窗文本显示不正确（文字冗余，格式不符合要求）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/39cb62ad15a8135fced9b45bb6e0b58e.png\" alt=\"image.png\"></p>\n<p>关于描述：<br>\n1、此弹窗代码是某第三方 jar 包<br>\n2、文字显示要求应该是： <code>客服：QQ号</code><br>\n3、但实际情况第三方 jar 包在显示内容前加了前缀 <code>客服</code>，不符合要求</p>\n<p>预期效果：<br>\n1、显示效果：<code>客服QQ：2464113103</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/be9836c62729cd6fd5904c8ff4dbcfd5.png\" alt=\"image.png\"></p>\n<p>预期需求很清晰，代码修改也跟清晰（去除第三方 jar 包内容前缀 <code>客服：</code>，实现内容灵活配置）</p>\n<h1>温故 jar 命令使用</h1>\n<p>1、命令查看使用帮助 jar -h</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法: jar &#123;ctxui&#125;[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\\</span><br><span class=\"line\">选项:</span><br><span class=\"line\">    -c  创建新档案</span><br><span class=\"line\">    -t  列出档案目录</span><br><span class=\"line\">    -x  从档案中提取指定的 (或所有) 文件</span><br><span class=\"line\">    -u  更新现有档案</span><br><span class=\"line\">    -v  在标准输出中生成详细输出</span><br><span class=\"line\">    -f  指定档案文件名</span><br><span class=\"line\">    -m  包含指定清单文件中的清单信息</span><br><span class=\"line\">    -n  创建新档案后执行 Pack200 规范化</span><br><span class=\"line\">    -e  为捆绑到可执行 jar 文件的独立应用程序</span><br><span class=\"line\">        指定应用程序入口点</span><br><span class=\"line\">    -<span class=\"number\">0</span>  仅存储; 不使用任何 ZIP 压缩</span><br><span class=\"line\">    -P  保留文件名中的前导 <span class=\"string\">&#x27;/&#x27;</span> (绝对路径) 和 <span class=\"string\">&quot;..&quot;</span> (父目录) 组件</span><br><span class=\"line\">    -M  不创建条目的清单文件</span><br><span class=\"line\">    -i  为指定的 jar 文件生成索引信息</span><br><span class=\"line\">    -C  更改为指定的目录并包含以下文件</span><br><span class=\"line\"></span><br><span class=\"line\">如果任何文件为目录, 则对其进行递归处理。清单文件名, 档案文件名和入口点名称的指定顺序</span><br><span class=\"line\">与 <span class=\"string\">&#x27;m&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span> 和 <span class=\"string\">&#x27;e&#x27;</span> 标记的指定顺序相同。</span><br></pre></td></tr></table></figure>\n<p>2、打包生成 jar<br>\n将 class 文件打包为 jar 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf classes.jar Foo.class Bar.class</span><br></pre></td></tr></table></figure>\n<p>将 folder/ 目录下的所有 class 文件打包成 jar 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf classes.jar -C folder/ .</span><br></pre></td></tr></table></figure>\n<p>3、查看 jar 文件列表</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar -tvf classes.jar</span><br></pre></td></tr></table></figure>\n<p>4、解压 jar 文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar -xvf classes.jar</span><br></pre></td></tr></table></figure>\n<h1>开始修改 jar</h1>\n<p>方式一不推荐，只是想让你知道这种方式也是可行的。</p>\n<h2 id=\"方式一：javac\">方式一：javac</h2>\n<p><strong>1、使用 JD-GUI 打开 jar 文件并导出 java 代码</strong></p>\n<p><strong>2、使用 javac 命令把 .java 文件转换为 .class 文件</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac -classpath [待生成的文件名.jar] [已修改的文件.java]</span><br></pre></td></tr></table></figure>\n<p>实际操作过程中直接执行 javac 命令往往不是自己期望的那么顺利，遇到问题针对性处理。</p>\n<p><code>2.1</code> 当遇到编码问题时：需要添加额外参数***-encoding utf-8***</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/49f46c79b1626bc9fa8f8a326a9efa6c.png\" alt=\"image.png\"></p>\n<p><code>2.2</code> 当遇到程序包找不到时：需要在<em><strong>已修改.java文件同级目录下</strong></em>放置缺失的 jar 包（可以使用分号分隔输入多个 jar 包参数）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/213dbc4980626c7aa6047fec3884f4a6.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/45f67a8f91ccdddbd528b08be84bb98c.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/4c096fedfc8e73d0a8f5fa17702a651f.png\" alt=\"image.png\"></p>\n<p><code>注意：</code><br>\n这里有个坑，如果打包过程有依赖 android jar，要求必须是 android sdk 目录下的 jar（官方的），不能随便找一个（阉割版），否则编译失败。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/56247e2d3f5361ead4c49454c0a7a3bd.png\" alt=\"image.png\"></p>\n<p><strong>3、最终命令（可能是这样，但不一定）</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac -encoding utf-<span class=\"number\">8</span> -classpath [依赖的<span class=\"number\">1.</span>jar;依赖的<span class=\"number\">2.</span>jar;依赖的<span class=\"number\">3.</span>jar;...] [已修改的单个 .java 文件或者待转换的 .java 文件所在目录]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac -encoding utf-<span class=\"number\">8</span> -classpath android.jar;classes-dex2jar.jar GRAppStoreActivity.java</span><br></pre></td></tr></table></figure>\n<p>这就成功把 java 代码编译为 class 代码</p>\n<p><strong>4、替换旧的 class 文件并重新打包成 jar</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf [新文件名.jar] -C [待打包的class文件目录] [输出到指定目录]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar cvf jsonlili.jar -C primer/ .</span><br></pre></td></tr></table></figure>\n<p>到这里就打包成功了，如果遇到什么问题欢迎评论 :) 如果 jar 依赖的第三方包较多，这种方式是不适合操作的，而且步骤也很繁琐，繁琐的事情必须简化，重复的工作可以流程化，那么下面简明介绍利用工具实现修改。</p>\n<h2 id=\"方式二：jclasslib\">方式二：jclasslib</h2>\n<p><strong>1、把 jar 包拖入工具中查看代码</strong></p>\n<p>或者打开某个 class 文件，对于某些简单、少量的修改也可以像方式一那样，修改、替换、重新打包生成目标 jar</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a6fd42dda952836b3119dff2faa988bd.png\" alt=\"image.png\"></p>\n<p><strong>2、代码定位并修改</strong></p>\n<p>我们以开头的客服弹窗提示为例，在原始 jar 文件中定位到<code>客服：</code>固定前缀，代码位于在 <em><strong>MyMainActivity</strong></em> 类的某个方法中</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ff17b6d926a31e648c532263e6268792.png\" alt=\"image.png\"></p>\n<p>我们知道匿名类经过编译后的 class 文件是一个单独的文件，且文件名往往带有<code>$</code>符号，我们解压 jar 文件可以缩小查找范围，一番查阅后定位到 <code>MyMainActivity$2$1.class</code> 文件中，Methods -&gt; onClick -&gt; Code（这里需要对 class 文件结构有一定的了解）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b9d17fbc33b11fa541911cf6e3d21416.png\" alt=\"image.png\"></p>\n<blockquote>\n<p>ldc：是 JVM 指令，指从常量池中取出字符串常量并压入操作数堆栈中。</p>\n<p>这里有两个动作，取出数据、把数据压入操作数栈（如果不了解操作数栈，建议略读字节码相关资料）</p>\n</blockquote>\n<p>关于 class 文件结构和字节码指令推荐官方文档： <a href=\"https://docs.oracle.com/javase/specs/jls/se19/html/index.html\">字节码指令</a></p>\n<p><strong>3、修改并保存</strong><br>\n从刚才的 <code>ldc #61 &lt;客服：&gt;</code> 中点击 <code>#61</code> 跳转到常量编辑处修改并保存</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ec7700f218da9a6d8d57445909ea9f05.png\" alt=\"image.png\"></p>\n<p>到这里，其实我们对 class 文件的修改已经完成了 :)</p>\n<h1>最后</h1>\n<p>我在想，如果想要修改更复杂的逻辑以满足更大的需求呢？怎么办？</p>\n<p>个人见解，那就是：<strong>持续学习，实践输出</strong></p>\n<p>1、我对 JVM 指令不熟，对修改无从下手，那么我想你应该需要进一步了解 class 文件结构，JVM 指令说明；<br>\n去哪学习？找官方资源、GitHub 学习资源、阅读大佬的文章。。。。。。</p>\n<p>2、工具使用的掌握，上面提到的 jclasslib 就是一个字节码查看、编辑工具，工具是往往有竞品存在，<br>\n我今天使用的是 jclasslib，可随着自我视野的扩展，我明天可能在使用 Recaf（也是字节码编辑工具）</p>\n<p><strong>附加：</strong></p>\n<ul>\n<li><a href=\"https://github.com/ingokegel/jclasslib\">jclasslib bytecode editor</a></li>\n<li><a href=\"https://github.com/java-decompiler/jd-gui/releases\">JD-GUI</a></li>\n<li><a href=\"https://down.52pojie.cn/Tools/\">在线破解工具包：</a></li>\n</ul>\n"},{"title":"Native 信号表（部分）","catalog":true,"date":"2022-09-24T07:35:36.000Z","subtitle":"描述对应信号代表的含义，协助问题排查","header-img":"/img/header_img/tag_bg.png","sticky":1,"_content":"\n# 常见信号\n\n|   signal  |   code    |   describe    |\n|   ---     |   ---     |   ---    |\n|   SIGILL  |   4   |   非法指令    |\n|   SIGTRAP |   5   |   断点调试异常 | \n|   SIGABRT |   6   |   异常退出    |\n|   SIGBUS  |   7   |   总线错误    |\n|   SIGFPE  |   8   |   浮点错误    |\n|   SIGEGV  |   11  |   无效引用    |\n|   SIGPIPE |   13  |   管道错误    |\n|   SIGTERM |   15  |   终止运行    |\n|   SIGSTKFLT|  16  |   栈异常      |\n|   SIGSYS  |   31  |   系统调用异常 |\n\n\n\n\n\n","source":"_posts/page-Native信号表.md","raw":"---\ntitle: Native 信号表（部分）\ncatalog: true\ndate: 2022-09-24 15:35:36\nsubtitle: 描述对应信号代表的含义，协助问题排查\nheader-img: /img/header_img/tag_bg.png\ntags: 笔记\ncategories: \nsticky: 1\n---\n\n# 常见信号\n\n|   signal  |   code    |   describe    |\n|   ---     |   ---     |   ---    |\n|   SIGILL  |   4   |   非法指令    |\n|   SIGTRAP |   5   |   断点调试异常 | \n|   SIGABRT |   6   |   异常退出    |\n|   SIGBUS  |   7   |   总线错误    |\n|   SIGFPE  |   8   |   浮点错误    |\n|   SIGEGV  |   11  |   无效引用    |\n|   SIGPIPE |   13  |   管道错误    |\n|   SIGTERM |   15  |   终止运行    |\n|   SIGSTKFLT|  16  |   栈异常      |\n|   SIGSYS  |   31  |   系统调用异常 |\n\n\n\n\n\n","slug":"page-Native信号表","published":1,"updated":"2022-09-24T07:35:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8ivvvsg0006feqpdiqxgs94","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1>常见信号</h1>\n<table>\n<thead>\n<tr>\n<th>signal</th>\n<th>code</th>\n<th>describe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SIGILL</td>\n<td>4</td>\n<td>非法指令</td>\n</tr>\n<tr>\n<td>SIGTRAP</td>\n<td>5</td>\n<td>断点调试异常</td>\n</tr>\n<tr>\n<td>SIGABRT</td>\n<td>6</td>\n<td>异常退出</td>\n</tr>\n<tr>\n<td>SIGBUS</td>\n<td>7</td>\n<td>总线错误</td>\n</tr>\n<tr>\n<td>SIGFPE</td>\n<td>8</td>\n<td>浮点错误</td>\n</tr>\n<tr>\n<td>SIGEGV</td>\n<td>11</td>\n<td>无效引用</td>\n</tr>\n<tr>\n<td>SIGPIPE</td>\n<td>13</td>\n<td>管道错误</td>\n</tr>\n<tr>\n<td>SIGTERM</td>\n<td>15</td>\n<td>终止运行</td>\n</tr>\n<tr>\n<td>SIGSTKFLT</td>\n<td>16</td>\n<td>栈异常</td>\n</tr>\n<tr>\n<td>SIGSYS</td>\n<td>31</td>\n<td>系统调用异常</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1>常见信号</h1>\n<table>\n<thead>\n<tr>\n<th>signal</th>\n<th>code</th>\n<th>describe</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SIGILL</td>\n<td>4</td>\n<td>非法指令</td>\n</tr>\n<tr>\n<td>SIGTRAP</td>\n<td>5</td>\n<td>断点调试异常</td>\n</tr>\n<tr>\n<td>SIGABRT</td>\n<td>6</td>\n<td>异常退出</td>\n</tr>\n<tr>\n<td>SIGBUS</td>\n<td>7</td>\n<td>总线错误</td>\n</tr>\n<tr>\n<td>SIGFPE</td>\n<td>8</td>\n<td>浮点错误</td>\n</tr>\n<tr>\n<td>SIGEGV</td>\n<td>11</td>\n<td>无效引用</td>\n</tr>\n<tr>\n<td>SIGPIPE</td>\n<td>13</td>\n<td>管道错误</td>\n</tr>\n<tr>\n<td>SIGTERM</td>\n<td>15</td>\n<td>终止运行</td>\n</tr>\n<tr>\n<td>SIGSTKFLT</td>\n<td>16</td>\n<td>栈异常</td>\n</tr>\n<tr>\n<td>SIGSYS</td>\n<td>31</td>\n<td>系统调用异常</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"再探 jclasslib 修改字节码","catalog":true,"date":"2022-09-25T15:11:20.000Z","subtitle":"夏天的海边，再美不过落日余晖","header-img":"/img/220923_classmodify/ymclass_bg.png","sticky":3,"_content":"\n\n# 从 jclasslib 认识 Hello world\n\n那年，再熟悉不过的 Hello world。\n\n可能很多人的第一个 java 程序都从‘你好世界’开始，从此踏上了一条***不归路***，多年以后（大概毕业半年），我以另一种方式重新认识它，这种方式叫**字节码**。\n\n> Test.java\n\n```java\npackage primer;\n\n//比如 Test 类的组成：\n//主版本号 + 常量池 + 访问标识 + 当前类签名 + 父类签名 + 接口集合 + 方法集合 + 字段集合 + 属性集合（仅列举部分）\npublic class Test{\n    //方法一：<init>()V   【默认构造器】\n    \n    //方法二：main([Ljava/lang/String;)V   【main 方法、V 表示 void、L 表示数组、String 变成类的全路径】（仅列举部分；String 作为对象结尾必须是逗号）\n    \n    //比如 main 方法（仅列举部分）\n    // 组成： \n    //    - 方法名 + 方法签名 + 访问标识（main + ([Ljava/lang/String;)V + public static）\n    //    - 异常表\n    //    - 字节码【我们讨论的重点】\n    \n    public static void main(String[] args) {\n        System.out.println(\"Hello World\");\n    }\n}\n```\n\n> `javac Test.java` 编译得到 Test.class 字节码文件\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/6fd777b8a85ec867a59fdb307082595b.png)\n\n也可以直接使用 `java <类全路径>` 直接运行查看效果，类全路径：包名 + 类名\n\n\n**举个例子：**\n\nTest 启动类的包名是 `package primer`，我本地目录是`primer/primer/Test.class`\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ec87c8988833fd4f5d34a8f9edb76d8c.png)\n\n1、在 class 所在目录下运行 ❌\n\n如果你在 Test.class 同级目录下执行命令运行，可惜报错了，大概意思是你的 Test 类全路径不对，当存在主类存在包名时，不能在当前 class 文件所在路径执行命令，需要在包名所在目录执行，否则报错，java 命令认为在当前目录下找***包名路径***，如果文件夹存在，则继续根据包名往下查找，直到找到主类，否则抛出异常。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/421255941965168858b22ae04aebe4d6.png)\n\n前面提到，直接执行字节码是这样 **`java <类全路径>`**，全路径是要包含包名在内，比如 `com.tencent.mmkv.MMKV`，如果 MMKV 类有执行入口，想要通过 java 命令执行它必须确保路径正确。**JVM 在加载类过程中是如何确定唯一个类的？**比如，有两个类名相同但包名（全路径）不同的 Test 类，JVM 通过`包名限定符 + 是否同一个虚拟机`唯一确定一个类（一般情况下，我们运行的程序只有一个虚拟机）\n\n2、在 class 启动类最外层包名的上一层目录运行 ☑️\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ec6fbd643ecb13cd555200dc4ab5fbd2.png)\n\n## 邂逅的 jclasslib\n\n这里开始涉及到具体的 JVM 指令，先奉上官方文档 [ORACLE - JVM 指令集 ](https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-6.html#jvms-6.5.getstatic)，全部指令记住一般不会这么干，通常是用时查阅，熟能生巧；对于 jclasslib 工具可以右击跳转到官方文档特定指令位置`show JVM spec`。以上面的`Hello World`为例子进行操作。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/160147efe7c8029f9f254df0e0d853e1.png)\n\n**1、修改字符串常量**\n\n先看 main 方法的 java 代码，输出的第一个字符串常量是 `Hello World`\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/cceaaf6bd80b26ff3667900fc47cb4cc.png)\n\n再看 main 方法的 class 字节码，也可以使用 javap 命令查看字节码\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/34699591dd1e5ae793d6b15d803951c0.png)\n\n```java\ngetstatic：     获取静态字段 out（System 类中的 out 声明是 `public final static PrintStream out = null;`）\nldc：           从常量池中获取值并压入操作数栈（此处常量是 `Hello World`）\ninvokevirtual： 类级别的方法调用（可以是通过类名调用方法 `System.out.println()`）\nnew：           创建 Hello 类的实例\ndup：           复制栈顶操作数\ninvokespecial： 调用实例方法\nastore_1：      把创建的 Hello 对象存储到 hello 本地变量\naload_1：       加载 hello 本地变量的对象\ninvokevirtual： 调用实例方法\nreturn：        方法退出\n```\n\n在工具上对字节码直接进行修改`ldc`读取的常量值，保存并重新编译运行（我在想一个疑惑：我修改的字符串之前在常量池中没有，是否在我修改并保存后会把这个字符串纳入常量池）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/76d48e2e9a414d6ec3651e6550891099.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/61b1f79282b2c1a44d998b702f129ae1.png)\n\n\n# 跳跳虎：现在一起想想想\n\n在我们的记忆中，字面量相同的字符串常量在常量池中是仅存一份。如下代码`\"张三\"`字符串在常量池中有且只有一份，但是程序中多处引用，直接修改常量池中的值那么这两个输出的都会改变了，我希望只改变`name`的输出，保持原先`aliasName`的值。\n\n直接修改常量池，确实两个都受影响，不符合期望\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/a49ef4afa4cd0c272c09965ce5d0d947.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/1ca7b5055306fd77c67fd1674eac168d.png)\n\n直接修改常量池不符合我们的期望，那如何操作满足需求呢？如果你有更好的版本欢迎评论。\n\n\n我只好妥协`创建一个新的字符串引用`，通过 jd-gui 把 class文件转换成 java 文件，修改完毕之后再 javac 编译成 class 文件然后运行；如果你有其他方法，欢迎评论。\n\n1、使用 JD-GUI 工具打开 class 文件，并导出为 java 文件\n2、修改完毕，重新使用 javac 编译\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/9f9269cbfec4b34850bee93a0a6b192d.png)\n\n\n## 修改 for 循环次数\n\n\n**1、第一种类型的 for 循环**\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/a76f00397b0fce18876026f6829738f5.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/7b81844c00d775820b56c6f0b9ac1961.png)\n\n```java\niconst_<`n`>：  把值压入操作数堆栈\nistore_<`n`>：  弹出并获取操作数堆栈栈顶顶的值，并将其值存储到本地变量\niload_<`n`>：   从本地变量获取值\nif_icmp：       如果比较成功则执行后续指令\ndup：           复制栈顶操作数\niinc `index` by `value`: 按照 value 自增\n\n```\n\n对于此种方式的 for 循环，我们可以修改自增量`value`来减少循环执行次数\n\n\n**2、第二种类型的 for 循环**\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/d5b54400c909e17de7eeac8fdbcbec4b.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/67ea8692acc97de294a5fd5624d0496a.png)\n\n```java\nbipush：    将值压入到操作数堆栈\n```\n\n对于此种方式的 for 循环，我们可以修改`final int MAX_COUNT（bipush 的值）`来跳过或减少循环执行次数\n\n**3、第三种类型的 for 循环**\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/bea551ae82ec1340deb4802f0d2d26a4.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/8c7203dfd3cd59c3eaefcb2c0f867dd3.png)\n\n```java\nanewarray： 创建数组引用\naastore：   把值存储到数组列表中\n```\n\n对于此种方式的 for 循环，我们可以修改`iinc`自增量`value`来减少循环执行次数\n\n# 修改 smail 某个变量\n\n上述算是实现了如何简单修改 class 文件中的某个常量，十分简单。但是呢？有时候反编译 apk 我们是直接使用 `apktool` 工具，反编译得到的是 `smail` 代码，难不成还想把 `smail` 转换成 class 再修改，可麻烦了。\n\n## 环境、工具准备\n\n> 工欲善其，事必先利其器\n\n1、[apktool 下载](https://ibotpeaches.github.io/Apktool/)\n2、[JADX 反编译利器下载](https://github.com/skylot/jadx)\n3、[VSCode 下载](https://code.visualstudio.com/)\n4、[VSCode smali2Java 插件](https://marketplace.visualstudio.com/items?itemName=ooooonly.smali2java)\n\n在 vscode 为 smali2Java 配置 jadx.bat 路径：`Decompile failed: The jadx executable path has not been configured`\n\n**1、配置 vscode**\n\n1、找到 vscode 插件配置文件：`C:\\Users\\YTS\\.vscode\\extensions`，比如我本地的 smali2java 配置是在：`C:\\Users\\YTS\\.vscode\\extensions\\ooooonly.smali2java-1.0.1\\pachage.json`\n\n2、找到 jadxPath：\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/f55e99d21c69e4130e01c16b9f2bb3a3.png)\n\n**2、获得 smail**\n\n当遇到 dex 反编译错误时候，可以使用参数 `--only-main-classes`\n\n```java\njava -jar apktool_2.6.1.jar d <apk 文件> --only-main-classes\n````\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/0148a4cc70f2c26b68184431306d67b4.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/b1241ca7c38bc50d143ffa67d80c5933.png)\n\n**3、简约分析**\n我们修改一下 sayHello() 延时执行时间，目前是 1000 毫秒，1000 的十六进制是 x03e8，sayHello() 所在类是 GameDemoActivity；在 smail 代码中搜索类名、方法名、x03e8 等可定位代码；如果我想修改成延时 5000 毫秒后执行，那把 5000（x01388） 的十六进制替换掉 x03e8 即可。\n\n```java\nprivate Handler mHandle = new Handler();\n\nprivate void sayHello() {\n    System.out.println(\"invoke sayHello time = \" + System.currentTimeMillis());\n    mHandle.postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            System.out.println(\"execute sayHello time = \" + System.currentTimeMillis());\n            System.out.println(\"你好，村长\");\n        }\n    }, 1000);\n}\n\n输出：\n2022-05-23 18:14:20.134 32431-32431/com.primer.comment I/System.out: invoke sayHello time = 1653300860134\n2022-05-23 18:14:21.135 32431-32431/com.primer.comment I/System.out: execute sayHello time = 1653300861135\n```\n\n> smail 源码\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/c3849a7c84f328e728c7c3ad6b929736.png)\n\n```java\n2022-05-23 18:21:48.473 1333-1333/com.primer.comment I/System.out: invoke sayHello time = 1653301308473\n2022-05-23 18:21:53.478 1333-1333/com.primer.comment I/System.out: execute sayHello time = 1653301313478\n```\n\n> 最后打包、签名\n\n```java\njava -jar apktool_2.6.1.jar b <打包目录> \n\napksigner sign --ks ****.jks --ks-key-alias <别名> --out <新生成 apk> <待签名 apk>\n```\n\n\n","source":"_posts/undefined/你我字节码.md","raw":"---\ntitle: 再探 jclasslib 修改字节码\ncatalog: true\ndate: 2022-09-25 23:11:20\nsubtitle: 夏天的海边，再美不过落日余晖\nheader-img: /img/220923_classmodify/ymclass_bg.png\ntags: 字节码\ncategories:\nsticky: 3\n---\n\n\n# 从 jclasslib 认识 Hello world\n\n那年，再熟悉不过的 Hello world。\n\n可能很多人的第一个 java 程序都从‘你好世界’开始，从此踏上了一条***不归路***，多年以后（大概毕业半年），我以另一种方式重新认识它，这种方式叫**字节码**。\n\n> Test.java\n\n```java\npackage primer;\n\n//比如 Test 类的组成：\n//主版本号 + 常量池 + 访问标识 + 当前类签名 + 父类签名 + 接口集合 + 方法集合 + 字段集合 + 属性集合（仅列举部分）\npublic class Test{\n    //方法一：<init>()V   【默认构造器】\n    \n    //方法二：main([Ljava/lang/String;)V   【main 方法、V 表示 void、L 表示数组、String 变成类的全路径】（仅列举部分；String 作为对象结尾必须是逗号）\n    \n    //比如 main 方法（仅列举部分）\n    // 组成： \n    //    - 方法名 + 方法签名 + 访问标识（main + ([Ljava/lang/String;)V + public static）\n    //    - 异常表\n    //    - 字节码【我们讨论的重点】\n    \n    public static void main(String[] args) {\n        System.out.println(\"Hello World\");\n    }\n}\n```\n\n> `javac Test.java` 编译得到 Test.class 字节码文件\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/6fd777b8a85ec867a59fdb307082595b.png)\n\n也可以直接使用 `java <类全路径>` 直接运行查看效果，类全路径：包名 + 类名\n\n\n**举个例子：**\n\nTest 启动类的包名是 `package primer`，我本地目录是`primer/primer/Test.class`\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ec87c8988833fd4f5d34a8f9edb76d8c.png)\n\n1、在 class 所在目录下运行 ❌\n\n如果你在 Test.class 同级目录下执行命令运行，可惜报错了，大概意思是你的 Test 类全路径不对，当存在主类存在包名时，不能在当前 class 文件所在路径执行命令，需要在包名所在目录执行，否则报错，java 命令认为在当前目录下找***包名路径***，如果文件夹存在，则继续根据包名往下查找，直到找到主类，否则抛出异常。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/421255941965168858b22ae04aebe4d6.png)\n\n前面提到，直接执行字节码是这样 **`java <类全路径>`**，全路径是要包含包名在内，比如 `com.tencent.mmkv.MMKV`，如果 MMKV 类有执行入口，想要通过 java 命令执行它必须确保路径正确。**JVM 在加载类过程中是如何确定唯一个类的？**比如，有两个类名相同但包名（全路径）不同的 Test 类，JVM 通过`包名限定符 + 是否同一个虚拟机`唯一确定一个类（一般情况下，我们运行的程序只有一个虚拟机）\n\n2、在 class 启动类最外层包名的上一层目录运行 ☑️\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/ec6fbd643ecb13cd555200dc4ab5fbd2.png)\n\n## 邂逅的 jclasslib\n\n这里开始涉及到具体的 JVM 指令，先奉上官方文档 [ORACLE - JVM 指令集 ](https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-6.html#jvms-6.5.getstatic)，全部指令记住一般不会这么干，通常是用时查阅，熟能生巧；对于 jclasslib 工具可以右击跳转到官方文档特定指令位置`show JVM spec`。以上面的`Hello World`为例子进行操作。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/160147efe7c8029f9f254df0e0d853e1.png)\n\n**1、修改字符串常量**\n\n先看 main 方法的 java 代码，输出的第一个字符串常量是 `Hello World`\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/cceaaf6bd80b26ff3667900fc47cb4cc.png)\n\n再看 main 方法的 class 字节码，也可以使用 javap 命令查看字节码\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/34699591dd1e5ae793d6b15d803951c0.png)\n\n```java\ngetstatic：     获取静态字段 out（System 类中的 out 声明是 `public final static PrintStream out = null;`）\nldc：           从常量池中获取值并压入操作数栈（此处常量是 `Hello World`）\ninvokevirtual： 类级别的方法调用（可以是通过类名调用方法 `System.out.println()`）\nnew：           创建 Hello 类的实例\ndup：           复制栈顶操作数\ninvokespecial： 调用实例方法\nastore_1：      把创建的 Hello 对象存储到 hello 本地变量\naload_1：       加载 hello 本地变量的对象\ninvokevirtual： 调用实例方法\nreturn：        方法退出\n```\n\n在工具上对字节码直接进行修改`ldc`读取的常量值，保存并重新编译运行（我在想一个疑惑：我修改的字符串之前在常量池中没有，是否在我修改并保存后会把这个字符串纳入常量池）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/76d48e2e9a414d6ec3651e6550891099.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/61b1f79282b2c1a44d998b702f129ae1.png)\n\n\n# 跳跳虎：现在一起想想想\n\n在我们的记忆中，字面量相同的字符串常量在常量池中是仅存一份。如下代码`\"张三\"`字符串在常量池中有且只有一份，但是程序中多处引用，直接修改常量池中的值那么这两个输出的都会改变了，我希望只改变`name`的输出，保持原先`aliasName`的值。\n\n直接修改常量池，确实两个都受影响，不符合期望\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/a49ef4afa4cd0c272c09965ce5d0d947.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/1ca7b5055306fd77c67fd1674eac168d.png)\n\n直接修改常量池不符合我们的期望，那如何操作满足需求呢？如果你有更好的版本欢迎评论。\n\n\n我只好妥协`创建一个新的字符串引用`，通过 jd-gui 把 class文件转换成 java 文件，修改完毕之后再 javac 编译成 class 文件然后运行；如果你有其他方法，欢迎评论。\n\n1、使用 JD-GUI 工具打开 class 文件，并导出为 java 文件\n2、修改完毕，重新使用 javac 编译\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/9f9269cbfec4b34850bee93a0a6b192d.png)\n\n\n## 修改 for 循环次数\n\n\n**1、第一种类型的 for 循环**\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/a76f00397b0fce18876026f6829738f5.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/7b81844c00d775820b56c6f0b9ac1961.png)\n\n```java\niconst_<`n`>：  把值压入操作数堆栈\nistore_<`n`>：  弹出并获取操作数堆栈栈顶顶的值，并将其值存储到本地变量\niload_<`n`>：   从本地变量获取值\nif_icmp：       如果比较成功则执行后续指令\ndup：           复制栈顶操作数\niinc `index` by `value`: 按照 value 自增\n\n```\n\n对于此种方式的 for 循环，我们可以修改自增量`value`来减少循环执行次数\n\n\n**2、第二种类型的 for 循环**\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/d5b54400c909e17de7eeac8fdbcbec4b.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/67ea8692acc97de294a5fd5624d0496a.png)\n\n```java\nbipush：    将值压入到操作数堆栈\n```\n\n对于此种方式的 for 循环，我们可以修改`final int MAX_COUNT（bipush 的值）`来跳过或减少循环执行次数\n\n**3、第三种类型的 for 循环**\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/bea551ae82ec1340deb4802f0d2d26a4.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/8c7203dfd3cd59c3eaefcb2c0f867dd3.png)\n\n```java\nanewarray： 创建数组引用\naastore：   把值存储到数组列表中\n```\n\n对于此种方式的 for 循环，我们可以修改`iinc`自增量`value`来减少循环执行次数\n\n# 修改 smail 某个变量\n\n上述算是实现了如何简单修改 class 文件中的某个常量，十分简单。但是呢？有时候反编译 apk 我们是直接使用 `apktool` 工具，反编译得到的是 `smail` 代码，难不成还想把 `smail` 转换成 class 再修改，可麻烦了。\n\n## 环境、工具准备\n\n> 工欲善其，事必先利其器\n\n1、[apktool 下载](https://ibotpeaches.github.io/Apktool/)\n2、[JADX 反编译利器下载](https://github.com/skylot/jadx)\n3、[VSCode 下载](https://code.visualstudio.com/)\n4、[VSCode smali2Java 插件](https://marketplace.visualstudio.com/items?itemName=ooooonly.smali2java)\n\n在 vscode 为 smali2Java 配置 jadx.bat 路径：`Decompile failed: The jadx executable path has not been configured`\n\n**1、配置 vscode**\n\n1、找到 vscode 插件配置文件：`C:\\Users\\YTS\\.vscode\\extensions`，比如我本地的 smali2java 配置是在：`C:\\Users\\YTS\\.vscode\\extensions\\ooooonly.smali2java-1.0.1\\pachage.json`\n\n2、找到 jadxPath：\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/f55e99d21c69e4130e01c16b9f2bb3a3.png)\n\n**2、获得 smail**\n\n当遇到 dex 反编译错误时候，可以使用参数 `--only-main-classes`\n\n```java\njava -jar apktool_2.6.1.jar d <apk 文件> --only-main-classes\n````\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/0148a4cc70f2c26b68184431306d67b4.png)\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/b1241ca7c38bc50d143ffa67d80c5933.png)\n\n**3、简约分析**\n我们修改一下 sayHello() 延时执行时间，目前是 1000 毫秒，1000 的十六进制是 x03e8，sayHello() 所在类是 GameDemoActivity；在 smail 代码中搜索类名、方法名、x03e8 等可定位代码；如果我想修改成延时 5000 毫秒后执行，那把 5000（x01388） 的十六进制替换掉 x03e8 即可。\n\n```java\nprivate Handler mHandle = new Handler();\n\nprivate void sayHello() {\n    System.out.println(\"invoke sayHello time = \" + System.currentTimeMillis());\n    mHandle.postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            System.out.println(\"execute sayHello time = \" + System.currentTimeMillis());\n            System.out.println(\"你好，村长\");\n        }\n    }, 1000);\n}\n\n输出：\n2022-05-23 18:14:20.134 32431-32431/com.primer.comment I/System.out: invoke sayHello time = 1653300860134\n2022-05-23 18:14:21.135 32431-32431/com.primer.comment I/System.out: execute sayHello time = 1653300861135\n```\n\n> smail 源码\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/c3849a7c84f328e728c7c3ad6b929736.png)\n\n```java\n2022-05-23 18:21:48.473 1333-1333/com.primer.comment I/System.out: invoke sayHello time = 1653301308473\n2022-05-23 18:21:53.478 1333-1333/com.primer.comment I/System.out: execute sayHello time = 1653301313478\n```\n\n> 最后打包、签名\n\n```java\njava -jar apktool_2.6.1.jar b <打包目录> \n\napksigner sign --ks ****.jks --ks-key-alias <别名> --out <新生成 apk> <待签名 apk>\n```\n\n\n","slug":"你我字节码","published":1,"lang":"undefined","updated":"2022-09-25T15:11:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8ivvvsh0008feqp9n386k56","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1>从 jclasslib 认识 Hello world</h1>\n<p>那年，再熟悉不过的 Hello world。</p>\n<p>可能很多人的第一个 java 程序都从‘你好世界’开始，从此踏上了一条<em><strong>不归路</strong></em>，多年以后（大概毕业半年），我以另一种方式重新认识它，这种方式叫<strong>字节码</strong>。</p>\n<blockquote>\n<p>Test.java</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> primer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//比如 Test 类的组成：</span></span><br><span class=\"line\"><span class=\"comment\">//主版本号 + 常量池 + 访问标识 + 当前类签名 + 父类签名 + 接口集合 + 方法集合 + 字段集合 + 属性集合（仅列举部分）</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//方法一：&lt;init&gt;()V   【默认构造器】</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//方法二：main([Ljava/lang/String;)V   【main 方法、V 表示 void、L 表示数组、String 变成类的全路径】（仅列举部分；String 作为对象结尾必须是逗号）</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//比如 main 方法（仅列举部分）</span></span><br><span class=\"line\">    <span class=\"comment\">// 组成： </span></span><br><span class=\"line\">    <span class=\"comment\">//    - 方法名 + 方法签名 + 访问标识（main + ([Ljava/lang/String;)V + public static）</span></span><br><span class=\"line\">    <span class=\"comment\">//    - 异常表</span></span><br><span class=\"line\">    <span class=\"comment\">//    - 字节码【我们讨论的重点】</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>javac Test.java</code> 编译得到 Test.class 字节码文件</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/6fd777b8a85ec867a59fdb307082595b.png\" alt=\"image.png\"></p>\n<p>也可以直接使用 <code>java &lt;类全路径&gt;</code> 直接运行查看效果，类全路径：包名 + 类名</p>\n<p><strong>举个例子：</strong></p>\n<p>Test 启动类的包名是 <code>package primer</code>，我本地目录是<code>primer/primer/Test.class</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ec87c8988833fd4f5d34a8f9edb76d8c.png\" alt=\"image.png\"></p>\n<p>1、在 class 所在目录下运行 ❌</p>\n<p>如果你在 Test.class 同级目录下执行命令运行，可惜报错了，大概意思是你的 Test 类全路径不对，当存在主类存在包名时，不能在当前 class 文件所在路径执行命令，需要在包名所在目录执行，否则报错，java 命令认为在当前目录下找<em><strong>包名路径</strong></em>，如果文件夹存在，则继续根据包名往下查找，直到找到主类，否则抛出异常。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/421255941965168858b22ae04aebe4d6.png\" alt=\"image.png\"></p>\n<p>前面提到，直接执行字节码是这样 <strong><code>java &lt;类全路径&gt;</code></strong>，全路径是要包含包名在内，比如 <code>com.tencent.mmkv.MMKV</code>，如果 MMKV 类有执行入口，想要通过 java 命令执行它必须确保路径正确。**JVM 在加载类过程中是如何确定唯一个类的？**比如，有两个类名相同但包名（全路径）不同的 Test 类，JVM 通过<code>包名限定符 + 是否同一个虚拟机</code>唯一确定一个类（一般情况下，我们运行的程序只有一个虚拟机）</p>\n<p>2、在 class 启动类最外层包名的上一层目录运行 ☑️</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ec6fbd643ecb13cd555200dc4ab5fbd2.png\" alt=\"image.png\"></p>\n<h2 id=\"邂逅的-jclasslib\">邂逅的 jclasslib</h2>\n<p>这里开始涉及到具体的 JVM 指令，先奉上官方文档 <a href=\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-6.html#jvms-6.5.getstatic\">ORACLE - JVM 指令集 </a>，全部指令记住一般不会这么干，通常是用时查阅，熟能生巧；对于 jclasslib 工具可以右击跳转到官方文档特定指令位置<code>show JVM spec</code>。以上面的<code>Hello World</code>为例子进行操作。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/160147efe7c8029f9f254df0e0d853e1.png\" alt=\"image.png\"></p>\n<p><strong>1、修改字符串常量</strong></p>\n<p>先看 main 方法的 java 代码，输出的第一个字符串常量是 <code>Hello World</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/cceaaf6bd80b26ff3667900fc47cb4cc.png\" alt=\"image.png\"></p>\n<p>再看 main 方法的 class 字节码，也可以使用 javap 命令查看字节码</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/34699591dd1e5ae793d6b15d803951c0.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getstatic：     获取静态字段 out（System 类中的 out 声明是 `<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> PrintStream out = <span class=\"keyword\">null</span>;`）</span><br><span class=\"line\">ldc：           从常量池中获取值并压入操作数栈（此处常量是 `Hello World`）</span><br><span class=\"line\">invokevirtual： 类级别的方法调用（可以是通过类名调用方法 `System.out.println()`）</span><br><span class=\"line\"><span class=\"keyword\">new</span>：           创建 Hello 类的实例</span><br><span class=\"line\">dup：           复制栈顶操作数</span><br><span class=\"line\">invokespecial： 调用实例方法</span><br><span class=\"line\">astore_1：      把创建的 Hello 对象存储到 hello 本地变量</span><br><span class=\"line\">aload_1：       加载 hello 本地变量的对象</span><br><span class=\"line\">invokevirtual： 调用实例方法</span><br><span class=\"line\"><span class=\"keyword\">return</span>：        方法退出</span><br></pre></td></tr></table></figure>\n<p>在工具上对字节码直接进行修改<code>ldc</code>读取的常量值，保存并重新编译运行（我在想一个疑惑：我修改的字符串之前在常量池中没有，是否在我修改并保存后会把这个字符串纳入常量池）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/76d48e2e9a414d6ec3651e6550891099.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/61b1f79282b2c1a44d998b702f129ae1.png\" alt=\"image.png\"></p>\n<h1>跳跳虎：现在一起想想想</h1>\n<p>在我们的记忆中，字面量相同的字符串常量在常量池中是仅存一份。如下代码<code>&quot;张三&quot;</code>字符串在常量池中有且只有一份，但是程序中多处引用，直接修改常量池中的值那么这两个输出的都会改变了，我希望只改变<code>name</code>的输出，保持原先<code>aliasName</code>的值。</p>\n<p>直接修改常量池，确实两个都受影响，不符合期望</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a49ef4afa4cd0c272c09965ce5d0d947.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1ca7b5055306fd77c67fd1674eac168d.png\" alt=\"image.png\"></p>\n<p>直接修改常量池不符合我们的期望，那如何操作满足需求呢？如果你有更好的版本欢迎评论。</p>\n<p>我只好妥协<code>创建一个新的字符串引用</code>，通过 jd-gui 把 class文件转换成 java 文件，修改完毕之后再 javac 编译成 class 文件然后运行；如果你有其他方法，欢迎评论。</p>\n<p>1、使用 JD-GUI 工具打开 class 文件，并导出为 java 文件<br>\n2、修改完毕，重新使用 javac 编译</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9f9269cbfec4b34850bee93a0a6b192d.png\" alt=\"image.png\"></p>\n<h2 id=\"修改-for-循环次数\">修改 for 循环次数</h2>\n<p><strong>1、第一种类型的 for 循环</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a76f00397b0fce18876026f6829738f5.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/7b81844c00d775820b56c6f0b9ac1961.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconst_&lt;`n`&gt;：  把值压入操作数堆栈</span><br><span class=\"line\">istore_&lt;`n`&gt;：  弹出并获取操作数堆栈栈顶顶的值，并将其值存储到本地变量</span><br><span class=\"line\">iload_&lt;`n`&gt;：   从本地变量获取值</span><br><span class=\"line\">if_icmp：       如果比较成功则执行后续指令</span><br><span class=\"line\">dup：           复制栈顶操作数</span><br><span class=\"line\">iinc `index` by `value`: 按照 value 自增</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>对于此种方式的 for 循环，我们可以修改自增量<code>value</code>来减少循环执行次数</p>\n<p><strong>2、第二种类型的 for 循环</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d5b54400c909e17de7eeac8fdbcbec4b.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/67ea8692acc97de294a5fd5624d0496a.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bipush：    将值压入到操作数堆栈</span><br></pre></td></tr></table></figure>\n<p>对于此种方式的 for 循环，我们可以修改<code>final int MAX_COUNT（bipush 的值）</code>来跳过或减少循环执行次数</p>\n<p><strong>3、第三种类型的 for 循环</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/bea551ae82ec1340deb4802f0d2d26a4.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/8c7203dfd3cd59c3eaefcb2c0f867dd3.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anewarray： 创建数组引用</span><br><span class=\"line\">aastore：   把值存储到数组列表中</span><br></pre></td></tr></table></figure>\n<p>对于此种方式的 for 循环，我们可以修改<code>iinc</code>自增量<code>value</code>来减少循环执行次数</p>\n<h1>修改 smail 某个变量</h1>\n<p>上述算是实现了如何简单修改 class 文件中的某个常量，十分简单。但是呢？有时候反编译 apk 我们是直接使用 <code>apktool</code> 工具，反编译得到的是 <code>smail</code> 代码，难不成还想把 <code>smail</code> 转换成 class 再修改，可麻烦了。</p>\n<h2 id=\"环境、工具准备\">环境、工具准备</h2>\n<blockquote>\n<p>工欲善其，事必先利其器</p>\n</blockquote>\n<p>1、<a href=\"https://ibotpeaches.github.io/Apktool/\">apktool 下载</a><br>\n2、<a href=\"https://github.com/skylot/jadx\">JADX 反编译利器下载</a><br>\n3、<a href=\"https://code.visualstudio.com/\">VSCode 下载</a><br>\n4、<a href=\"https://marketplace.visualstudio.com/items?itemName=ooooonly.smali2java\">VSCode smali2Java 插件</a></p>\n<p>在 vscode 为 smali2Java 配置 jadx.bat 路径：<code>Decompile failed: The jadx executable path has not been configured</code></p>\n<p><strong>1、配置 vscode</strong></p>\n<p>1、找到 vscode 插件配置文件：<code>C:\\Users\\YTS\\.vscode\\extensions</code>，比如我本地的 smali2java 配置是在：<code>C:\\Users\\YTS\\.vscode\\extensions\\ooooonly.smali2java-1.0.1\\pachage.json</code></p>\n<p>2、找到 jadxPath：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f55e99d21c69e4130e01c16b9f2bb3a3.png\" alt=\"image.png\"></p>\n<p><strong>2、获得 smail</strong></p>\n<p>当遇到 dex 反编译错误时候，可以使用参数 <code>--only-main-classes</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.1</span>.jar d &lt;apk 文件&gt; --only-main-classes</span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\">![image.png](https:<span class=\"comment\">//img-blog.csdnimg.cn/img_convert/0148a4cc70f2c26b68184431306d67b4.png)</span></span><br><span class=\"line\"></span><br><span class=\"line\">![image.png](https:<span class=\"comment\">//img-blog.csdnimg.cn/img_convert/b1241ca7c38bc50d143ffa67d80c5933.png)</span></span><br><span class=\"line\"></span><br><span class=\"line\">**<span class=\"number\">3</span>、简约分析**</span><br><span class=\"line\">我们修改一下 sayHello() 延时执行时间，目前是 <span class=\"number\">1000</span> 毫秒，<span class=\"number\">1000</span> 的十六进制是 x03e8，sayHello() 所在类是 GameDemoActivity；在 smail 代码中搜索类名、方法名、x03e8 等可定位代码；如果我想修改成延时 <span class=\"number\">5000</span> 毫秒后执行，那把 <span class=\"number\">5000</span>（x01388） 的十六进制替换掉 x03e8 即可。</span><br><span class=\"line\"></span><br><span class=\"line\">```java</span><br><span class=\"line\"><span class=\"keyword\">private</span> Handler mHandle = <span class=\"keyword\">new</span> Handler();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sayHello</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;invoke sayHello time = &quot;</span> + System.currentTimeMillis());</span><br><span class=\"line\">    mHandle.postDelayed(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;execute sayHello time = &quot;</span> + System.currentTimeMillis());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;你好，村长&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">14</span>:<span class=\"number\">20.134</span> <span class=\"number\">32431</span>-<span class=\"number\">32431</span>/com.primer.comment I/System.out: invoke sayHello time = <span class=\"number\">1653300860134</span></span><br><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">14</span>:<span class=\"number\">21.135</span> <span class=\"number\">32431</span>-<span class=\"number\">32431</span>/com.primer.comment I/System.out: execute sayHello time = <span class=\"number\">1653300861135</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>smail 源码</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c3849a7c84f328e728c7c3ad6b929736.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">21</span>:<span class=\"number\">48.473</span> <span class=\"number\">1333</span>-<span class=\"number\">1333</span>/com.primer.comment I/System.out: invoke sayHello time = <span class=\"number\">1653301308473</span></span><br><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">21</span>:<span class=\"number\">53.478</span> <span class=\"number\">1333</span>-<span class=\"number\">1333</span>/com.primer.comment I/System.out: execute sayHello time = <span class=\"number\">1653301313478</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>最后打包、签名</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.1</span>.jar b &lt;打包目录&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">apksigner sign --ks ****.jks --ks-key-alias &lt;别名&gt; --out &lt;新生成 apk&gt; &lt;待签名 apk&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>从 jclasslib 认识 Hello world</h1>\n<p>那年，再熟悉不过的 Hello world。</p>\n<p>可能很多人的第一个 java 程序都从‘你好世界’开始，从此踏上了一条<em><strong>不归路</strong></em>，多年以后（大概毕业半年），我以另一种方式重新认识它，这种方式叫<strong>字节码</strong>。</p>\n<blockquote>\n<p>Test.java</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> primer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//比如 Test 类的组成：</span></span><br><span class=\"line\"><span class=\"comment\">//主版本号 + 常量池 + 访问标识 + 当前类签名 + 父类签名 + 接口集合 + 方法集合 + 字段集合 + 属性集合（仅列举部分）</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//方法一：&lt;init&gt;()V   【默认构造器】</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//方法二：main([Ljava/lang/String;)V   【main 方法、V 表示 void、L 表示数组、String 变成类的全路径】（仅列举部分；String 作为对象结尾必须是逗号）</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//比如 main 方法（仅列举部分）</span></span><br><span class=\"line\">    <span class=\"comment\">// 组成： </span></span><br><span class=\"line\">    <span class=\"comment\">//    - 方法名 + 方法签名 + 访问标识（main + ([Ljava/lang/String;)V + public static）</span></span><br><span class=\"line\">    <span class=\"comment\">//    - 异常表</span></span><br><span class=\"line\">    <span class=\"comment\">//    - 字节码【我们讨论的重点】</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>javac Test.java</code> 编译得到 Test.class 字节码文件</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/6fd777b8a85ec867a59fdb307082595b.png\" alt=\"image.png\"></p>\n<p>也可以直接使用 <code>java &lt;类全路径&gt;</code> 直接运行查看效果，类全路径：包名 + 类名</p>\n<p><strong>举个例子：</strong></p>\n<p>Test 启动类的包名是 <code>package primer</code>，我本地目录是<code>primer/primer/Test.class</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ec87c8988833fd4f5d34a8f9edb76d8c.png\" alt=\"image.png\"></p>\n<p>1、在 class 所在目录下运行 ❌</p>\n<p>如果你在 Test.class 同级目录下执行命令运行，可惜报错了，大概意思是你的 Test 类全路径不对，当存在主类存在包名时，不能在当前 class 文件所在路径执行命令，需要在包名所在目录执行，否则报错，java 命令认为在当前目录下找<em><strong>包名路径</strong></em>，如果文件夹存在，则继续根据包名往下查找，直到找到主类，否则抛出异常。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/421255941965168858b22ae04aebe4d6.png\" alt=\"image.png\"></p>\n<p>前面提到，直接执行字节码是这样 <strong><code>java &lt;类全路径&gt;</code></strong>，全路径是要包含包名在内，比如 <code>com.tencent.mmkv.MMKV</code>，如果 MMKV 类有执行入口，想要通过 java 命令执行它必须确保路径正确。**JVM 在加载类过程中是如何确定唯一个类的？**比如，有两个类名相同但包名（全路径）不同的 Test 类，JVM 通过<code>包名限定符 + 是否同一个虚拟机</code>唯一确定一个类（一般情况下，我们运行的程序只有一个虚拟机）</p>\n<p>2、在 class 启动类最外层包名的上一层目录运行 ☑️</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/ec6fbd643ecb13cd555200dc4ab5fbd2.png\" alt=\"image.png\"></p>\n<h2 id=\"邂逅的-jclasslib\">邂逅的 jclasslib</h2>\n<p>这里开始涉及到具体的 JVM 指令，先奉上官方文档 <a href=\"https://docs.oracle.com/javase/specs/jvms/se16/html/jvms-6.html#jvms-6.5.getstatic\">ORACLE - JVM 指令集 </a>，全部指令记住一般不会这么干，通常是用时查阅，熟能生巧；对于 jclasslib 工具可以右击跳转到官方文档特定指令位置<code>show JVM spec</code>。以上面的<code>Hello World</code>为例子进行操作。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/160147efe7c8029f9f254df0e0d853e1.png\" alt=\"image.png\"></p>\n<p><strong>1、修改字符串常量</strong></p>\n<p>先看 main 方法的 java 代码，输出的第一个字符串常量是 <code>Hello World</code></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/cceaaf6bd80b26ff3667900fc47cb4cc.png\" alt=\"image.png\"></p>\n<p>再看 main 方法的 class 字节码，也可以使用 javap 命令查看字节码</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/34699591dd1e5ae793d6b15d803951c0.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getstatic：     获取静态字段 out（System 类中的 out 声明是 `<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> PrintStream out = <span class=\"keyword\">null</span>;`）</span><br><span class=\"line\">ldc：           从常量池中获取值并压入操作数栈（此处常量是 `Hello World`）</span><br><span class=\"line\">invokevirtual： 类级别的方法调用（可以是通过类名调用方法 `System.out.println()`）</span><br><span class=\"line\"><span class=\"keyword\">new</span>：           创建 Hello 类的实例</span><br><span class=\"line\">dup：           复制栈顶操作数</span><br><span class=\"line\">invokespecial： 调用实例方法</span><br><span class=\"line\">astore_1：      把创建的 Hello 对象存储到 hello 本地变量</span><br><span class=\"line\">aload_1：       加载 hello 本地变量的对象</span><br><span class=\"line\">invokevirtual： 调用实例方法</span><br><span class=\"line\"><span class=\"keyword\">return</span>：        方法退出</span><br></pre></td></tr></table></figure>\n<p>在工具上对字节码直接进行修改<code>ldc</code>读取的常量值，保存并重新编译运行（我在想一个疑惑：我修改的字符串之前在常量池中没有，是否在我修改并保存后会把这个字符串纳入常量池）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/76d48e2e9a414d6ec3651e6550891099.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/61b1f79282b2c1a44d998b702f129ae1.png\" alt=\"image.png\"></p>\n<h1>跳跳虎：现在一起想想想</h1>\n<p>在我们的记忆中，字面量相同的字符串常量在常量池中是仅存一份。如下代码<code>&quot;张三&quot;</code>字符串在常量池中有且只有一份，但是程序中多处引用，直接修改常量池中的值那么这两个输出的都会改变了，我希望只改变<code>name</code>的输出，保持原先<code>aliasName</code>的值。</p>\n<p>直接修改常量池，确实两个都受影响，不符合期望</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a49ef4afa4cd0c272c09965ce5d0d947.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1ca7b5055306fd77c67fd1674eac168d.png\" alt=\"image.png\"></p>\n<p>直接修改常量池不符合我们的期望，那如何操作满足需求呢？如果你有更好的版本欢迎评论。</p>\n<p>我只好妥协<code>创建一个新的字符串引用</code>，通过 jd-gui 把 class文件转换成 java 文件，修改完毕之后再 javac 编译成 class 文件然后运行；如果你有其他方法，欢迎评论。</p>\n<p>1、使用 JD-GUI 工具打开 class 文件，并导出为 java 文件<br>\n2、修改完毕，重新使用 javac 编译</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9f9269cbfec4b34850bee93a0a6b192d.png\" alt=\"image.png\"></p>\n<h2 id=\"修改-for-循环次数\">修改 for 循环次数</h2>\n<p><strong>1、第一种类型的 for 循环</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a76f00397b0fce18876026f6829738f5.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/7b81844c00d775820b56c6f0b9ac1961.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconst_&lt;`n`&gt;：  把值压入操作数堆栈</span><br><span class=\"line\">istore_&lt;`n`&gt;：  弹出并获取操作数堆栈栈顶顶的值，并将其值存储到本地变量</span><br><span class=\"line\">iload_&lt;`n`&gt;：   从本地变量获取值</span><br><span class=\"line\">if_icmp：       如果比较成功则执行后续指令</span><br><span class=\"line\">dup：           复制栈顶操作数</span><br><span class=\"line\">iinc `index` by `value`: 按照 value 自增</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>对于此种方式的 for 循环，我们可以修改自增量<code>value</code>来减少循环执行次数</p>\n<p><strong>2、第二种类型的 for 循环</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d5b54400c909e17de7eeac8fdbcbec4b.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/67ea8692acc97de294a5fd5624d0496a.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bipush：    将值压入到操作数堆栈</span><br></pre></td></tr></table></figure>\n<p>对于此种方式的 for 循环，我们可以修改<code>final int MAX_COUNT（bipush 的值）</code>来跳过或减少循环执行次数</p>\n<p><strong>3、第三种类型的 for 循环</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/bea551ae82ec1340deb4802f0d2d26a4.png\" alt=\"image.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/8c7203dfd3cd59c3eaefcb2c0f867dd3.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anewarray： 创建数组引用</span><br><span class=\"line\">aastore：   把值存储到数组列表中</span><br></pre></td></tr></table></figure>\n<p>对于此种方式的 for 循环，我们可以修改<code>iinc</code>自增量<code>value</code>来减少循环执行次数</p>\n<h1>修改 smail 某个变量</h1>\n<p>上述算是实现了如何简单修改 class 文件中的某个常量，十分简单。但是呢？有时候反编译 apk 我们是直接使用 <code>apktool</code> 工具，反编译得到的是 <code>smail</code> 代码，难不成还想把 <code>smail</code> 转换成 class 再修改，可麻烦了。</p>\n<h2 id=\"环境、工具准备\">环境、工具准备</h2>\n<blockquote>\n<p>工欲善其，事必先利其器</p>\n</blockquote>\n<p>1、<a href=\"https://ibotpeaches.github.io/Apktool/\">apktool 下载</a><br>\n2、<a href=\"https://github.com/skylot/jadx\">JADX 反编译利器下载</a><br>\n3、<a href=\"https://code.visualstudio.com/\">VSCode 下载</a><br>\n4、<a href=\"https://marketplace.visualstudio.com/items?itemName=ooooonly.smali2java\">VSCode smali2Java 插件</a></p>\n<p>在 vscode 为 smali2Java 配置 jadx.bat 路径：<code>Decompile failed: The jadx executable path has not been configured</code></p>\n<p><strong>1、配置 vscode</strong></p>\n<p>1、找到 vscode 插件配置文件：<code>C:\\Users\\YTS\\.vscode\\extensions</code>，比如我本地的 smali2java 配置是在：<code>C:\\Users\\YTS\\.vscode\\extensions\\ooooonly.smali2java-1.0.1\\pachage.json</code></p>\n<p>2、找到 jadxPath：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f55e99d21c69e4130e01c16b9f2bb3a3.png\" alt=\"image.png\"></p>\n<p><strong>2、获得 smail</strong></p>\n<p>当遇到 dex 反编译错误时候，可以使用参数 <code>--only-main-classes</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.1</span>.jar d &lt;apk 文件&gt; --only-main-classes</span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\">![image.png](https:<span class=\"comment\">//img-blog.csdnimg.cn/img_convert/0148a4cc70f2c26b68184431306d67b4.png)</span></span><br><span class=\"line\"></span><br><span class=\"line\">![image.png](https:<span class=\"comment\">//img-blog.csdnimg.cn/img_convert/b1241ca7c38bc50d143ffa67d80c5933.png)</span></span><br><span class=\"line\"></span><br><span class=\"line\">**<span class=\"number\">3</span>、简约分析**</span><br><span class=\"line\">我们修改一下 sayHello() 延时执行时间，目前是 <span class=\"number\">1000</span> 毫秒，<span class=\"number\">1000</span> 的十六进制是 x03e8，sayHello() 所在类是 GameDemoActivity；在 smail 代码中搜索类名、方法名、x03e8 等可定位代码；如果我想修改成延时 <span class=\"number\">5000</span> 毫秒后执行，那把 <span class=\"number\">5000</span>（x01388） 的十六进制替换掉 x03e8 即可。</span><br><span class=\"line\"></span><br><span class=\"line\">```java</span><br><span class=\"line\"><span class=\"keyword\">private</span> Handler mHandle = <span class=\"keyword\">new</span> Handler();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">sayHello</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;invoke sayHello time = &quot;</span> + System.currentTimeMillis());</span><br><span class=\"line\">    mHandle.postDelayed(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;execute sayHello time = &quot;</span> + System.currentTimeMillis());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;你好，村长&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">14</span>:<span class=\"number\">20.134</span> <span class=\"number\">32431</span>-<span class=\"number\">32431</span>/com.primer.comment I/System.out: invoke sayHello time = <span class=\"number\">1653300860134</span></span><br><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">14</span>:<span class=\"number\">21.135</span> <span class=\"number\">32431</span>-<span class=\"number\">32431</span>/com.primer.comment I/System.out: execute sayHello time = <span class=\"number\">1653300861135</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>smail 源码</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c3849a7c84f328e728c7c3ad6b929736.png\" alt=\"image.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">21</span>:<span class=\"number\">48.473</span> <span class=\"number\">1333</span>-<span class=\"number\">1333</span>/com.primer.comment I/System.out: invoke sayHello time = <span class=\"number\">1653301308473</span></span><br><span class=\"line\"><span class=\"number\">2022</span>-<span class=\"number\">05</span>-<span class=\"number\">23</span> <span class=\"number\">18</span>:<span class=\"number\">21</span>:<span class=\"number\">53.478</span> <span class=\"number\">1333</span>-<span class=\"number\">1333</span>/com.primer.comment I/System.out: execute sayHello time = <span class=\"number\">1653301313478</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>最后打包、签名</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.1</span>.jar b &lt;打包目录&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">apksigner sign --ks ****.jks --ks-key-alias &lt;别名&gt; --out &lt;新生成 apk&gt; &lt;待签名 apk&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"从 smail 接入第三方 SDK","catalog":true,"date":"2022-09-26T12:56:19.000Z","subtitle":"有时通过查看、修改第三方库能更好解决问题","header-img":"/img/220926_smailsdk/smail_bg.webp","sticky":3,"_content":"\n# 遇到过这种场景吗\n\n什么时候要利用 smali 语言层面接入第三方 sdk ？一般都是使用 java 接口，一目了然，搞个 smali 不是没事找事？场景不同，在没有办法的时候这就是一种方法。\n\nprogramer A：   发你一个 apk 文件，帮我看下\nprogramer A：   因为我们没有原工程，只有一个 APK，我想把咋们的 sdk 接入到里面，怎么搞？\nprogramer B：   应该可以，可以试试以字节码、smail 形式接入\nprogramer A：   smail ？这是啥啊！\nprogramer B：   自己查资料。。。。。。\n\n\n**嗯？没有思路，不然写个 Demo 看看吧**\n\n1、准备一个 sdk: `gcsdk-1.0.0.jar`\n2、准备一个 apk: `app-0.apk`（假设是我们的应用）\n3、创建一个空白 Android 项目，预备接入 sdk: `app-1.apk`（备用） \n\n模拟几个对外的接口简单生成一个 jar，实际中接入的第三方 sdk 接口也不会很复杂。\n\n---\n\n> gcsdk-1.0.0（示例） \n\n```java\n// 初始化\nGCSDK.getInstance().init(new InitCallback() {\n            @Override\n            public void initSuccess() {\n                System.out.println(\"gcsdk-初始化成功\");\n            }\n            @Override\n            public void initFail(int code, String error) {\n                System.out.println(\"gcsdk-初始化失败：code = \" + code + \"  error = \" + error);\n            }\n});\n\n//登录\nGCSDK.getInstance().login(new LoginCallback() {\n            @Override\n            public void onLoginSuccess() {\n                System.out.println(\"登录-成功\");\n            }\n            @Override\n            public void inLoginFail(int code, String error) {\n                System.out.println(\"登录-失败：code = \" + code + \" error = \" + error);\n            }\n});\n\n//广告        \nAdParams adParams = new AdParams();\nGCSDK.getInstance().openAd(adParams, new AdCallback() {\n            @Override\n            public void onClick() {\n                System.out.println(\"广告-点击\");\n            }\n            @Override\n            public void onClickSkip() {\n                System.out.println(\"广告-点击跳过\");\n            }\n            @Override\n            public void onClose() {\n                System.out.println(\"广告-关闭\");\n            }\n            @Override\n            public void onOpenFaild(int code, String error) {\n                System.out.println(\"广告-打开失败：code = \" + code + \" error = \" + error);\n            }\n            @Override\n            public void onOpenSuccess() {\n                System.out.println(\"广告-打开成功\");\n            }\n            @Override\n            public void onLoadBegin() {\n                System.out.println(\"广告-加载开始\");\n            }\n            @Override\n            public void onLoadFaild(int code, String error) {\n                System.out.println(\"广告-加载失败：code = \" + code + \" error = \" + error);\n            }\n            @Override\n            public void onLoadComplete() {\n                System.out.println(\"广告-加载完成\");\n            }\n            @Override\n            public void onDownloadBegin() {\n                System.out.println(\"广告-下载开始\");\n            }\n            @Override\n            public void onDownloadFail(int code, String error) {\n                System.out.println(\"广告-下载失败：code =\" + code + \" error = \" + error);\n            }\n\n            @Override\n            public void onDownloadComplete() {\n                System.out.println(\"广告-下载完成\");\n            }\n});\n\n//支付\nPayParams payParams = new PayParams();\nPayManager.getInstance().pay(payParams, new PayCallback() {\n            @Override\n            public void onPaySuccess() {\n                System.out.println(\"支付-成功\");\n            }\n            @Override\n            public void onPayFail(int code, String error) {\n                System.out.println(\"支付-失败：code = \" + code + \" error = \" + error);\n            }\n});\n```\n\n> 空白 Android 项目，模拟接入 gcsdk，接入完成后打包备用，生成的 apk 用于获取 smali 代码\n\n```java\n// App.java\npackage com.example.gcsdkdemo;\nimport android.app.Application;\nimport android.util.Log;\nimport com.primer.jsonlili.callback.InitCallback;\nimport com.primer.jsonlili.core.GCSDK;\n\npublic class App extends Application {\n    private final String TAG = \"cunzhang\";\n    //初始化回调\n    private InitCallback mInitCallback = new InitCallback() {\n        @Override\n        public void initSuccess() {\n            Log.d(TAG, \"initSuccess: \");\n        }\n\n        @Override\n        public void initFail(int i, String s) {\n            Log.d(TAG, \"initFail: \");\n        }\n    };\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        //gcsdk 初始化\n        GCSDK.getInstance().init(mInitCallback);\n    }\n}\n```\n```java\n//MainActivity.java\npackage com.example.gcsdkdemo;\nimport androidx.appcompat.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport com.primer.jsonlili.callback.AdCallback;\nimport com.primer.jsonlili.callback.LoginCallback;\nimport com.primer.jsonlili.callback.PayCallback;\nimport com.primer.jsonlili.core.GCSDK;\nimport com.primer.jsonlili.params.AdParams;\nimport com.primer.jsonlili.params.PayParams;\n\npublic class MainActivity extends AppCompatActivity {\n    private final String TAG = \"cunzhang\";\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    public void onPay(View view) {\n        Log.d(TAG, \"onPay: \");\n        //支付接口\n        PayParams payParams = new PayParams();\n        GCSDK.getInstance().pay(payParams, new PayCallback() {\n            @Override\n            public void onPaySuccess() {\n                Log.d(TAG, \"onPaySuccess: \");\n            }\n            @Override\n            public void onPayFail(int i, String s) {\n                Log.d(TAG, \"onPayFail: \");\n            }\n        });\n    }\n\n    public void onLogin(View view) {\n        Log.d(TAG, \"onLogin: \");\n        //登录接口\n        GCSDK.getInstance().login(new LoginCallback() {\n            @Override\n            public void onLoginSuccess() {\n                Log.d(TAG, \"onLoginSuccess: \");\n            }\n            @Override\n            public void inLoginFail(int i, String s) {\n                Log.d(TAG, \"inLoginFail: \");\n            }\n        });\n    }\n    \n    public void onOpenAd(View view) {\n        Log.d(TAG, \"onOpenAd: \");\n        //广告接口\n        AdParams adParams = new AdParams();\n        GCSDK.getInstance().openAd(adParams, new AdCallback() {\n            @Override\n            public void onClick() {\n                Log.d(TAG, \"onClick: \");\n            }\n            @Override\n            public void onClickSkip() {\n                Log.d(TAG, \"onClickSkip: \");\n            }\n            @Override\n            public void onClose() {\n                Log.d(TAG, \"onClose: \");\n            }\n            @Override\n            public void onOpenFaild(int i, String s) {\n                Log.d(TAG, \"onOpenFaild: \");\n            }\n            @Override\n            public void onOpenSuccess() {\n                Log.d(TAG, \"onOpenSuccess: \");\n            }\n            @Override\n            public void onLoadBegin() {\n                Log.d(TAG, \"onLoadBegin: \");\n            }\n            @Override\n            public void onLoadFaild(int i, String s) {\n                Log.d(TAG, \"onLoadFaild: \");\n            }\n            @Override\n            public void onLoadComplete() {\n                Log.d(TAG, \"onLoadComplete: \");\n            }\n            @Override\n            public void onDownloadBegin() {\n                Log.d(TAG, \"onDownloadBegin: \");\n            }\n            @Override\n            public void onDownloadFail(int i, String s) {\n                Log.d(TAG, \"onDownloadFail: \");\n            }\n            @Override\n            public void onDownloadComplete() {\n                Log.d(TAG, \"onDownloadComplete: \");\n            }\n        });\n    }\n}\n```\n\n依次触发按钮点击事件\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/f13a6793367598f0a03c93cb84c3a781.png)\n\n假设这是咋们的应用，接着要预备接入\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/c999c536a59d0ae7df378a1c36b140f6.png)\n\n\n# 了解下 smali\n\n**1、获得 smali**\n两个安装包的代码都要反编译获得 \n\n```java\njava -jar apktool_2.6.0.jar [-r] d app-0.apk\n\njava -jar apktool_2.6.0.jar [-r] d app-1.apk\n```\n\n我们的应用\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/f45e85873cea6435fddc0548f82af6ee.png)\n\n空白项目模拟 Java 接口模拟接入\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/b6ff5a0f01ab90cb1132849cb6d138f0.png)\n\n**2、了解项目的 smali**\n\n可以使用 VSCode 插件 smali、smali2java 方便查看 smali 代码，以下 smali 主要是列举与 sdk 相关，了解 smali 具体实现\n\n```java\n//App.java & App.smal\npackage com.example.gcsdkdemo;\nimport android.app.Application;\nimport android.util.Log;\nimport com.primer.jsonlili.callback.InitCallback;\nimport com.primer.jsonlili.core.GCSDK;\n\npublic class App extends Application {\n    private final String TAG = \"cunzhang\"; \n\n    //定义属性 mInitCallback：      .field private mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n    //创建对象：                    new-instance v0, Lcom/example/gcsdkdemo/App$1;\n    //调用类隐藏初始化方法 <init>：   invoke-direct {v0, p0}, Lcom/example/gcsdkdemo/App$1;-><init>(Lcom/example/gcsdkdemo/App;)V\n    //把创建的对象赋值给本地变量：     iput-object v0, p0, Lcom/example/gcsdkdemo/App;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n    private InitCallback mInitCallback = new InitCallback() {\n        @Override\n        public void initSuccess() {\n            Log.d(TAG, \"initSuccess: \");\n        }\n        @Override\n        public void initFail(int i, String s) {\n            Log.d(TAG, \"initFail: \");\n        }\n    };\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        \n        //调用类的静态方法：         invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //移动操作数：              move-result-object v0\n        //从操作数栈获取两个操作数：  iget-object v1, p0, Lcom/example/gcsdkdemo/App;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n        //调用实现方法：            invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->init(Lcom/primer/jsonlili/callback/InitCallback;)V\n        GCSDK.getInstance().init(mInitCallback);\n    }\n}\n```\n\nInitCallback 内部类实现\n\n```java\n# 表明类限定名\n.class Lcom/example/gcsdkdemo/App$1;\n# 父类\n.super Ljava/lang/Object;\n# 源文件名称\n.source \"App.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/InitCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingClass;\nvalue = Lcom/example/gcsdkdemo/App;\n.end annotation\n\n# 内部类\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# 内部类持有外部类 this 引用\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/App;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/App;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/App;\n# 行数，删除不影响代码执行\n.line 13\niput-object p1, p0, Lcom/example/gcsdkdemo/App$1;->this$0:Lcom/example/gcsdkdemo/App;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public initFail(ILjava/lang/String;)V\n\n# 指定方法中可用的非参寄存器数量\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 21\nconst-string v0, \"cunzhang\"\nconst-string v1, \"initFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 22\nreturn-void\n.end method\n\n.method public initSuccess()V\n.locals 2\n.line 16\nconst-string v0, \"cunzhang\"\nconst-string v1, \"initSuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 17\nreturn-void\n.end method\n```\n\n```java\n//MainActivity.java $ MainActivity.smali\npackage com.example.gcsdkdemo;\nimport androidx.appcompat.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport com.primer.jsonlili.callback.AdCallback;\nimport com.primer.jsonlili.callback.LoginCallback;\nimport com.primer.jsonlili.callback.PayCallback;\nimport com.primer.jsonlili.core.GCSDK;\nimport com.primer.jsonlili.params.AdParams;\nimport com.primer.jsonlili.params.PayParams;\n\npublic class MainActivity extends AppCompatActivity {\n    private final String TAG = \"cunzhang\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    public void onPay(View view) {\n        Log.d(TAG, \"onPay: \");\n        //创建 PayParams 对象并存储到 v0，\n        //new-instance v0, Lcom/primer/jsonlili/params/PayParams;\n        //invoke-direct {v0}, Lcom/primer/jsonlili/params/PayParams;-><init>()V\n        \n        //.local v0, \"payParams\":Lcom/primer/jsonlili/params/PayParams;\n        //invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //move-result-object v1\n        //new-instance v2, Lcom/example/gcsdkdemo/MainActivity$1;\n        //invoke-direct {v2, p0}, Lcom/example/gcsdkdemo/MainActivity$1;-><init>(Lcom/example/gcsdkdemo/MainActivity;)V\n        //invoke-virtual {v1, v0, v2}, Lcom/primer/jsonlili/core/GCSDK;->pay(Lcom/primer/jsonlili/params/PayParams;Lcom/primer/jsonlili/callback/PayCallback;)V\n        \n        PayParams payParams = new PayParams();\n        GCSDK.getInstance().pay(payParams, new PayCallback() {\n            @Override\n            public void onPaySuccess() {\n                Log.d(TAG, \"onPaySuccess: \");\n            }\n\n            @Override\n            public void onPayFail(int i, String s) {\n                Log.d(TAG, \"onPayFail: \");\n            }\n        });\n    }\n\n    public void onLogin(View view) {\n        Log.d(TAG, \"onLogin: \");\n        //调用 getInstance，把 getInstance 返回的对象存储到 v0，创建内部类 LoginCallback 对象，调用内部类初始化，调用登录方法\n        //invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //move-result-object v0\n        //new-instance v1, Lcom/example/gcsdkdemo/MainActivity$2;\n        //invoke-direct {v1, p0}, Lcom/example/gcsdkdemo/MainActivity$2;-><init>(Lcom/example/gcsdkdemo/MainActivity;)V\n        //invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->login(Lcom/primer/jsonlili/callback/LoginCallback;)V\n        \n        GCSDK.getInstance().login(new LoginCallback() {\n            @Override\n            public void onLoginSuccess() {\n                Log.d(TAG, \"onLoginSuccess: \");\n            }\n\n            @Override\n            public void inLoginFail(int i, String s) {\n                Log.d(TAG, \"inLoginFail: \");\n            }\n        });\n    }\n    \n\n    public void onOpenAd(View view) {\n        Log.d(TAG, \"onOpenAd: \");\n        \n        //new-instance v0, Lcom/primer/jsonlili/params/AdParams;\n        //invoke-direct {v0}, Lcom/primer/jsonlili/params/AdParams;-><init>()V\n        //.line 60\n        //.local v0, \"adParams\":Lcom/primer/jsonlili/params/AdParams;\n        //invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //move-result-object v1\n        //new-instance v2, Lcom/example/gcsdkdemo/MainActivity$3;\n        //invoke-direct {v2, p0}, Lcom/example/gcsdkdemo/MainActivity$3;-><init>(Lcom/example/gcsdkdemo/MainActivity;)V\n        //invoke-virtual {v1, v0, v2}, Lcom/primer/jsonlili/core/GCSDK;->openAd(Lcom/primer/jsonlili/params/AdParams;Lcom/primer/jsonlili/callback/AdCallback;)V\n\n        AdParams adParams = new AdParams();\n        GCSDK.getInstance().openAd(adParams, new AdCallback() {\n            @Override\n            public void onClick() {\n                Log.d(TAG, \"onClick: \");\n            }\n            @Override\n            public void onClickSkip() {\n                Log.d(TAG, \"onClickSkip: \");\n            }\n            @Override\n            public void onClose() {\n                Log.d(TAG, \"onClose: \");\n            }\n            @Override\n            public void onOpenFaild(int i, String s) {\n                Log.d(TAG, \"onOpenFaild: \");\n            }\n            @Override\n            public void onOpenSuccess() {\n                Log.d(TAG, \"onOpenSuccess: \");\n            }\n            @Override\n            public void onLoadBegin() {\n                Log.d(TAG, \"onLoadBegin: \");\n            }\n            @Override\n            public void onLoadFaild(int i, String s) {\n                Log.d(TAG, \"onLoadFaild: \");\n            }\n            @Override\n            public void onLoadComplete() {\n                Log.d(TAG, \"onLoadComplete: \");\n            }\n            @Override\n            public void onDownloadBegin() {\n                Log.d(TAG, \"onDownloadBegin: \");\n            }\n            @Override\n            public void onDownloadFail(int i, String s) {\n                Log.d(TAG, \"onDownloadFail: \");\n            }\n            @Override\n            public void onDownloadComplete() {\n                Log.d(TAG, \"onDownloadComplete: \");\n            }\n        });\n    }\n}\n```\n\nPayCallback 内部类实现\n\n```java\n.class Lcom/example/gcsdkdemo/MainActivity$1;\n.super Ljava/lang/Object;\n.source \"MainActivity.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/PayCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\nvalue = Lcom/example/gcsdkdemo/MainActivity;->onPay(Landroid/view/View;)V\n.end annotation\n\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/MainActivity;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/MainActivity;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/MainActivity;\n.line 28\niput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$1;->this$0:Lcom/example/gcsdkdemo/MainActivity;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public onPayFail(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 36\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onPayFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 37\nreturn-void\n.end method\n\n.method public onPaySuccess()V\n.locals 2\n.line 31\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onPaySuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 32\nreturn-void\n.end method\n```\n\n内部类 LoginCallback 实现\n\n```java\n.class Lcom/example/gcsdkdemo/MainActivity$2;\n.super Ljava/lang/Object;\n.source \"MainActivity.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/LoginCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\nvalue = Lcom/example/gcsdkdemo/MainActivity;->onLogin(Landroid/view/View;)V\n.end annotation\n\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/MainActivity;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/MainActivity;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/MainActivity;\n.line 43\niput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$2;->this$0:Lcom/example/gcsdkdemo/MainActivity;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public inLoginFail(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 51\nconst-string v0, \"cunzhang\"\nconst-string v1, \"inLoginFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 52\nreturn-void\n.end method\n\n.method public onLoginSuccess()V\n.locals 2\n.line 46\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoginSuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 47\nreturn-void\n.end method\n```\n\nAdCallback 内部类实现\n\n```java\n.class Lcom/example/gcsdkdemo/MainActivity$3;\n.super Ljava/lang/Object;\n.source \"MainActivity.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/AdCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\nvalue = Lcom/example/gcsdkdemo/MainActivity;->onOpenAd(Landroid/view/View;)V\n.end annotation\n\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/MainActivity;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/MainActivity;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/MainActivity;\n.line 60\niput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$3;->this$0:Lcom/example/gcsdkdemo/MainActivity;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public onClick()V\n.locals 2\n.line 63\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onClick: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 64\nreturn-void\n.end method\n\n.method public onClickSkip()V\n.locals 2\n.line 68\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onClickSkip: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 69\nreturn-void\n.end method\n\n.method public onClose()V\n.locals 2\n.line 73\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onClose: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 74\nreturn-void\n.end method\n\n.method public onDownloadBegin()V\n.locals 2\n.line 103\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onDownloadBegin: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 104\nreturn-void\n.end method\n\n.method public onDownloadComplete()V\n.locals 2\n.line 113\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onDownloadComplete: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 114\nreturn-void\n.end method\n\n.method public onDownloadFail(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 108\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onDownloadFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 109\nreturn-void\n.end method\n\n.method public onLoadBegin()V\n.locals 2\n.line 88\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoadBegin: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 89\nreturn-void\n.end method\n\n.method public onLoadComplete()V\n.locals 2\n.line 98\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoadComplete: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 99\nreturn-void\n.end method\n\n.method public onLoadFaild(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 93\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoadFaild: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 94\nreturn-void\n.end method\n\n.method public onOpenFaild(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 78\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onOpenFaild: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 79\nreturn-void\n.end method\n\n.method public onOpenSuccess()V\n.locals 2\n.line 83\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onOpenSuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 84\nreturn-void\n.end method\n```\n\n熟能生巧，这样的代码看多了自然了解和认识的语法等也会越多，读取来就没那么费劲\n\n\n**我们的应用**\n\n假如我们已知代码插入点位置————对应按钮的点击事件，那么我们更应该关注的是`找到对应按钮的点击事件所在位置并插入新的 smali 代码`，插入代码不能引入新的编译器等错误\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/44d85c0db3e3955ffbe9fb8d82b82f72.png)\n\n# 试着接入 smali \n\n**1、把 sdk 相关的 smali 代码复制到我们应用反编译后的工程目录下**\n\n这里我新建 `smali_classes9` 目录，gcsdk 比较简单，只有代码没有资源、so 文件等；如果有，也需要复制到工程的相应目录下，确保项目能够编译成功、运行期间能找到路径正确加载代码，这是项目能够运行的前提。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/42ce50c1f4987d6caf1dadbb4b1ba80a.png)\n\n下面就开始往应用中插入点处插入 sdk smali 代码。\n\n**2、LeaderApp.java & LeaderApp.smali**\n```java\n.class public Lcom/example/leaderapp/ui/LeaderApp;\n.super Landroid/app/Application;\n.source \"LeaderApp.java\"\n\n# instance fields\n.field private final TAG:Ljava/lang/String;\n# 1、定义初始化回调字段 \n.field private mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n\n# direct methods\n.method public constructor <init>()V\n .locals 1\n .line 6\n invoke-direct {p0}, Landroid/app/Application;-><init>()V\n .line 7\n const-string v0, \"leader\"\n iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;->TAG:Ljava/lang/String;\n# 2、初始化方法中创建内部类对象\n new-instance v0, Lcom/example/leaderapp/ui/LeaderApp$1;\n invoke-direct {v0, p0}, Lcom/example/leaderapp/ui/LeaderApp$1;-><init>(Lcom/example/leaderapp/ui/LeaderApp;)V\n iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n return-void\n.end method\n\n# virtual methods\n.method public onCreate()V\n .locals 2\n .line 11\n invoke-super {p0}, Landroid/app/Application;->onCreate()V\n .line 12\n const-string v0, \"leader\"\n const-string v1, \"onCreate: \"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n# 3、调用初始化方法\n invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n move-result-object v0\n iget-object v1, p0, Lcom/example/leaderapp/ui/LeaderApp;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->init(Lcom/primer/jsonlili/callback/InitCallback;)V\n return-void\n.end method\n# 4、创建 LeaderApp$1.smali，并更新路径、类等\n```\n\n检验插入是否正确并符合期望，可使用 VSCODE smali 插件通过代码转换验证\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/4c945faf21ac85feb9392dbba3f9f527.png)\n\n对比原始项目和插入后的效果是否一致\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/36199a2e95b678da1afe678f4f9ed9f3.png)\n\n对安装包手动签名，运行查看日志，能看到 sdk 初始化正确，说明上述接入是无误的。\n\njarsigner -verbose -keystore [aa.keystore] [sign-app0.apk] [app-0.apk] key0\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/d9a2aa7640b31bea5158a5c79d08c34b.png)\n\n\n**注意⚠️：**\n\n反编译使用 `java -jar apktool.jar d ***.apk`，在回编译时候可能出现错误，日志中发现 `res/` 目录像是资源问题。\n\n```java\nW: invalid resource directory name: >/Users/jsonli/Desktop/demo/0603/app-0/app-0/res navigation\nbrut.androlib.AndrolibException: brut.common.BrutException: could not exec (exit code = 1):\n/Users/jsonli/Library/apktool/framework/1.apk, -S, \n/Users/jsonli/Desktop/demo/0603/app-0/app-0/res, -M, \n/Users/jsonli/Desktop/demo/0603/app-0/app-0/AndroidManifest.xml]\n```\n\n尝试在反编译时不处理资源命令加上 -r 参数`java -jar apktool.jar -r d ***.apk` 果然能够正常打包，继续完成剩下的接入吧 :)\n\n**3、HomeFragment$1.smali、HomeFrgment$2.smali**\n\n`HomeFragment$1.smali`: button 点击事件实现类，登录调用处\n`HomeFragment$2.smali`: gcsdk 登录回调\n\n```java\n.class Lcom/example/leaderapp/ui/home/HomeFragment$1;\n.super Ljava/lang/Object;\n.source \"HomeFragment.java\"\n\n# interfaces\n.implements Landroid/view/View$OnClickListener;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\n value = Lcom/example/leaderapp/ui/home/HomeFragment;->onCreateView(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;\n.end annotation\n.annotation system Ldalvik/annotation/InnerClass;\n accessFlags = 0x0\n name = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/leaderapp/ui/home/HomeFragment;\n\n# direct methods\n.method constructor <init>(Lcom/example/leaderapp/ui/home/HomeFragment;)V\n .locals 0\n .param p1, \"this$0\" # Lcom/example/leaderapp/ui/home/HomeFragment;\n .line 40\n iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$1;->this$0:Lcom/example/leaderapp/ui/home/HomeFragment;\n invoke-direct {p0}, Ljava/lang/Object;-><init>()V\n return-void\n.end method\n\n# virtual methods\n.method public onClick(Landroid/view/View;)V\n .locals 3\n .param p1, \"view\" # Landroid/view/View;\n .line 43\n invoke-virtual {p1}, Landroid/view/View;->getContext()Landroid/content/Context;\n move-result-object v0\n const-string v1, \"\\u767b\\u5f55\"\n const/4 v2, 0x0\n invoke-static {v0, v1, v2}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;\n move-result-object v0\n invoke-virtual {v0}, Landroid/widget/Toast;->show()V\n .line 44\n const-string v0, \"leader\"\n const-string v1, \"onClick: login\"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n\n# 1、调用登录接口，修改类路径、内部类（登录回调实现类）\n invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n move-result-object v0\n new-instance v1, Lcom/example/leaderapp/ui/home/HomeFragment$2;\n \n# 内部类持有外部类引用，这里的外部类是 button 的点击事件实现类，因此传入 HomeFragment$1，而不是 HomeFragment\n invoke-direct {v1, p0}, Lcom/example/leaderapp/ui/home/HomeFragment$2;-><init>(Lcom/example/leaderapp/ui/home/HomeFragment$1;)V\n invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->login(Lcom/primer/jsonlili/callback/LoginCallback;)V\n return-void\n.end method\n```\n```java\n.class Lcom/example/leaderapp/ui/home/HomeFragment$2;\n.super Ljava/lang/Object;\n.source \"HomeFragment.java\"\n\n# 2、创建内部类文件，并把对应的登录回调代码复制过来\n# 3、修改类路径 .class、.source、\n# interfaces\n.implements Lcom/primer/jsonlili/callback/LoginCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\n value = Lcom/example/leaderapp/ui/home/HomeFragment;->onLogin(Landroid/view/View;)V\n.end annotation\n.annotation system Ldalvik/annotation/InnerClass;\n accessFlags = 0x0\n name = null\n.end annotation\n\n# 这里传入的外部类是 button 点击事件实现类，因此初始化函数和 this 类型应该是 \n# instance fields\n.field final synthetic this$0:Lcom/example/leaderapp/ui/home/HomeFragment$1;\n\n# direct methods\n.method constructor <init>(Lcom/example/leaderapp/ui/home/HomeFragment$1;)V\n .locals 0\n .param p1, \"this$0\"\n \n# 这里也是 HomeFragment$1\n iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$2;->this$0:Lcom/example/leaderapp/ui/home/HomeFragment$1;\n invoke-direct {p0}, Ljava/lang/Object;-><init>()V\n return-void\n.end method\n\n# virtual methods\n.method public inLoginFail(ILjava/lang/String;)V\n .locals 2\n .param p1, \"i\" # I\n .param p2, \"s\" # Ljava/lang/String;\n .line 51\n const-string v0, \"cunzhang\"\n const-string v1, \"inLoginFail: \"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n .line 52\n return-void\n.end method\n\n.method public onLoginSuccess()V\n .locals 2\n .line 46\n const-string v0, \"cunzhang\"\n const-string v1, \"onLoginSuccess: \"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n .line 47\n return-void\n.end method\n```\n\n**4、NotificationsFragment.smali、DashboardFragment.smali**\n\n因为代码简单，且逻辑一致，剩下的支付和广告接口代码就不贴了\n\n# 最后的最后\n\n`0、`获取 smail 代码（一般是根据 java 代码获取 smail 代码，同理根据 java 代码获取字节码，在代码量多的时候较难直接写出完整的 smail、字节码）\n`1、`寻找插入点，smali 代码插入、保存、插入检验\n`2、`打包、签名、运行调试查看效果（依此点击按钮，触发点击事件，运行结果和预期一致）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/831157f13e5c535bafa42839e3f80257.png)\n\n\n思考：\n\nA：为什么搞 smali 接入，这不是给自己找坑嘛\nB：这是需求，为了解决问题；我觉得重点是可以扩展知识\nA：既然你已有 apk，可以把它转换为 java 代码，在 java 代码上接入不更清晰、省事，避免盲区不好吗，还是不方便\nB：好像...也 可 以❓\nA：我觉得可以，AndroidFk 工具可以把 apk 直接反编译为 android 项目（若加固、加密的 apk 可能就没那么容易，那是另一个话题了）\nB：也是，在 java 代码上接入方便多了\nA：我又有疑问了：如果接入的第三方 sdk 是一个 aar资源文件（包含资源等文件） 而不是 jar（纯 Java 代码），接入会不会遇到其他问题\nB：区别肯定是有，实操方知晓\nA：下次你来一个试试\nB：... ...\nA：这不可怕啊，持续学习，提升广度办法总比困难多\n","source":"_posts/undefined/从smail接入第三方.md","raw":"---\ntitle: 从 smail 接入第三方 SDK\ncatalog: true\ndate: 2022-09-26 20:56:19\nsubtitle: 有时通过查看、修改第三方库能更好解决问题\nheader-img: /img/220926_smailsdk/smail_bg.webp\ntags: SDK\nsticky: 3\ncategories:\n---\n\n# 遇到过这种场景吗\n\n什么时候要利用 smali 语言层面接入第三方 sdk ？一般都是使用 java 接口，一目了然，搞个 smali 不是没事找事？场景不同，在没有办法的时候这就是一种方法。\n\nprogramer A：   发你一个 apk 文件，帮我看下\nprogramer A：   因为我们没有原工程，只有一个 APK，我想把咋们的 sdk 接入到里面，怎么搞？\nprogramer B：   应该可以，可以试试以字节码、smail 形式接入\nprogramer A：   smail ？这是啥啊！\nprogramer B：   自己查资料。。。。。。\n\n\n**嗯？没有思路，不然写个 Demo 看看吧**\n\n1、准备一个 sdk: `gcsdk-1.0.0.jar`\n2、准备一个 apk: `app-0.apk`（假设是我们的应用）\n3、创建一个空白 Android 项目，预备接入 sdk: `app-1.apk`（备用） \n\n模拟几个对外的接口简单生成一个 jar，实际中接入的第三方 sdk 接口也不会很复杂。\n\n---\n\n> gcsdk-1.0.0（示例） \n\n```java\n// 初始化\nGCSDK.getInstance().init(new InitCallback() {\n            @Override\n            public void initSuccess() {\n                System.out.println(\"gcsdk-初始化成功\");\n            }\n            @Override\n            public void initFail(int code, String error) {\n                System.out.println(\"gcsdk-初始化失败：code = \" + code + \"  error = \" + error);\n            }\n});\n\n//登录\nGCSDK.getInstance().login(new LoginCallback() {\n            @Override\n            public void onLoginSuccess() {\n                System.out.println(\"登录-成功\");\n            }\n            @Override\n            public void inLoginFail(int code, String error) {\n                System.out.println(\"登录-失败：code = \" + code + \" error = \" + error);\n            }\n});\n\n//广告        \nAdParams adParams = new AdParams();\nGCSDK.getInstance().openAd(adParams, new AdCallback() {\n            @Override\n            public void onClick() {\n                System.out.println(\"广告-点击\");\n            }\n            @Override\n            public void onClickSkip() {\n                System.out.println(\"广告-点击跳过\");\n            }\n            @Override\n            public void onClose() {\n                System.out.println(\"广告-关闭\");\n            }\n            @Override\n            public void onOpenFaild(int code, String error) {\n                System.out.println(\"广告-打开失败：code = \" + code + \" error = \" + error);\n            }\n            @Override\n            public void onOpenSuccess() {\n                System.out.println(\"广告-打开成功\");\n            }\n            @Override\n            public void onLoadBegin() {\n                System.out.println(\"广告-加载开始\");\n            }\n            @Override\n            public void onLoadFaild(int code, String error) {\n                System.out.println(\"广告-加载失败：code = \" + code + \" error = \" + error);\n            }\n            @Override\n            public void onLoadComplete() {\n                System.out.println(\"广告-加载完成\");\n            }\n            @Override\n            public void onDownloadBegin() {\n                System.out.println(\"广告-下载开始\");\n            }\n            @Override\n            public void onDownloadFail(int code, String error) {\n                System.out.println(\"广告-下载失败：code =\" + code + \" error = \" + error);\n            }\n\n            @Override\n            public void onDownloadComplete() {\n                System.out.println(\"广告-下载完成\");\n            }\n});\n\n//支付\nPayParams payParams = new PayParams();\nPayManager.getInstance().pay(payParams, new PayCallback() {\n            @Override\n            public void onPaySuccess() {\n                System.out.println(\"支付-成功\");\n            }\n            @Override\n            public void onPayFail(int code, String error) {\n                System.out.println(\"支付-失败：code = \" + code + \" error = \" + error);\n            }\n});\n```\n\n> 空白 Android 项目，模拟接入 gcsdk，接入完成后打包备用，生成的 apk 用于获取 smali 代码\n\n```java\n// App.java\npackage com.example.gcsdkdemo;\nimport android.app.Application;\nimport android.util.Log;\nimport com.primer.jsonlili.callback.InitCallback;\nimport com.primer.jsonlili.core.GCSDK;\n\npublic class App extends Application {\n    private final String TAG = \"cunzhang\";\n    //初始化回调\n    private InitCallback mInitCallback = new InitCallback() {\n        @Override\n        public void initSuccess() {\n            Log.d(TAG, \"initSuccess: \");\n        }\n\n        @Override\n        public void initFail(int i, String s) {\n            Log.d(TAG, \"initFail: \");\n        }\n    };\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        //gcsdk 初始化\n        GCSDK.getInstance().init(mInitCallback);\n    }\n}\n```\n```java\n//MainActivity.java\npackage com.example.gcsdkdemo;\nimport androidx.appcompat.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport com.primer.jsonlili.callback.AdCallback;\nimport com.primer.jsonlili.callback.LoginCallback;\nimport com.primer.jsonlili.callback.PayCallback;\nimport com.primer.jsonlili.core.GCSDK;\nimport com.primer.jsonlili.params.AdParams;\nimport com.primer.jsonlili.params.PayParams;\n\npublic class MainActivity extends AppCompatActivity {\n    private final String TAG = \"cunzhang\";\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    public void onPay(View view) {\n        Log.d(TAG, \"onPay: \");\n        //支付接口\n        PayParams payParams = new PayParams();\n        GCSDK.getInstance().pay(payParams, new PayCallback() {\n            @Override\n            public void onPaySuccess() {\n                Log.d(TAG, \"onPaySuccess: \");\n            }\n            @Override\n            public void onPayFail(int i, String s) {\n                Log.d(TAG, \"onPayFail: \");\n            }\n        });\n    }\n\n    public void onLogin(View view) {\n        Log.d(TAG, \"onLogin: \");\n        //登录接口\n        GCSDK.getInstance().login(new LoginCallback() {\n            @Override\n            public void onLoginSuccess() {\n                Log.d(TAG, \"onLoginSuccess: \");\n            }\n            @Override\n            public void inLoginFail(int i, String s) {\n                Log.d(TAG, \"inLoginFail: \");\n            }\n        });\n    }\n    \n    public void onOpenAd(View view) {\n        Log.d(TAG, \"onOpenAd: \");\n        //广告接口\n        AdParams adParams = new AdParams();\n        GCSDK.getInstance().openAd(adParams, new AdCallback() {\n            @Override\n            public void onClick() {\n                Log.d(TAG, \"onClick: \");\n            }\n            @Override\n            public void onClickSkip() {\n                Log.d(TAG, \"onClickSkip: \");\n            }\n            @Override\n            public void onClose() {\n                Log.d(TAG, \"onClose: \");\n            }\n            @Override\n            public void onOpenFaild(int i, String s) {\n                Log.d(TAG, \"onOpenFaild: \");\n            }\n            @Override\n            public void onOpenSuccess() {\n                Log.d(TAG, \"onOpenSuccess: \");\n            }\n            @Override\n            public void onLoadBegin() {\n                Log.d(TAG, \"onLoadBegin: \");\n            }\n            @Override\n            public void onLoadFaild(int i, String s) {\n                Log.d(TAG, \"onLoadFaild: \");\n            }\n            @Override\n            public void onLoadComplete() {\n                Log.d(TAG, \"onLoadComplete: \");\n            }\n            @Override\n            public void onDownloadBegin() {\n                Log.d(TAG, \"onDownloadBegin: \");\n            }\n            @Override\n            public void onDownloadFail(int i, String s) {\n                Log.d(TAG, \"onDownloadFail: \");\n            }\n            @Override\n            public void onDownloadComplete() {\n                Log.d(TAG, \"onDownloadComplete: \");\n            }\n        });\n    }\n}\n```\n\n依次触发按钮点击事件\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/f13a6793367598f0a03c93cb84c3a781.png)\n\n假设这是咋们的应用，接着要预备接入\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/c999c536a59d0ae7df378a1c36b140f6.png)\n\n\n# 了解下 smali\n\n**1、获得 smali**\n两个安装包的代码都要反编译获得 \n\n```java\njava -jar apktool_2.6.0.jar [-r] d app-0.apk\n\njava -jar apktool_2.6.0.jar [-r] d app-1.apk\n```\n\n我们的应用\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/f45e85873cea6435fddc0548f82af6ee.png)\n\n空白项目模拟 Java 接口模拟接入\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/b6ff5a0f01ab90cb1132849cb6d138f0.png)\n\n**2、了解项目的 smali**\n\n可以使用 VSCode 插件 smali、smali2java 方便查看 smali 代码，以下 smali 主要是列举与 sdk 相关，了解 smali 具体实现\n\n```java\n//App.java & App.smal\npackage com.example.gcsdkdemo;\nimport android.app.Application;\nimport android.util.Log;\nimport com.primer.jsonlili.callback.InitCallback;\nimport com.primer.jsonlili.core.GCSDK;\n\npublic class App extends Application {\n    private final String TAG = \"cunzhang\"; \n\n    //定义属性 mInitCallback：      .field private mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n    //创建对象：                    new-instance v0, Lcom/example/gcsdkdemo/App$1;\n    //调用类隐藏初始化方法 <init>：   invoke-direct {v0, p0}, Lcom/example/gcsdkdemo/App$1;-><init>(Lcom/example/gcsdkdemo/App;)V\n    //把创建的对象赋值给本地变量：     iput-object v0, p0, Lcom/example/gcsdkdemo/App;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n    private InitCallback mInitCallback = new InitCallback() {\n        @Override\n        public void initSuccess() {\n            Log.d(TAG, \"initSuccess: \");\n        }\n        @Override\n        public void initFail(int i, String s) {\n            Log.d(TAG, \"initFail: \");\n        }\n    };\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        \n        //调用类的静态方法：         invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //移动操作数：              move-result-object v0\n        //从操作数栈获取两个操作数：  iget-object v1, p0, Lcom/example/gcsdkdemo/App;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n        //调用实现方法：            invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->init(Lcom/primer/jsonlili/callback/InitCallback;)V\n        GCSDK.getInstance().init(mInitCallback);\n    }\n}\n```\n\nInitCallback 内部类实现\n\n```java\n# 表明类限定名\n.class Lcom/example/gcsdkdemo/App$1;\n# 父类\n.super Ljava/lang/Object;\n# 源文件名称\n.source \"App.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/InitCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingClass;\nvalue = Lcom/example/gcsdkdemo/App;\n.end annotation\n\n# 内部类\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# 内部类持有外部类 this 引用\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/App;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/App;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/App;\n# 行数，删除不影响代码执行\n.line 13\niput-object p1, p0, Lcom/example/gcsdkdemo/App$1;->this$0:Lcom/example/gcsdkdemo/App;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public initFail(ILjava/lang/String;)V\n\n# 指定方法中可用的非参寄存器数量\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 21\nconst-string v0, \"cunzhang\"\nconst-string v1, \"initFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 22\nreturn-void\n.end method\n\n.method public initSuccess()V\n.locals 2\n.line 16\nconst-string v0, \"cunzhang\"\nconst-string v1, \"initSuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 17\nreturn-void\n.end method\n```\n\n```java\n//MainActivity.java $ MainActivity.smali\npackage com.example.gcsdkdemo;\nimport androidx.appcompat.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport com.primer.jsonlili.callback.AdCallback;\nimport com.primer.jsonlili.callback.LoginCallback;\nimport com.primer.jsonlili.callback.PayCallback;\nimport com.primer.jsonlili.core.GCSDK;\nimport com.primer.jsonlili.params.AdParams;\nimport com.primer.jsonlili.params.PayParams;\n\npublic class MainActivity extends AppCompatActivity {\n    private final String TAG = \"cunzhang\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n    public void onPay(View view) {\n        Log.d(TAG, \"onPay: \");\n        //创建 PayParams 对象并存储到 v0，\n        //new-instance v0, Lcom/primer/jsonlili/params/PayParams;\n        //invoke-direct {v0}, Lcom/primer/jsonlili/params/PayParams;-><init>()V\n        \n        //.local v0, \"payParams\":Lcom/primer/jsonlili/params/PayParams;\n        //invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //move-result-object v1\n        //new-instance v2, Lcom/example/gcsdkdemo/MainActivity$1;\n        //invoke-direct {v2, p0}, Lcom/example/gcsdkdemo/MainActivity$1;-><init>(Lcom/example/gcsdkdemo/MainActivity;)V\n        //invoke-virtual {v1, v0, v2}, Lcom/primer/jsonlili/core/GCSDK;->pay(Lcom/primer/jsonlili/params/PayParams;Lcom/primer/jsonlili/callback/PayCallback;)V\n        \n        PayParams payParams = new PayParams();\n        GCSDK.getInstance().pay(payParams, new PayCallback() {\n            @Override\n            public void onPaySuccess() {\n                Log.d(TAG, \"onPaySuccess: \");\n            }\n\n            @Override\n            public void onPayFail(int i, String s) {\n                Log.d(TAG, \"onPayFail: \");\n            }\n        });\n    }\n\n    public void onLogin(View view) {\n        Log.d(TAG, \"onLogin: \");\n        //调用 getInstance，把 getInstance 返回的对象存储到 v0，创建内部类 LoginCallback 对象，调用内部类初始化，调用登录方法\n        //invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //move-result-object v0\n        //new-instance v1, Lcom/example/gcsdkdemo/MainActivity$2;\n        //invoke-direct {v1, p0}, Lcom/example/gcsdkdemo/MainActivity$2;-><init>(Lcom/example/gcsdkdemo/MainActivity;)V\n        //invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->login(Lcom/primer/jsonlili/callback/LoginCallback;)V\n        \n        GCSDK.getInstance().login(new LoginCallback() {\n            @Override\n            public void onLoginSuccess() {\n                Log.d(TAG, \"onLoginSuccess: \");\n            }\n\n            @Override\n            public void inLoginFail(int i, String s) {\n                Log.d(TAG, \"inLoginFail: \");\n            }\n        });\n    }\n    \n\n    public void onOpenAd(View view) {\n        Log.d(TAG, \"onOpenAd: \");\n        \n        //new-instance v0, Lcom/primer/jsonlili/params/AdParams;\n        //invoke-direct {v0}, Lcom/primer/jsonlili/params/AdParams;-><init>()V\n        //.line 60\n        //.local v0, \"adParams\":Lcom/primer/jsonlili/params/AdParams;\n        //invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n        //move-result-object v1\n        //new-instance v2, Lcom/example/gcsdkdemo/MainActivity$3;\n        //invoke-direct {v2, p0}, Lcom/example/gcsdkdemo/MainActivity$3;-><init>(Lcom/example/gcsdkdemo/MainActivity;)V\n        //invoke-virtual {v1, v0, v2}, Lcom/primer/jsonlili/core/GCSDK;->openAd(Lcom/primer/jsonlili/params/AdParams;Lcom/primer/jsonlili/callback/AdCallback;)V\n\n        AdParams adParams = new AdParams();\n        GCSDK.getInstance().openAd(adParams, new AdCallback() {\n            @Override\n            public void onClick() {\n                Log.d(TAG, \"onClick: \");\n            }\n            @Override\n            public void onClickSkip() {\n                Log.d(TAG, \"onClickSkip: \");\n            }\n            @Override\n            public void onClose() {\n                Log.d(TAG, \"onClose: \");\n            }\n            @Override\n            public void onOpenFaild(int i, String s) {\n                Log.d(TAG, \"onOpenFaild: \");\n            }\n            @Override\n            public void onOpenSuccess() {\n                Log.d(TAG, \"onOpenSuccess: \");\n            }\n            @Override\n            public void onLoadBegin() {\n                Log.d(TAG, \"onLoadBegin: \");\n            }\n            @Override\n            public void onLoadFaild(int i, String s) {\n                Log.d(TAG, \"onLoadFaild: \");\n            }\n            @Override\n            public void onLoadComplete() {\n                Log.d(TAG, \"onLoadComplete: \");\n            }\n            @Override\n            public void onDownloadBegin() {\n                Log.d(TAG, \"onDownloadBegin: \");\n            }\n            @Override\n            public void onDownloadFail(int i, String s) {\n                Log.d(TAG, \"onDownloadFail: \");\n            }\n            @Override\n            public void onDownloadComplete() {\n                Log.d(TAG, \"onDownloadComplete: \");\n            }\n        });\n    }\n}\n```\n\nPayCallback 内部类实现\n\n```java\n.class Lcom/example/gcsdkdemo/MainActivity$1;\n.super Ljava/lang/Object;\n.source \"MainActivity.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/PayCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\nvalue = Lcom/example/gcsdkdemo/MainActivity;->onPay(Landroid/view/View;)V\n.end annotation\n\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/MainActivity;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/MainActivity;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/MainActivity;\n.line 28\niput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$1;->this$0:Lcom/example/gcsdkdemo/MainActivity;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public onPayFail(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 36\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onPayFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 37\nreturn-void\n.end method\n\n.method public onPaySuccess()V\n.locals 2\n.line 31\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onPaySuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 32\nreturn-void\n.end method\n```\n\n内部类 LoginCallback 实现\n\n```java\n.class Lcom/example/gcsdkdemo/MainActivity$2;\n.super Ljava/lang/Object;\n.source \"MainActivity.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/LoginCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\nvalue = Lcom/example/gcsdkdemo/MainActivity;->onLogin(Landroid/view/View;)V\n.end annotation\n\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/MainActivity;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/MainActivity;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/MainActivity;\n.line 43\niput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$2;->this$0:Lcom/example/gcsdkdemo/MainActivity;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public inLoginFail(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 51\nconst-string v0, \"cunzhang\"\nconst-string v1, \"inLoginFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 52\nreturn-void\n.end method\n\n.method public onLoginSuccess()V\n.locals 2\n.line 46\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoginSuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 47\nreturn-void\n.end method\n```\n\nAdCallback 内部类实现\n\n```java\n.class Lcom/example/gcsdkdemo/MainActivity$3;\n.super Ljava/lang/Object;\n.source \"MainActivity.java\"\n\n# interfaces\n.implements Lcom/primer/jsonlili/callback/AdCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\nvalue = Lcom/example/gcsdkdemo/MainActivity;->onOpenAd(Landroid/view/View;)V\n.end annotation\n\n.annotation system Ldalvik/annotation/InnerClass;\naccessFlags = 0x0\nname = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/gcsdkdemo/MainActivity;\n\n# direct methods\n.method constructor <init>(Lcom/example/gcsdkdemo/MainActivity;)V\n.locals 0\n.param p1, \"this$0\" # Lcom/example/gcsdkdemo/MainActivity;\n.line 60\niput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$3;->this$0:Lcom/example/gcsdkdemo/MainActivity;\ninvoke-direct {p0}, Ljava/lang/Object;-><init>()V\nreturn-void\n.end method\n\n# virtual methods\n.method public onClick()V\n.locals 2\n.line 63\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onClick: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 64\nreturn-void\n.end method\n\n.method public onClickSkip()V\n.locals 2\n.line 68\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onClickSkip: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 69\nreturn-void\n.end method\n\n.method public onClose()V\n.locals 2\n.line 73\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onClose: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 74\nreturn-void\n.end method\n\n.method public onDownloadBegin()V\n.locals 2\n.line 103\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onDownloadBegin: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 104\nreturn-void\n.end method\n\n.method public onDownloadComplete()V\n.locals 2\n.line 113\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onDownloadComplete: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 114\nreturn-void\n.end method\n\n.method public onDownloadFail(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 108\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onDownloadFail: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 109\nreturn-void\n.end method\n\n.method public onLoadBegin()V\n.locals 2\n.line 88\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoadBegin: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 89\nreturn-void\n.end method\n\n.method public onLoadComplete()V\n.locals 2\n.line 98\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoadComplete: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 99\nreturn-void\n.end method\n\n.method public onLoadFaild(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 93\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onLoadFaild: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 94\nreturn-void\n.end method\n\n.method public onOpenFaild(ILjava/lang/String;)V\n.locals 2\n.param p1, \"i\" # I\n.param p2, \"s\" # Ljava/lang/String;\n.line 78\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onOpenFaild: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 79\nreturn-void\n.end method\n\n.method public onOpenSuccess()V\n.locals 2\n.line 83\nconst-string v0, \"cunzhang\"\nconst-string v1, \"onOpenSuccess: \"\ninvoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n.line 84\nreturn-void\n.end method\n```\n\n熟能生巧，这样的代码看多了自然了解和认识的语法等也会越多，读取来就没那么费劲\n\n\n**我们的应用**\n\n假如我们已知代码插入点位置————对应按钮的点击事件，那么我们更应该关注的是`找到对应按钮的点击事件所在位置并插入新的 smali 代码`，插入代码不能引入新的编译器等错误\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/44d85c0db3e3955ffbe9fb8d82b82f72.png)\n\n# 试着接入 smali \n\n**1、把 sdk 相关的 smali 代码复制到我们应用反编译后的工程目录下**\n\n这里我新建 `smali_classes9` 目录，gcsdk 比较简单，只有代码没有资源、so 文件等；如果有，也需要复制到工程的相应目录下，确保项目能够编译成功、运行期间能找到路径正确加载代码，这是项目能够运行的前提。\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/42ce50c1f4987d6caf1dadbb4b1ba80a.png)\n\n下面就开始往应用中插入点处插入 sdk smali 代码。\n\n**2、LeaderApp.java & LeaderApp.smali**\n```java\n.class public Lcom/example/leaderapp/ui/LeaderApp;\n.super Landroid/app/Application;\n.source \"LeaderApp.java\"\n\n# instance fields\n.field private final TAG:Ljava/lang/String;\n# 1、定义初始化回调字段 \n.field private mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n\n# direct methods\n.method public constructor <init>()V\n .locals 1\n .line 6\n invoke-direct {p0}, Landroid/app/Application;-><init>()V\n .line 7\n const-string v0, \"leader\"\n iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;->TAG:Ljava/lang/String;\n# 2、初始化方法中创建内部类对象\n new-instance v0, Lcom/example/leaderapp/ui/LeaderApp$1;\n invoke-direct {v0, p0}, Lcom/example/leaderapp/ui/LeaderApp$1;-><init>(Lcom/example/leaderapp/ui/LeaderApp;)V\n iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n return-void\n.end method\n\n# virtual methods\n.method public onCreate()V\n .locals 2\n .line 11\n invoke-super {p0}, Landroid/app/Application;->onCreate()V\n .line 12\n const-string v0, \"leader\"\n const-string v1, \"onCreate: \"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n# 3、调用初始化方法\n invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n move-result-object v0\n iget-object v1, p0, Lcom/example/leaderapp/ui/LeaderApp;->mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;\n invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->init(Lcom/primer/jsonlili/callback/InitCallback;)V\n return-void\n.end method\n# 4、创建 LeaderApp$1.smali，并更新路径、类等\n```\n\n检验插入是否正确并符合期望，可使用 VSCODE smali 插件通过代码转换验证\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/4c945faf21ac85feb9392dbba3f9f527.png)\n\n对比原始项目和插入后的效果是否一致\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/36199a2e95b678da1afe678f4f9ed9f3.png)\n\n对安装包手动签名，运行查看日志，能看到 sdk 初始化正确，说明上述接入是无误的。\n\njarsigner -verbose -keystore [aa.keystore] [sign-app0.apk] [app-0.apk] key0\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/d9a2aa7640b31bea5158a5c79d08c34b.png)\n\n\n**注意⚠️：**\n\n反编译使用 `java -jar apktool.jar d ***.apk`，在回编译时候可能出现错误，日志中发现 `res/` 目录像是资源问题。\n\n```java\nW: invalid resource directory name: >/Users/jsonli/Desktop/demo/0603/app-0/app-0/res navigation\nbrut.androlib.AndrolibException: brut.common.BrutException: could not exec (exit code = 1):\n/Users/jsonli/Library/apktool/framework/1.apk, -S, \n/Users/jsonli/Desktop/demo/0603/app-0/app-0/res, -M, \n/Users/jsonli/Desktop/demo/0603/app-0/app-0/AndroidManifest.xml]\n```\n\n尝试在反编译时不处理资源命令加上 -r 参数`java -jar apktool.jar -r d ***.apk` 果然能够正常打包，继续完成剩下的接入吧 :)\n\n**3、HomeFragment$1.smali、HomeFrgment$2.smali**\n\n`HomeFragment$1.smali`: button 点击事件实现类，登录调用处\n`HomeFragment$2.smali`: gcsdk 登录回调\n\n```java\n.class Lcom/example/leaderapp/ui/home/HomeFragment$1;\n.super Ljava/lang/Object;\n.source \"HomeFragment.java\"\n\n# interfaces\n.implements Landroid/view/View$OnClickListener;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\n value = Lcom/example/leaderapp/ui/home/HomeFragment;->onCreateView(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;\n.end annotation\n.annotation system Ldalvik/annotation/InnerClass;\n accessFlags = 0x0\n name = null\n.end annotation\n\n# instance fields\n.field final synthetic this$0:Lcom/example/leaderapp/ui/home/HomeFragment;\n\n# direct methods\n.method constructor <init>(Lcom/example/leaderapp/ui/home/HomeFragment;)V\n .locals 0\n .param p1, \"this$0\" # Lcom/example/leaderapp/ui/home/HomeFragment;\n .line 40\n iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$1;->this$0:Lcom/example/leaderapp/ui/home/HomeFragment;\n invoke-direct {p0}, Ljava/lang/Object;-><init>()V\n return-void\n.end method\n\n# virtual methods\n.method public onClick(Landroid/view/View;)V\n .locals 3\n .param p1, \"view\" # Landroid/view/View;\n .line 43\n invoke-virtual {p1}, Landroid/view/View;->getContext()Landroid/content/Context;\n move-result-object v0\n const-string v1, \"\\u767b\\u5f55\"\n const/4 v2, 0x0\n invoke-static {v0, v1, v2}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;\n move-result-object v0\n invoke-virtual {v0}, Landroid/widget/Toast;->show()V\n .line 44\n const-string v0, \"leader\"\n const-string v1, \"onClick: login\"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n\n# 1、调用登录接口，修改类路径、内部类（登录回调实现类）\n invoke-static {}, Lcom/primer/jsonlili/core/GCSDK;->getInstance()Lcom/primer/jsonlili/core/GCSDK;\n move-result-object v0\n new-instance v1, Lcom/example/leaderapp/ui/home/HomeFragment$2;\n \n# 内部类持有外部类引用，这里的外部类是 button 的点击事件实现类，因此传入 HomeFragment$1，而不是 HomeFragment\n invoke-direct {v1, p0}, Lcom/example/leaderapp/ui/home/HomeFragment$2;-><init>(Lcom/example/leaderapp/ui/home/HomeFragment$1;)V\n invoke-virtual {v0, v1}, Lcom/primer/jsonlili/core/GCSDK;->login(Lcom/primer/jsonlili/callback/LoginCallback;)V\n return-void\n.end method\n```\n```java\n.class Lcom/example/leaderapp/ui/home/HomeFragment$2;\n.super Ljava/lang/Object;\n.source \"HomeFragment.java\"\n\n# 2、创建内部类文件，并把对应的登录回调代码复制过来\n# 3、修改类路径 .class、.source、\n# interfaces\n.implements Lcom/primer/jsonlili/callback/LoginCallback;\n\n# annotations\n.annotation system Ldalvik/annotation/EnclosingMethod;\n value = Lcom/example/leaderapp/ui/home/HomeFragment;->onLogin(Landroid/view/View;)V\n.end annotation\n.annotation system Ldalvik/annotation/InnerClass;\n accessFlags = 0x0\n name = null\n.end annotation\n\n# 这里传入的外部类是 button 点击事件实现类，因此初始化函数和 this 类型应该是 \n# instance fields\n.field final synthetic this$0:Lcom/example/leaderapp/ui/home/HomeFragment$1;\n\n# direct methods\n.method constructor <init>(Lcom/example/leaderapp/ui/home/HomeFragment$1;)V\n .locals 0\n .param p1, \"this$0\"\n \n# 这里也是 HomeFragment$1\n iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$2;->this$0:Lcom/example/leaderapp/ui/home/HomeFragment$1;\n invoke-direct {p0}, Ljava/lang/Object;-><init>()V\n return-void\n.end method\n\n# virtual methods\n.method public inLoginFail(ILjava/lang/String;)V\n .locals 2\n .param p1, \"i\" # I\n .param p2, \"s\" # Ljava/lang/String;\n .line 51\n const-string v0, \"cunzhang\"\n const-string v1, \"inLoginFail: \"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n .line 52\n return-void\n.end method\n\n.method public onLoginSuccess()V\n .locals 2\n .line 46\n const-string v0, \"cunzhang\"\n const-string v1, \"onLoginSuccess: \"\n invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I\n .line 47\n return-void\n.end method\n```\n\n**4、NotificationsFragment.smali、DashboardFragment.smali**\n\n因为代码简单，且逻辑一致，剩下的支付和广告接口代码就不贴了\n\n# 最后的最后\n\n`0、`获取 smail 代码（一般是根据 java 代码获取 smail 代码，同理根据 java 代码获取字节码，在代码量多的时候较难直接写出完整的 smail、字节码）\n`1、`寻找插入点，smali 代码插入、保存、插入检验\n`2、`打包、签名、运行调试查看效果（依此点击按钮，触发点击事件，运行结果和预期一致）\n\n![image.png](https://img-blog.csdnimg.cn/img_convert/831157f13e5c535bafa42839e3f80257.png)\n\n\n思考：\n\nA：为什么搞 smali 接入，这不是给自己找坑嘛\nB：这是需求，为了解决问题；我觉得重点是可以扩展知识\nA：既然你已有 apk，可以把它转换为 java 代码，在 java 代码上接入不更清晰、省事，避免盲区不好吗，还是不方便\nB：好像...也 可 以❓\nA：我觉得可以，AndroidFk 工具可以把 apk 直接反编译为 android 项目（若加固、加密的 apk 可能就没那么容易，那是另一个话题了）\nB：也是，在 java 代码上接入方便多了\nA：我又有疑问了：如果接入的第三方 sdk 是一个 aar资源文件（包含资源等文件） 而不是 jar（纯 Java 代码），接入会不会遇到其他问题\nB：区别肯定是有，实操方知晓\nA：下次你来一个试试\nB：... ...\nA：这不可怕啊，持续学习，提升广度办法总比困难多\n","slug":"从smail接入第三方","published":1,"lang":"undefined","updated":"2022-09-26T12:56:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8ivvvsi0009feqpdjytgotk","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1>遇到过这种场景吗</h1>\n<p>什么时候要利用 smali 语言层面接入第三方 sdk ？一般都是使用 java 接口，一目了然，搞个 smali 不是没事找事？场景不同，在没有办法的时候这就是一种方法。</p>\n<p>programer A：   发你一个 apk 文件，帮我看下<br>\nprogramer A：   因为我们没有原工程，只有一个 APK，我想把咋们的 sdk 接入到里面，怎么搞？<br>\nprogramer B：   应该可以，可以试试以字节码、smail 形式接入<br>\nprogramer A：   smail ？这是啥啊！<br>\nprogramer B：   自己查资料。。。。。。</p>\n<p><strong>嗯？没有思路，不然写个 Demo 看看吧</strong></p>\n<p>1、准备一个 sdk: <code>gcsdk-1.0.0.jar</code><br>\n2、准备一个 apk: <code>app-0.apk</code>（假设是我们的应用）<br>\n3、创建一个空白 Android 项目，预备接入 sdk: <code>app-1.apk</code>（备用）</p>\n<p>模拟几个对外的接口简单生成一个 jar，实际中接入的第三方 sdk 接口也不会很复杂。</p>\n<hr>\n<blockquote>\n<p>gcsdk-1.0.0（示例）</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化</span></span><br><span class=\"line\">GCSDK.getInstance().init(<span class=\"keyword\">new</span> InitCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;gcsdk-初始化成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;gcsdk-初始化失败：code = &quot;</span> + code + <span class=\"string\">&quot;  error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//登录</span></span><br><span class=\"line\">GCSDK.getInstance().login(<span class=\"keyword\">new</span> LoginCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;登录-成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;登录-失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//广告        </span></span><br><span class=\"line\">AdParams adParams = <span class=\"keyword\">new</span> AdParams();</span><br><span class=\"line\">GCSDK.getInstance().openAd(adParams, <span class=\"keyword\">new</span> AdCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-点击&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-点击跳过&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-关闭&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-打开失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-打开成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-加载开始&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-加载失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-加载完成&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-下载开始&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-下载失败：code =&quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-下载完成&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//支付</span></span><br><span class=\"line\">PayParams payParams = <span class=\"keyword\">new</span> PayParams();</span><br><span class=\"line\">PayManager.getInstance().pay(payParams, <span class=\"keyword\">new</span> PayCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;支付-成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPayFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;支付-失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>空白 Android 项目，模拟接入 gcsdk，接入完成后打包备用，生成的 apk 用于获取 smali 代码</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.java</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Application;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.InitCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//初始化回调</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> InitCallback mInitCallback = <span class=\"keyword\">new</span> InitCallback() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initSuccess: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initFail: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        <span class=\"comment\">//gcsdk 初始化</span></span><br><span class=\"line\">        GCSDK.getInstance().init(mInitCallback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//MainActivity.java</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.AdCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.LoginCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.PayCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.AdParams;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.PayParams;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPay</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onPay: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//支付接口</span></span><br><span class=\"line\">        PayParams payParams = <span class=\"keyword\">new</span> PayParams();</span><br><span class=\"line\">        GCSDK.getInstance().pay(payParams, <span class=\"keyword\">new</span> PayCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPaySuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPayFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPayFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLogin</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onLogin: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//登录接口</span></span><br><span class=\"line\">        GCSDK.getInstance().login(<span class=\"keyword\">new</span> LoginCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoginSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;inLoginFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenAd</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onOpenAd: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//广告接口</span></span><br><span class=\"line\">        AdParams adParams = <span class=\"keyword\">new</span> AdParams();</span><br><span class=\"line\">        GCSDK.getInstance().openAd(adParams, <span class=\"keyword\">new</span> AdCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClick: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClickSkip: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClose: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>依次触发按钮点击事件</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f13a6793367598f0a03c93cb84c3a781.png\" alt=\"image.png\"></p>\n<p>假设这是咋们的应用，接着要预备接入</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c999c536a59d0ae7df378a1c36b140f6.png\" alt=\"image.png\"></p>\n<h1>了解下 smali</h1>\n<p><strong>1、获得 smali</strong><br>\n两个安装包的代码都要反编译获得</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.0</span>.jar [-r] d app-<span class=\"number\">0.</span>apk</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.0</span>.jar [-r] d app-<span class=\"number\">1.</span>apk</span><br></pre></td></tr></table></figure>\n<p>我们的应用</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f45e85873cea6435fddc0548f82af6ee.png\" alt=\"image.png\"></p>\n<p>空白项目模拟 Java 接口模拟接入</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b6ff5a0f01ab90cb1132849cb6d138f0.png\" alt=\"image.png\"></p>\n<p><strong>2、了解项目的 smali</strong></p>\n<p>可以使用 VSCode 插件 smali、smali2java 方便查看 smali 代码，以下 smali 主要是列举与 sdk 相关，了解 smali 具体实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//App.java &amp; App.smal</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Application;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.InitCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义属性 mInitCallback：      .field private mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span></span><br><span class=\"line\">    <span class=\"comment\">//创建对象：                    new-instance v0, Lcom/example/gcsdkdemo/App$1;</span></span><br><span class=\"line\">    <span class=\"comment\">//调用类隐藏初始化方法 &lt;init&gt;：   invoke-direct &#123;v0, p0&#125;, Lcom/example/gcsdkdemo/App$1;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/App;)V</span></span><br><span class=\"line\">    <span class=\"comment\">//把创建的对象赋值给本地变量：     iput-object v0, p0, Lcom/example/gcsdkdemo/App;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> InitCallback mInitCallback = <span class=\"keyword\">new</span> InitCallback() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initSuccess: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initFail: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//调用类的静态方法：         invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//移动操作数：              move-result-object v0</span></span><br><span class=\"line\">        <span class=\"comment\">//从操作数栈获取两个操作数：  iget-object v1, p0, Lcom/example/gcsdkdemo/App;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span></span><br><span class=\"line\">        <span class=\"comment\">//调用实现方法：            invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;init(Lcom/primer/jsonlili/callback/InitCallback;)V</span></span><br><span class=\"line\">        GCSDK.getInstance().init(mInitCallback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>InitCallback 内部类实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 表明类限定名</span><br><span class=\"line\">.class Lcom/example/gcsdkdemo/App$<span class=\"number\">1</span>;</span><br><span class=\"line\"># 父类</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\"># 源文件名称</span><br><span class=\"line\">.source <span class=\"string\">&quot;App.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingClass;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># 内部类</span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># 内部类持有外部类 this 引用</span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/App;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\"># 行数，删除不影响代码执行</span><br><span class=\"line\">.line <span class=\"number\">13</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/App$<span class=\"number\">1</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">initFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"># 指定方法中可用的非参寄存器数量</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">21</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;initFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">22</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 16</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;initSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">17</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//MainActivity.java $ MainActivity.smali</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.AdCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.LoginCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.PayCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.AdParams;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.PayParams;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPay</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onPay: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//创建 PayParams 对象并存储到 v0，</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v0, Lcom/primer/jsonlili/params/PayParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v0&#125;, Lcom/primer/jsonlili/params/PayParams;-&gt;&lt;init&gt;()V</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//.local v0, &quot;payParams&quot;:Lcom/primer/jsonlili/params/PayParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//move-result-object v1</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v2, Lcom/example/gcsdkdemo/MainActivity$1;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v2, p0&#125;, Lcom/example/gcsdkdemo/MainActivity$1;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-virtual &#123;v1, v0, v2&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;pay(Lcom/primer/jsonlili/params/PayParams;Lcom/primer/jsonlili/callback/PayCallback;)V</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        PayParams payParams = <span class=\"keyword\">new</span> PayParams();</span><br><span class=\"line\">        GCSDK.getInstance().pay(payParams, <span class=\"keyword\">new</span> PayCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPaySuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPayFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPayFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLogin</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onLogin: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用 getInstance，把 getInstance 返回的对象存储到 v0，创建内部类 LoginCallback 对象，调用内部类初始化，调用登录方法</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//move-result-object v0</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v1, Lcom/example/gcsdkdemo/MainActivity$2;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v1, p0&#125;, Lcom/example/gcsdkdemo/MainActivity$2;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;login(Lcom/primer/jsonlili/callback/LoginCallback;)V</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        GCSDK.getInstance().login(<span class=\"keyword\">new</span> LoginCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoginSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;inLoginFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenAd</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onOpenAd: &quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//new-instance v0, Lcom/primer/jsonlili/params/AdParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v0&#125;, Lcom/primer/jsonlili/params/AdParams;-&gt;&lt;init&gt;()V</span></span><br><span class=\"line\">        <span class=\"comment\">//.line 60</span></span><br><span class=\"line\">        <span class=\"comment\">//.local v0, &quot;adParams&quot;:Lcom/primer/jsonlili/params/AdParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//move-result-object v1</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v2, Lcom/example/gcsdkdemo/MainActivity$3;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v2, p0&#125;, Lcom/example/gcsdkdemo/MainActivity$3;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-virtual &#123;v1, v0, v2&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;openAd(Lcom/primer/jsonlili/params/AdParams;Lcom/primer/jsonlili/callback/AdCallback;)V</span></span><br><span class=\"line\"></span><br><span class=\"line\">        AdParams adParams = <span class=\"keyword\">new</span> AdParams();</span><br><span class=\"line\">        GCSDK.getInstance().openAd(adParams, <span class=\"keyword\">new</span> AdCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClick: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClickSkip: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClose: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>PayCallback 内部类实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">1</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;MainActivity.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/PayCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/MainActivity;-&gt;onPay(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">.line <span class=\"number\">28</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">1</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onPayFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">36</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onPayFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">37</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 31</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onPaySuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p>内部类 LoginCallback 实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">2</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;MainActivity.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/LoginCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/MainActivity;-&gt;onLogin(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">.line <span class=\"number\">43</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">2</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">51</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;inLoginFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">52</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 46</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onLoginSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">47</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p>AdCallback 内部类实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">3</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;MainActivity.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/AdCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/MainActivity;-&gt;onOpenAd(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">.line <span class=\"number\">60</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">3</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClick</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 63</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onClick: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">64</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 68</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onClickSkip: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">69</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClose</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 73</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onClose: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">74</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 103</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onDownloadBegin: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">104</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 113</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onDownloadComplete: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">114</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">108</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onDownloadFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">109</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 88</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onLoadBegin: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">89</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 98</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onLoadComplete: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">99</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">93</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onLoadFaild: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">94</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">78</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onOpenFaild: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">79</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 83</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onOpenSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">84</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p>熟能生巧，这样的代码看多了自然了解和认识的语法等也会越多，读取来就没那么费劲</p>\n<p><strong>我们的应用</strong></p>\n<p>假如我们已知代码插入点位置————对应按钮的点击事件，那么我们更应该关注的是<code>找到对应按钮的点击事件所在位置并插入新的 smali 代码</code>，插入代码不能引入新的编译器等错误</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/44d85c0db3e3955ffbe9fb8d82b82f72.png\" alt=\"image.png\"></p>\n<h1>试着接入 smali</h1>\n<p><strong>1、把 sdk 相关的 smali 代码复制到我们应用反编译后的工程目录下</strong></p>\n<p>这里我新建 <code>smali_classes9</code> 目录，gcsdk 比较简单，只有代码没有资源、so 文件等；如果有，也需要复制到工程的相应目录下，确保项目能够编译成功、运行期间能找到路径正确加载代码，这是项目能够运行的前提。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/42ce50c1f4987d6caf1dadbb4b1ba80a.png\" alt=\"image.png\"></p>\n<p>下面就开始往应用中插入点处插入 sdk smali 代码。</p>\n<p><strong>2、LeaderApp.java &amp; LeaderApp.smali</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class <span class=\"keyword\">public</span> Lcom/example/leaderapp/ui/LeaderApp;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Landroid/app/Application;</span><br><span class=\"line\">.source <span class=\"string\">&quot;LeaderApp.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> TAG:Ljava/lang/String;</span><br><span class=\"line\"># 1、定义初始化回调字段 </span><br><span class=\"line\">.field <span class=\"keyword\">private</span> mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method <span class=\"keyword\">public</span> constructor &lt;init&gt;()V</span><br><span class=\"line\"> .locals <span class=\"number\">1</span></span><br><span class=\"line\"> .line <span class=\"number\">6</span></span><br><span class=\"line\"> invoke-direct &#123;p0&#125;, Landroid/app/Application;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"> .line <span class=\"number\">7</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;leader&quot;</span></span><br><span class=\"line\"> iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;-&gt;TAG:Ljava/lang/String;</span><br><span class=\"line\"># 2、初始化方法中创建内部类对象</span><br><span class=\"line\"> <span class=\"keyword\">new</span>-instance v0, Lcom/example/leaderapp/ui/LeaderApp$<span class=\"number\">1</span>;</span><br><span class=\"line\"> invoke-direct &#123;v0, p0&#125;, Lcom/example/leaderapp/ui/LeaderApp$<span class=\"number\">1</span>;-&gt;&lt;init&gt;(Lcom/example/leaderapp/ui/LeaderApp;)V</span><br><span class=\"line\"> iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 2</span></span><br><span class=\"line\"><span class=\"function\"> .line 11</span></span><br><span class=\"line\"><span class=\"function\"> invoke-<span class=\"keyword\">super</span> </span>&#123;p0&#125;, Landroid/app/Application;-&gt;onCreate()V</span><br><span class=\"line\"> .line <span class=\"number\">12</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;leader&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onCreate: &quot;</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"># 3、调用初始化方法</span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> iget-object v1, p0, Lcom/example/leaderapp/ui/LeaderApp;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"> invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;init(Lcom/primer/jsonlili/callback/InitCallback;)V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"># 4、创建 LeaderApp$1.smali，并更新路径、类等</span><br></pre></td></tr></table></figure>\n<p>检验插入是否正确并符合期望，可使用 VSCODE smali 插件通过代码转换验证</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/4c945faf21ac85feb9392dbba3f9f527.png\" alt=\"image.png\"></p>\n<p>对比原始项目和插入后的效果是否一致</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/36199a2e95b678da1afe678f4f9ed9f3.png\" alt=\"image.png\"></p>\n<p>对安装包手动签名，运行查看日志，能看到 sdk 初始化正确，说明上述接入是无误的。</p>\n<p>jarsigner -verbose -keystore [aa.keystore] [sign-app0.apk] [app-0.apk] key0</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d9a2aa7640b31bea5158a5c79d08c34b.png\" alt=\"image.png\"></p>\n<p><strong>注意⚠️：</strong></p>\n<p>反编译使用 <code>java -jar apktool.jar d ***.apk</code>，在回编译时候可能出现错误，日志中发现 <code>res/</code> 目录像是资源问题。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W: invalid resource directory name: &gt;/Users/jsonli/Desktop/demo/<span class=\"number\">0603</span>/app-<span class=\"number\">0</span>/app-<span class=\"number\">0</span>/res navigation</span><br><span class=\"line\">brut.androlib.AndrolibException: brut.common.BrutException: <span class=\"function\">could not <span class=\"title\">exec</span> <span class=\"params\">(exit code = <span class=\"number\">1</span>)</span>:</span></span><br><span class=\"line\"><span class=\"function\">/Users/jsonli/Library/apktool/framework/1.apk, -S, </span></span><br><span class=\"line\"><span class=\"function\">/Users/jsonli/Desktop/demo/0603/app-0/app-0/res, -M, </span></span><br><span class=\"line\"><span class=\"function\">/Users/jsonli/Desktop/demo/0603/app-0/app-0/AndroidManifest.xml]</span></span><br></pre></td></tr></table></figure>\n<p>尝试在反编译时不处理资源命令加上 -r 参数<code>java -jar apktool.jar -r d ***.apk</code> 果然能够正常打包，继续完成剩下的接入吧 :)</p>\n<p><strong>3、HomeFragment$1.smali、HomeFrgment$2.smali</strong></p>\n<p><code>HomeFragment$1.smali</code>: button 点击事件实现类，登录调用处<br>\n<code>HomeFragment$2.smali</code>: gcsdk 登录回调</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;HomeFragment.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Landroid/view/View$OnClickListener;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\"> value = Lcom/example/leaderapp/ui/home/HomeFragment;-&gt;onCreateView(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\"> accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\"> name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/leaderapp/ui/home/HomeFragment;)V</span><br><span class=\"line\"> .locals <span class=\"number\">0</span></span><br><span class=\"line\"> .param p1, &quot;this$0&quot; # Lcom/example/leaderapp/ui/home/HomeFragment;</span><br><span class=\"line\"> .line <span class=\"number\">40</span></span><br><span class=\"line\"> iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment;</span><br><span class=\"line\"> invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClick</span><span class=\"params\">(Landroid/view/View;)</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 3</span></span><br><span class=\"line\"><span class=\"function\"> .param p1, &quot;view&quot; # Landroid/view/View</span>;</span><br><span class=\"line\"> .line <span class=\"number\">43</span></span><br><span class=\"line\"> invoke-virtual &#123;p1&#125;, Landroid/view/View;-&gt;getContext()Landroid/content/Context;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;\\u767b\\u5f55&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>/<span class=\"number\">4</span> v2, <span class=\"number\">0x0</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1, v2&#125;, Landroid/widget/Toast;-&gt;makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> invoke-virtual &#123;v0&#125;, Landroid/widget/Toast;-&gt;show()V</span><br><span class=\"line\"> .line <span class=\"number\">44</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;leader&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onClick: login&quot;</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"></span><br><span class=\"line\"># 1、调用登录接口，修改类路径、内部类（登录回调实现类）</span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> <span class=\"keyword\">new</span>-instance v1, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"># 内部类持有外部类引用，这里的外部类是 button 的点击事件实现类，因此传入 HomeFragment$1，而不是 HomeFragment</span><br><span class=\"line\"> invoke-direct &#123;v1, p0&#125;, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;-&gt;&lt;init&gt;(Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;)V</span><br><span class=\"line\"> invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;login(Lcom/primer/jsonlili/callback/LoginCallback;)V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;HomeFragment.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 2、创建内部类文件，并把对应的登录回调代码复制过来</span><br><span class=\"line\"># 3、修改类路径 .class、.source、</span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/LoginCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\"> value = Lcom/example/leaderapp/ui/home/HomeFragment;-&gt;onLogin(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\"> accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\"> name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里传入的外部类是 button 点击事件实现类，因此初始化函数和 this 类型应该是 </span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;)V</span><br><span class=\"line\"> .locals <span class=\"number\">0</span></span><br><span class=\"line\"> .param p1, <span class=\"string\">&quot;this$0&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"># 这里也是 HomeFragment$1</span><br><span class=\"line\"> iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;</span><br><span class=\"line\"> invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 2</span></span><br><span class=\"line\"><span class=\"function\"> .param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\"> .param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\"> .line <span class=\"number\">51</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;inLoginFail: &quot;</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"> .line <span class=\"number\">52</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 2</span></span><br><span class=\"line\"><span class=\"function\"> .line 46</span></span><br><span class=\"line\"><span class=\"function\"> <span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"> <span class=\"keyword\">const</span>-string v1, &quot;onLoginSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\"> invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"> .line <span class=\"number\">47</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p><strong>4、NotificationsFragment.smali、DashboardFragment.smali</strong></p>\n<p>因为代码简单，且逻辑一致，剩下的支付和广告接口代码就不贴了</p>\n<h1>最后的最后</h1>\n<p><code>0、</code>获取 smail 代码（一般是根据 java 代码获取 smail 代码，同理根据 java 代码获取字节码，在代码量多的时候较难直接写出完整的 smail、字节码）<br>\n<code>1、</code>寻找插入点，smali 代码插入、保存、插入检验<br>\n<code>2、</code>打包、签名、运行调试查看效果（依此点击按钮，触发点击事件，运行结果和预期一致）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/831157f13e5c535bafa42839e3f80257.png\" alt=\"image.png\"></p>\n<p>思考：</p>\n<p>A：为什么搞 smali 接入，这不是给自己找坑嘛<br>\nB：这是需求，为了解决问题；我觉得重点是可以扩展知识<br>\nA：既然你已有 apk，可以把它转换为 java 代码，在 java 代码上接入不更清晰、省事，避免盲区不好吗，还是不方便<br>\nB：好像…也 可 以❓<br>\nA：我觉得可以，AndroidFk 工具可以把 apk 直接反编译为 android 项目（若加固、加密的 apk 可能就没那么容易，那是另一个话题了）<br>\nB：也是，在 java 代码上接入方便多了<br>\nA：我又有疑问了：如果接入的第三方 sdk 是一个 aar资源文件（包含资源等文件） 而不是 jar（纯 Java 代码），接入会不会遇到其他问题<br>\nB：区别肯定是有，实操方知晓<br>\nA：下次你来一个试试<br>\nB：… …<br>\nA：这不可怕啊，持续学习，提升广度办法总比困难多</p>\n","site":{"data":{}},"excerpt":"","more":"<h1>遇到过这种场景吗</h1>\n<p>什么时候要利用 smali 语言层面接入第三方 sdk ？一般都是使用 java 接口，一目了然，搞个 smali 不是没事找事？场景不同，在没有办法的时候这就是一种方法。</p>\n<p>programer A：   发你一个 apk 文件，帮我看下<br>\nprogramer A：   因为我们没有原工程，只有一个 APK，我想把咋们的 sdk 接入到里面，怎么搞？<br>\nprogramer B：   应该可以，可以试试以字节码、smail 形式接入<br>\nprogramer A：   smail ？这是啥啊！<br>\nprogramer B：   自己查资料。。。。。。</p>\n<p><strong>嗯？没有思路，不然写个 Demo 看看吧</strong></p>\n<p>1、准备一个 sdk: <code>gcsdk-1.0.0.jar</code><br>\n2、准备一个 apk: <code>app-0.apk</code>（假设是我们的应用）<br>\n3、创建一个空白 Android 项目，预备接入 sdk: <code>app-1.apk</code>（备用）</p>\n<p>模拟几个对外的接口简单生成一个 jar，实际中接入的第三方 sdk 接口也不会很复杂。</p>\n<hr>\n<blockquote>\n<p>gcsdk-1.0.0（示例）</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化</span></span><br><span class=\"line\">GCSDK.getInstance().init(<span class=\"keyword\">new</span> InitCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;gcsdk-初始化成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;gcsdk-初始化失败：code = &quot;</span> + code + <span class=\"string\">&quot;  error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//登录</span></span><br><span class=\"line\">GCSDK.getInstance().login(<span class=\"keyword\">new</span> LoginCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;登录-成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;登录-失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//广告        </span></span><br><span class=\"line\">AdParams adParams = <span class=\"keyword\">new</span> AdParams();</span><br><span class=\"line\">GCSDK.getInstance().openAd(adParams, <span class=\"keyword\">new</span> AdCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-点击&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-点击跳过&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-关闭&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-打开失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-打开成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-加载开始&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-加载失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-加载完成&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-下载开始&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-下载失败：code =&quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;广告-下载完成&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//支付</span></span><br><span class=\"line\">PayParams payParams = <span class=\"keyword\">new</span> PayParams();</span><br><span class=\"line\">PayManager.getInstance().pay(payParams, <span class=\"keyword\">new</span> PayCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;支付-成功&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPayFail</span><span class=\"params\">(<span class=\"keyword\">int</span> code, String error)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;支付-失败：code = &quot;</span> + code + <span class=\"string\">&quot; error = &quot;</span> + error);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>空白 Android 项目，模拟接入 gcsdk，接入完成后打包备用，生成的 apk 用于获取 smali 代码</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.java</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Application;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.InitCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//初始化回调</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> InitCallback mInitCallback = <span class=\"keyword\">new</span> InitCallback() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initSuccess: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initFail: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        <span class=\"comment\">//gcsdk 初始化</span></span><br><span class=\"line\">        GCSDK.getInstance().init(mInitCallback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//MainActivity.java</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.AdCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.LoginCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.PayCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.AdParams;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.PayParams;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPay</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onPay: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//支付接口</span></span><br><span class=\"line\">        PayParams payParams = <span class=\"keyword\">new</span> PayParams();</span><br><span class=\"line\">        GCSDK.getInstance().pay(payParams, <span class=\"keyword\">new</span> PayCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPaySuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPayFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPayFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLogin</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onLogin: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//登录接口</span></span><br><span class=\"line\">        GCSDK.getInstance().login(<span class=\"keyword\">new</span> LoginCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoginSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;inLoginFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenAd</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onOpenAd: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//广告接口</span></span><br><span class=\"line\">        AdParams adParams = <span class=\"keyword\">new</span> AdParams();</span><br><span class=\"line\">        GCSDK.getInstance().openAd(adParams, <span class=\"keyword\">new</span> AdCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClick: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClickSkip: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClose: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>依次触发按钮点击事件</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f13a6793367598f0a03c93cb84c3a781.png\" alt=\"image.png\"></p>\n<p>假设这是咋们的应用，接着要预备接入</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/c999c536a59d0ae7df378a1c36b140f6.png\" alt=\"image.png\"></p>\n<h1>了解下 smali</h1>\n<p><strong>1、获得 smali</strong><br>\n两个安装包的代码都要反编译获得</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.0</span>.jar [-r] d app-<span class=\"number\">0.</span>apk</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar apktool_2<span class=\"number\">.6</span><span class=\"number\">.0</span>.jar [-r] d app-<span class=\"number\">1.</span>apk</span><br></pre></td></tr></table></figure>\n<p>我们的应用</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/f45e85873cea6435fddc0548f82af6ee.png\" alt=\"image.png\"></p>\n<p>空白项目模拟 Java 接口模拟接入</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/b6ff5a0f01ab90cb1132849cb6d138f0.png\" alt=\"image.png\"></p>\n<p><strong>2、了解项目的 smali</strong></p>\n<p>可以使用 VSCode 插件 smali、smali2java 方便查看 smali 代码，以下 smali 主要是列举与 sdk 相关，了解 smali 具体实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//App.java &amp; App.smal</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.app.Application;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.InitCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//定义属性 mInitCallback：      .field private mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span></span><br><span class=\"line\">    <span class=\"comment\">//创建对象：                    new-instance v0, Lcom/example/gcsdkdemo/App$1;</span></span><br><span class=\"line\">    <span class=\"comment\">//调用类隐藏初始化方法 &lt;init&gt;：   invoke-direct &#123;v0, p0&#125;, Lcom/example/gcsdkdemo/App$1;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/App;)V</span></span><br><span class=\"line\">    <span class=\"comment\">//把创建的对象赋值给本地变量：     iput-object v0, p0, Lcom/example/gcsdkdemo/App;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> InitCallback mInitCallback = <span class=\"keyword\">new</span> InitCallback() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initSuccess: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">            Log.d(TAG, <span class=\"string\">&quot;initFail: &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//调用类的静态方法：         invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//移动操作数：              move-result-object v0</span></span><br><span class=\"line\">        <span class=\"comment\">//从操作数栈获取两个操作数：  iget-object v1, p0, Lcom/example/gcsdkdemo/App;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span></span><br><span class=\"line\">        <span class=\"comment\">//调用实现方法：            invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;init(Lcom/primer/jsonlili/callback/InitCallback;)V</span></span><br><span class=\"line\">        GCSDK.getInstance().init(mInitCallback);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>InitCallback 内部类实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 表明类限定名</span><br><span class=\"line\">.class Lcom/example/gcsdkdemo/App$<span class=\"number\">1</span>;</span><br><span class=\"line\"># 父类</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\"># 源文件名称</span><br><span class=\"line\">.source <span class=\"string\">&quot;App.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingClass;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># 内部类</span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># 内部类持有外部类 this 引用</span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/App;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\"># 行数，删除不影响代码执行</span><br><span class=\"line\">.line <span class=\"number\">13</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/App$<span class=\"number\">1</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/App;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">initFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"># 指定方法中可用的非参寄存器数量</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">21</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;initFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">22</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">initSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 16</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;initSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">17</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//MainActivity.java $ MainActivity.smali</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.example.gcsdkdemo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.AdCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.LoginCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.callback.PayCallback;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.core.GCSDK;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.AdParams;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.primer.jsonlili.params.PayParams;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">&quot;cunzhang&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPay</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onPay: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//创建 PayParams 对象并存储到 v0，</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v0, Lcom/primer/jsonlili/params/PayParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v0&#125;, Lcom/primer/jsonlili/params/PayParams;-&gt;&lt;init&gt;()V</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//.local v0, &quot;payParams&quot;:Lcom/primer/jsonlili/params/PayParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//move-result-object v1</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v2, Lcom/example/gcsdkdemo/MainActivity$1;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v2, p0&#125;, Lcom/example/gcsdkdemo/MainActivity$1;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-virtual &#123;v1, v0, v2&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;pay(Lcom/primer/jsonlili/params/PayParams;Lcom/primer/jsonlili/callback/PayCallback;)V</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        PayParams payParams = <span class=\"keyword\">new</span> PayParams();</span><br><span class=\"line\">        GCSDK.getInstance().pay(payParams, <span class=\"keyword\">new</span> PayCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPaySuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPayFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onPayFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLogin</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onLogin: &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//调用 getInstance，把 getInstance 返回的对象存储到 v0，创建内部类 LoginCallback 对象，调用内部类初始化，调用登录方法</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//move-result-object v0</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v1, Lcom/example/gcsdkdemo/MainActivity$2;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v1, p0&#125;, Lcom/example/gcsdkdemo/MainActivity$2;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;login(Lcom/primer/jsonlili/callback/LoginCallback;)V</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        GCSDK.getInstance().login(<span class=\"keyword\">new</span> LoginCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoginSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;inLoginFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenAd</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">&quot;onOpenAd: &quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//new-instance v0, Lcom/primer/jsonlili/params/AdParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v0&#125;, Lcom/primer/jsonlili/params/AdParams;-&gt;&lt;init&gt;()V</span></span><br><span class=\"line\">        <span class=\"comment\">//.line 60</span></span><br><span class=\"line\">        <span class=\"comment\">//.local v0, &quot;adParams&quot;:Lcom/primer/jsonlili/params/AdParams;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-static &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span></span><br><span class=\"line\">        <span class=\"comment\">//move-result-object v1</span></span><br><span class=\"line\">        <span class=\"comment\">//new-instance v2, Lcom/example/gcsdkdemo/MainActivity$3;</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-direct &#123;v2, p0&#125;, Lcom/example/gcsdkdemo/MainActivity$3;-&gt;&lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span></span><br><span class=\"line\">        <span class=\"comment\">//invoke-virtual &#123;v1, v0, v2&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;openAd(Lcom/primer/jsonlili/params/AdParams;Lcom/primer/jsonlili/callback/AdCallback;)V</span></span><br><span class=\"line\"></span><br><span class=\"line\">        AdParams adParams = <span class=\"keyword\">new</span> AdParams();</span><br><span class=\"line\">        GCSDK.getInstance().openAd(adParams, <span class=\"keyword\">new</span> AdCallback() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClick: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClickSkip: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClose</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onClose: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onOpenSuccess: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadFaild: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onLoadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadBegin: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(<span class=\"keyword\">int</span> i, String s)</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadFail: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                Log.d(TAG, <span class=\"string\">&quot;onDownloadComplete: &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>PayCallback 内部类实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">1</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;MainActivity.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/PayCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/MainActivity;-&gt;onPay(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">.line <span class=\"number\">28</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">1</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onPayFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">36</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onPayFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">37</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onPaySuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 31</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onPaySuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p>内部类 LoginCallback 实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">2</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;MainActivity.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/LoginCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/MainActivity;-&gt;onLogin(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">.line <span class=\"number\">43</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">2</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">51</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;inLoginFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">52</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 46</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onLoginSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">47</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p>AdCallback 内部类实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">3</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;MainActivity.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/AdCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\">value = Lcom/example/gcsdkdemo/MainActivity;-&gt;onOpenAd(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\">accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\">name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/gcsdkdemo/MainActivity;)V</span><br><span class=\"line\">.locals <span class=\"number\">0</span></span><br><span class=\"line\">.param p1, &quot;this$0&quot; # Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">.line <span class=\"number\">60</span></span><br><span class=\"line\">iput-object p1, p0, Lcom/example/gcsdkdemo/MainActivity$<span class=\"number\">3</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/gcsdkdemo/MainActivity;</span><br><span class=\"line\">invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClick</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 63</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onClick: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">64</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClickSkip</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 68</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onClickSkip: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">69</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClose</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 73</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onClose: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">74</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onDownloadBegin</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 103</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onDownloadBegin: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">104</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onDownloadComplete</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 113</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onDownloadComplete: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">114</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onDownloadFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">108</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onDownloadFail: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">109</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoadBegin</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 88</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onLoadBegin: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">89</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoadComplete</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 98</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onLoadComplete: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">99</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoadFaild</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">93</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onLoadFaild: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">94</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onOpenFaild</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\">.param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\">.line <span class=\"number\">78</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onOpenFaild: &quot;</span></span><br><span class=\"line\">invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">79</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onOpenSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\">.locals 2</span></span><br><span class=\"line\"><span class=\"function\">.line 83</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">const</span>-string v1, &quot;onOpenSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\">invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\">.line <span class=\"number\">84</span></span><br><span class=\"line\"><span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p>熟能生巧，这样的代码看多了自然了解和认识的语法等也会越多，读取来就没那么费劲</p>\n<p><strong>我们的应用</strong></p>\n<p>假如我们已知代码插入点位置————对应按钮的点击事件，那么我们更应该关注的是<code>找到对应按钮的点击事件所在位置并插入新的 smali 代码</code>，插入代码不能引入新的编译器等错误</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/44d85c0db3e3955ffbe9fb8d82b82f72.png\" alt=\"image.png\"></p>\n<h1>试着接入 smali</h1>\n<p><strong>1、把 sdk 相关的 smali 代码复制到我们应用反编译后的工程目录下</strong></p>\n<p>这里我新建 <code>smali_classes9</code> 目录，gcsdk 比较简单，只有代码没有资源、so 文件等；如果有，也需要复制到工程的相应目录下，确保项目能够编译成功、运行期间能找到路径正确加载代码，这是项目能够运行的前提。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/42ce50c1f4987d6caf1dadbb4b1ba80a.png\" alt=\"image.png\"></p>\n<p>下面就开始往应用中插入点处插入 sdk smali 代码。</p>\n<p><strong>2、LeaderApp.java &amp; LeaderApp.smali</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class <span class=\"keyword\">public</span> Lcom/example/leaderapp/ui/LeaderApp;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Landroid/app/Application;</span><br><span class=\"line\">.source <span class=\"string\">&quot;LeaderApp.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> TAG:Ljava/lang/String;</span><br><span class=\"line\"># 1、定义初始化回调字段 </span><br><span class=\"line\">.field <span class=\"keyword\">private</span> mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method <span class=\"keyword\">public</span> constructor &lt;init&gt;()V</span><br><span class=\"line\"> .locals <span class=\"number\">1</span></span><br><span class=\"line\"> .line <span class=\"number\">6</span></span><br><span class=\"line\"> invoke-direct &#123;p0&#125;, Landroid/app/Application;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"> .line <span class=\"number\">7</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;leader&quot;</span></span><br><span class=\"line\"> iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;-&gt;TAG:Ljava/lang/String;</span><br><span class=\"line\"># 2、初始化方法中创建内部类对象</span><br><span class=\"line\"> <span class=\"keyword\">new</span>-instance v0, Lcom/example/leaderapp/ui/LeaderApp$<span class=\"number\">1</span>;</span><br><span class=\"line\"> invoke-direct &#123;v0, p0&#125;, Lcom/example/leaderapp/ui/LeaderApp$<span class=\"number\">1</span>;-&gt;&lt;init&gt;(Lcom/example/leaderapp/ui/LeaderApp;)V</span><br><span class=\"line\"> iput-object v0, p0, Lcom/example/leaderapp/ui/LeaderApp;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 2</span></span><br><span class=\"line\"><span class=\"function\"> .line 11</span></span><br><span class=\"line\"><span class=\"function\"> invoke-<span class=\"keyword\">super</span> </span>&#123;p0&#125;, Landroid/app/Application;-&gt;onCreate()V</span><br><span class=\"line\"> .line <span class=\"number\">12</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;leader&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onCreate: &quot;</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"># 3、调用初始化方法</span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> iget-object v1, p0, Lcom/example/leaderapp/ui/LeaderApp;-&gt;mInitCallback:Lcom/primer/jsonlili/callback/InitCallback;</span><br><span class=\"line\"> invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;init(Lcom/primer/jsonlili/callback/InitCallback;)V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"># 4、创建 LeaderApp$1.smali，并更新路径、类等</span><br></pre></td></tr></table></figure>\n<p>检验插入是否正确并符合期望，可使用 VSCODE smali 插件通过代码转换验证</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/4c945faf21ac85feb9392dbba3f9f527.png\" alt=\"image.png\"></p>\n<p>对比原始项目和插入后的效果是否一致</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/36199a2e95b678da1afe678f4f9ed9f3.png\" alt=\"image.png\"></p>\n<p>对安装包手动签名，运行查看日志，能看到 sdk 初始化正确，说明上述接入是无误的。</p>\n<p>jarsigner -verbose -keystore [aa.keystore] [sign-app0.apk] [app-0.apk] key0</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/d9a2aa7640b31bea5158a5c79d08c34b.png\" alt=\"image.png\"></p>\n<p><strong>注意⚠️：</strong></p>\n<p>反编译使用 <code>java -jar apktool.jar d ***.apk</code>，在回编译时候可能出现错误，日志中发现 <code>res/</code> 目录像是资源问题。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">W: invalid resource directory name: &gt;/Users/jsonli/Desktop/demo/<span class=\"number\">0603</span>/app-<span class=\"number\">0</span>/app-<span class=\"number\">0</span>/res navigation</span><br><span class=\"line\">brut.androlib.AndrolibException: brut.common.BrutException: <span class=\"function\">could not <span class=\"title\">exec</span> <span class=\"params\">(exit code = <span class=\"number\">1</span>)</span>:</span></span><br><span class=\"line\"><span class=\"function\">/Users/jsonli/Library/apktool/framework/1.apk, -S, </span></span><br><span class=\"line\"><span class=\"function\">/Users/jsonli/Desktop/demo/0603/app-0/app-0/res, -M, </span></span><br><span class=\"line\"><span class=\"function\">/Users/jsonli/Desktop/demo/0603/app-0/app-0/AndroidManifest.xml]</span></span><br></pre></td></tr></table></figure>\n<p>尝试在反编译时不处理资源命令加上 -r 参数<code>java -jar apktool.jar -r d ***.apk</code> 果然能够正常打包，继续完成剩下的接入吧 :)</p>\n<p><strong>3、HomeFragment$1.smali、HomeFrgment$2.smali</strong></p>\n<p><code>HomeFragment$1.smali</code>: button 点击事件实现类，登录调用处<br>\n<code>HomeFragment$2.smali</code>: gcsdk 登录回调</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;HomeFragment.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Landroid/view/View$OnClickListener;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\"> value = Lcom/example/leaderapp/ui/home/HomeFragment;-&gt;onCreateView(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\"> accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\"> name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/leaderapp/ui/home/HomeFragment;)V</span><br><span class=\"line\"> .locals <span class=\"number\">0</span></span><br><span class=\"line\"> .param p1, &quot;this$0&quot; # Lcom/example/leaderapp/ui/home/HomeFragment;</span><br><span class=\"line\"> .line <span class=\"number\">40</span></span><br><span class=\"line\"> iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment;</span><br><span class=\"line\"> invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onClick</span><span class=\"params\">(Landroid/view/View;)</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 3</span></span><br><span class=\"line\"><span class=\"function\"> .param p1, &quot;view&quot; # Landroid/view/View</span>;</span><br><span class=\"line\"> .line <span class=\"number\">43</span></span><br><span class=\"line\"> invoke-virtual &#123;p1&#125;, Landroid/view/View;-&gt;getContext()Landroid/content/Context;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;\\u767b\\u5f55&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>/<span class=\"number\">4</span> v2, <span class=\"number\">0x0</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1, v2&#125;, Landroid/widget/Toast;-&gt;makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> invoke-virtual &#123;v0&#125;, Landroid/widget/Toast;-&gt;show()V</span><br><span class=\"line\"> .line <span class=\"number\">44</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;leader&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;onClick: login&quot;</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"></span><br><span class=\"line\"># 1、调用登录接口，修改类路径、内部类（登录回调实现类）</span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;getInstance()Lcom/primer/jsonlili/core/GCSDK;</span><br><span class=\"line\"> move-result-object v0</span><br><span class=\"line\"> <span class=\"keyword\">new</span>-instance v1, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"># 内部类持有外部类引用，这里的外部类是 button 的点击事件实现类，因此传入 HomeFragment$1，而不是 HomeFragment</span><br><span class=\"line\"> invoke-direct &#123;v1, p0&#125;, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;-&gt;&lt;init&gt;(Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;)V</span><br><span class=\"line\"> invoke-virtual &#123;v0, v1&#125;, Lcom/primer/jsonlili/core/GCSDK;-&gt;login(Lcom/primer/jsonlili/callback/LoginCallback;)V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;</span><br><span class=\"line\">.<span class=\"keyword\">super</span> Ljava/lang/Object;</span><br><span class=\"line\">.source <span class=\"string\">&quot;HomeFragment.java&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 2、创建内部类文件，并把对应的登录回调代码复制过来</span><br><span class=\"line\"># 3、修改类路径 .class、.source、</span><br><span class=\"line\"># interfaces</span><br><span class=\"line\">.implements Lcom/primer/jsonlili/callback/LoginCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"># annotations</span><br><span class=\"line\">.annotation system Ldalvik/annotation/EnclosingMethod;</span><br><span class=\"line\"> value = Lcom/example/leaderapp/ui/home/HomeFragment;-&gt;onLogin(Landroid/view/View;)V</span><br><span class=\"line\">.end annotation</span><br><span class=\"line\">.annotation system Ldalvik/annotation/InnerClass;</span><br><span class=\"line\"> accessFlags = <span class=\"number\">0x0</span></span><br><span class=\"line\"> name = <span class=\"keyword\">null</span></span><br><span class=\"line\">.end annotation</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里传入的外部类是 button 点击事件实现类，因此初始化函数和 this 类型应该是 </span><br><span class=\"line\"># instance fields</span><br><span class=\"line\">.field <span class=\"keyword\">final</span> synthetic <span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># direct methods</span><br><span class=\"line\">.method constructor &lt;init&gt;(Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;)V</span><br><span class=\"line\"> .locals <span class=\"number\">0</span></span><br><span class=\"line\"> .param p1, <span class=\"string\">&quot;this$0&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"># 这里也是 HomeFragment$1</span><br><span class=\"line\"> iput-object p1, p0, Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">2</span>;-&gt;<span class=\"keyword\">this</span>$<span class=\"number\">0</span>:Lcom/example/leaderapp/ui/home/HomeFragment$<span class=\"number\">1</span>;</span><br><span class=\"line\"> invoke-direct &#123;p0&#125;, Ljava/lang/Object;-&gt;&lt;init&gt;()V</span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\"># virtual methods</span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">inLoginFail</span><span class=\"params\">(ILjava/lang/String;)</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 2</span></span><br><span class=\"line\"><span class=\"function\"> .param p1, &quot;i&quot; # I</span></span><br><span class=\"line\"><span class=\"function\"> .param p2, &quot;s&quot; # Ljava/lang/String</span>;</span><br><span class=\"line\"> .line <span class=\"number\">51</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v0, <span class=\"string\">&quot;cunzhang&quot;</span></span><br><span class=\"line\"> <span class=\"keyword\">const</span>-string v1, <span class=\"string\">&quot;inLoginFail: &quot;</span></span><br><span class=\"line\"> invoke-<span class=\"keyword\">static</span> &#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"> .line <span class=\"number\">52</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br><span class=\"line\"></span><br><span class=\"line\">.<span class=\"function\">method <span class=\"keyword\">public</span> <span class=\"title\">onLoginSuccess</span><span class=\"params\">()</span>V</span></span><br><span class=\"line\"><span class=\"function\"> .locals 2</span></span><br><span class=\"line\"><span class=\"function\"> .line 46</span></span><br><span class=\"line\"><span class=\"function\"> <span class=\"keyword\">const</span>-string v0, &quot;cunzhang&quot;</span></span><br><span class=\"line\"><span class=\"function\"> <span class=\"keyword\">const</span>-string v1, &quot;onLoginSuccess: &quot;</span></span><br><span class=\"line\"><span class=\"function\"> invoke-<span class=\"keyword\">static</span> </span>&#123;v0, v1&#125;, Landroid/util/Log;-&gt;d(Ljava/lang/String;Ljava/lang/String;)I</span><br><span class=\"line\"> .line <span class=\"number\">47</span></span><br><span class=\"line\"> <span class=\"keyword\">return</span>-<span class=\"keyword\">void</span></span><br><span class=\"line\">.end method</span><br></pre></td></tr></table></figure>\n<p><strong>4、NotificationsFragment.smali、DashboardFragment.smali</strong></p>\n<p>因为代码简单，且逻辑一致，剩下的支付和广告接口代码就不贴了</p>\n<h1>最后的最后</h1>\n<p><code>0、</code>获取 smail 代码（一般是根据 java 代码获取 smail 代码，同理根据 java 代码获取字节码，在代码量多的时候较难直接写出完整的 smail、字节码）<br>\n<code>1、</code>寻找插入点，smali 代码插入、保存、插入检验<br>\n<code>2、</code>打包、签名、运行调试查看效果（依此点击按钮，触发点击事件，运行结果和预期一致）</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/831157f13e5c535bafa42839e3f80257.png\" alt=\"image.png\"></p>\n<p>思考：</p>\n<p>A：为什么搞 smali 接入，这不是给自己找坑嘛<br>\nB：这是需求，为了解决问题；我觉得重点是可以扩展知识<br>\nA：既然你已有 apk，可以把它转换为 java 代码，在 java 代码上接入不更清晰、省事，避免盲区不好吗，还是不方便<br>\nB：好像…也 可 以❓<br>\nA：我觉得可以，AndroidFk 工具可以把 apk 直接反编译为 android 项目（若加固、加密的 apk 可能就没那么容易，那是另一个话题了）<br>\nB：也是，在 java 代码上接入方便多了<br>\nA：我又有疑问了：如果接入的第三方 sdk 是一个 aar资源文件（包含资源等文件） 而不是 jar（纯 Java 代码），接入会不会遇到其他问题<br>\nB：区别肯定是有，实操方知晓<br>\nA：下次你来一个试试<br>\nB：… …<br>\nA：这不可怕啊，持续学习，提升广度办法总比困难多</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl8ivvvsf0005feqpeiuz8491","tag_id":"cl8ivvvsh0007feqp3zgz64yv","_id":"cl8ivvvsi000bfeqp2go83fyg"},{"post_id":"cl8ivvvsg0006feqpdiqxgs94","tag_id":"cl8ivvvsi000afeqp055gehsk","_id":"cl8ivvvsj000dfeqp3kst3dcm"},{"post_id":"cl8ivvvsh0008feqp9n386k56","tag_id":"cl8ivvvsh0007feqp3zgz64yv","_id":"cl8ivvvsj000ffeqp5vz2daki"},{"post_id":"cl8ivvvsi0009feqpdjytgotk","tag_id":"cl8ivvvsj000efeqpfst84mdl","_id":"cl8ivvvsj000gfeqp1teqevtp"}],"Tag":[{"name":"字节码","_id":"cl8ivvvsh0007feqp3zgz64yv"},{"name":"笔记","_id":"cl8ivvvsi000afeqp055gehsk"},{"name":"SDK","_id":"cl8ivvvsj000efeqpfst84mdl"}]}}